
> find-contract-calls
> ts-node scripts/find-contract-calls.ts

project,file,lineNumber,line
aave-forks,subgraphs/aave-forks/protocols/aave-amm/src/mapping.ts,412,"const oracle = IPriceOracleGetter.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/aave-amm/src/mapping.ts,422,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-amm/src/mapping.ts,463,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/aave-amm/src/mapping.ts,472,"const incentiveControllerContract = AaveIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/aave-amm/src/mapping.ts,512,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-arc/src/mapping.ts,412,"const oracle = IPriceOracleGetter.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/aave-arc/src/mapping.ts,422,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-arc/src/mapping.ts,463,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/aave-arc/src/mapping.ts,472,"const incentiveControllerContract = AaveIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/aave-arc/src/mapping.ts,512,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-rwa/src/mapping.ts,410,"const oracle = IPriceOracleGetter.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/aave-rwa/src/mapping.ts,420,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-rwa/src/mapping.ts,461,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/aave-rwa/src/mapping.ts,470,"const incentiveControllerContract = AaveIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/aave-rwa/src/mapping.ts,510,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-v2/src/mapping.ts,416,"const oracle = IPriceOracleGetter.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/aave-v2/src/mapping.ts,426,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-v2/src/mapping.ts,496,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/aave-v2/src/mapping.ts,505,"const incentiveControllerContract = AaveIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/aave-v2/src/mapping.ts,547,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-v3/src/mapping.ts,600,"const oracle = AaveOracle.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/aave-v3/src/mapping.ts,624,"const oracle = IPriceOracleGetter.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/aave-v3/src/mapping.ts,634,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-v3/src/mapping.ts,701,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/protocols/aave-v3/src/mapping.ts,731,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,203,"const gTokenContract = GToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,417,"const geistFtmLP = SpookySwapOracle.bind("
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,437,"const gTokenContract = GToken.bind(Address.fromString(GFTM_ADDRESS));"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,449,"const crvFtmLP = SpookySwapOracle.bind("
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,469,"const gTokenContract = GToken.bind(Address.fromString(GFTM_ADDRESS));"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,496,"const gTokenContract = GToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,501,"const incentiveControllerContract = ChefIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/kinza-finance/src/mapping.ts,581,"const oracle = AaveOracle.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/kinza-finance/src/mapping.ts,613,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/protocols/pac-finance/src/mapping.ts,581,"const oracle = AaveOracle.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/pac-finance/src/mapping.ts,613,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital/src/mapping.ts,178,"const rTokenContract = RToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital/src/rewards.ts,41,"const incentiveController = ChefIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/radiant-capital/src/rewards.ts,129,"const pair = UniswapV2Pair.bind(Address.fromString(RDNT_WETH_Uniswap_Pair));"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital/src/rewards.ts,147,"const rToken = RToken.bind(Address.fromString(RWETH_ADDRESS));"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/mapping.ts,181,"const rTokenContract = RToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/rewards.ts,37,"const incentiveController = ChefIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/rewards.ts,128,"const rdntAddress = ERC20.bind("
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/rewards.ts,131,"const wethAddress = ERC20.bind("
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/rewards.ts,160,"const rToken = RToken.bind(Address.fromString(rewardConfig.rTokenMarket));"
aave-forks,subgraphs/aave-forks/protocols/seamless-protocol/src/mapping.ts,600,"const oracle = AaveOracle.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/seamless-protocol/src/mapping.ts,624,"const oracle = IPriceOracleGetter.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/seamless-protocol/src/mapping.ts,634,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/seamless-protocol/src/mapping.ts,701,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/protocols/seamless-protocol/src/mapping.ts,731,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/protocols/seismic/src/mapping.ts,416,"const oracle = IPriceOracleGetter.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/seismic/src/mapping.ts,426,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/seismic/src/mapping.ts,499,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/seismic/src/mapping.ts,508,"const incentiveControllerContract = AaveIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/seismic/src/mapping.ts,550,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/spark-lend/src/mapping.ts,581,"const oracle = AaveOracle.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/spark-lend/src/mapping.ts,613,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/protocols/superlend/src/mapping.ts,547,"const oracle = AaveOracle.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/superlend/src/mapping.ts,557,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/superlend/src/mapping.ts,580,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/protocols/uwu-lend/src/mapping.ts,410,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/uwu-lend/src/mapping.ts,423,"const incentiveControllerContract = ChefIncentivesController.bind("
aave-forks,subgraphs/aave-forks/protocols/uwu-lend/src/mapping.ts,517,"const oracle = IPriceOracleGetter.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/uwu-lend/src/mapping.ts,527,"const fallbackOracle = IPriceOracleGetter.bind(tryFallback.value);"
aave-forks,subgraphs/aave-forks/protocols/uwu-lend/src/mapping.ts,541,"const sushiContract = SushiSwapLP.bind(Address.fromString(UWU_WETH_LP));"
aave-forks,subgraphs/aave-forks/protocols/zerolend/src/mapping.ts,581,"const oracle = AaveOracle.bind(priceOracle);"
aave-forks,subgraphs/aave-forks/protocols/zerolend/src/mapping.ts,613,"const pool = LendingPoolContract.bind(poolAddress);"
aave-forks,subgraphs/aave-forks/src/helpers.ts,104,"const vTokenContract = AToken.bind(Address.fromBytes(market._vToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,113,"const sTokenContract = AToken.bind(Address.fromBytes(market._sToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,125,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,145,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,157,"const stableDebtTokenContract = StableDebtToken.bind("
aave-forks,subgraphs/aave-forks/src/helpers.ts,171,"const variableDebtTokenContract = VariableDebtToken.bind("
aave-forks,subgraphs/aave-forks/src/helpers.ts,191,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/mapping.ts,491,"const stableDebtContract = StableDebtToken.bind("
aave-forks,subgraphs/aave-forks/src/mapping.ts,497,"const variableDebtContract = VariableDebtToken.bind("
aave-forks,subgraphs/aave-forks/src/mapping.ts,522,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/mapping.ts,1222,"const tokenContract = ERC20.bind(asset);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,114,"const contract = ERC20.bind(tokenAddress);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,115,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,144,"const contract = ERC20.bind(tokenAddress);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,145,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,174,"const contract = ERC20.bind(tokenAddress);"
aave-governance,subgraphs/aave-governance/protocols/aave-governance/src/aave-governance-v-2.ts,113,"const contract = AaveGovernanceV2.bind(Address.fromString(contractAddress));"
aave-governance,subgraphs/aave-governance/protocols/aave-governance/src/aave-governance-v-2.ts,139,"const contract = AaveGovernanceV2.bind(contractAddress);"
aave-governance,subgraphs/aave-governance/protocols/aave-governance/src/aave-governance-v-2.ts,142,"const governanceStrategyContract = GovernanceStrategy.bind(govStratAddress);"
aave-governance,subgraphs/aave-governance/protocols/aave-governance/src/aave-governance-v-2.ts,147,"const executorContract = Executor.bind(executorAddress);"
aave-governance,subgraphs/aave-governance/protocols/dydx-governance/src/dydx-governor.ts,113,"const contract = DydxGovernor.bind(Address.fromString(contractAddress));"
aave-governance,subgraphs/aave-governance/protocols/dydx-governance/src/dydx-governor.ts,139,"const contract = DydxGovernor.bind(contractAddress);"
aave-governance,subgraphs/aave-governance/protocols/dydx-governance/src/dydx-governor.ts,142,"const governanceStrategyContract = GovernanceStrategy.bind(govStratAddress);"
aave-governance,subgraphs/aave-governance/protocols/dydx-governance/src/dydx-governor.ts,147,"const executorContract = Executor.bind(executorAddress);"
abracadabra,subgraphs/abracadabra/src/common/metrics.ts,142,"const bentoBoxContract = DegenBox.bind(Address.fromString(protocol.id));"
abracadabra,subgraphs/abracadabra/src/common/metrics.ts,143,"const degenBoxContract = DegenBox.bind("
abracadabra,subgraphs/abracadabra/src/common/metrics.ts,290,"const couldronContract = Cauldron.bind(Address.fromString(market.id));"
abracadabra,subgraphs/abracadabra/src/common/setters.ts,52,"const MarketContract = Cauldron.bind(Address.fromString(marketAddress));"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,40,"let contract = ERC20.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,41,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,69,"let contract = ERC20.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/mapping.ts,94,"const CauldronContract = Cauldron.bind(event.address);"
abracadabra,subgraphs/abracadabra/src/mapping.ts,118,"depositEvent.amount = DegenBox.bind(CauldronContract.bentoBox()).toAmount("
abracadabra,subgraphs/abracadabra/src/mapping.ts,169,"const CauldronContract = Cauldron.bind(event.address);"
abracadabra,subgraphs/abracadabra/src/mapping.ts,188,"withdrawalEvent.amount = DegenBox.bind(CauldronContract.bentoBox()).toAmount("
abracadabra,subgraphs/abracadabra/src/mapping.ts,331,"const CauldronContract = Cauldron.bind(event.address);"
abracadabra,subgraphs/abracadabra/src/mapping.ts,333,"const collateralAmount = DegenBox.bind(CauldronContract.bentoBox()).toAmount("
abracadabra,subgraphs/abracadabra/src/mapping.ts,545,"const marketPriceOracle = MarketOracle.bind("
abracadabra,subgraphs/abracadabra/src/positions.ts,188,"const cauldronContract = Cauldron.bind(marketAddress);"
across-v2,subgraphs/across-v2/src/handlers/liquidity.ts,34,"const hubPoolContract = HubPool.bind("
across-v2,subgraphs/across-v2/src/handlers/liquidity.ts,61,"const erc20 = _ERC20.bind(outputTokenAddress);"
across-v2,subgraphs/across-v2/src/handlers/liquidity.ts,117,"const hubPoolContract = HubPool.bind("
across-v2,subgraphs/across-v2/src/handlers/liquidity.ts,144,"const erc20 = _ERC20.bind(outputTokenAddress);"
across-v2,subgraphs/across-v2/src/handlers/staking.ts,44,"const acceleratingDistributorContract = AcceleratingDistributor.bind("
across-v2,subgraphs/across-v2/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
across-v2,subgraphs/across-v2/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
across-v2,subgraphs/across-v2/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
across-v2,subgraphs/across-v2/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
across-v2,subgraphs/across-v2/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
across-v2,subgraphs/across-v2/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
across-v2,subgraphs/across-v2/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
across-v2,subgraphs/across-v2/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
across-v2,subgraphs/across-v2/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
across-v2,subgraphs/across-v2/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/CurveRouter.ts,127,"const curveRegistryContract = CurveRegistryContract.bind("
across-v2,subgraphs/across-v2/src/prices/routers/CurveRouter.ts,174,"const curveRegistryContract = CurveRegistryContract.bind("
across-v2,subgraphs/across-v2/src/prices/routers/CurveRouter.ts,252,"const poolContract = CurvePoolContract.bind(poolAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/CurveRouter.ts,273,"const poolContract = CurvePoolContract.bind(poolAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/UniswapForksRouter.ts,93,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
across-v2,subgraphs/across-v2/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/util.ts,63,"const tokenContract = _ERC20.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/util.ts,73,"const tokenContract = _ERC20.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/util.ts,83,"const tokenContract = _ERC20.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/util.ts,99,"const erc20 = _ERC20.bind(tokenAddress);"
affine-restaking,subgraphs/affine-restaking/src/mappings/handlers.ts,38,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
affine-restaking,subgraphs/affine-restaking/src/mappings/handlers.ts,50,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
affine-restaking,subgraphs/affine-restaking/src/mappings/handlers.ts,79,"const erc20 = _ERC20.bind(address);"
affine-restaking,subgraphs/affine-restaking/src/mappings/handlers.ts,95,"const contract = LRTEth.bind(event.address);"
affine-restaking,subgraphs/affine-restaking/src/mappings/handlers.ts,118,"const contract = LRTEth.bind(event.address);"
affine-restaking,subgraphs/affine-restaking/src/mappings/handlers.ts,141,"const contract = LRTLinea.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/entities/market.ts,562,"const contract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/entities/price.ts,57,"const contract = SimplePriceOracle.bind("
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/entities/token.ts,15,"const contract = IERC20Detailed.bind(tokenAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/entities/token.ts,46,"const contractNameBytes = IERC20DetailedBytes.bind(contract._address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/entities/token.ts,58,"const contractSymbolBytes = IERC20DetailedBytes.bind(contract._address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,77,"const contract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,115,"const contract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,149,"const contract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,182,"const contract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,223,"const contract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,266,"const vaultContract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,272,"const configContract = ConfigurableInterestVaultConfig.bind(tryConfig.value);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,307,"const vaultContract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,336,"const configContract = ConfigurableInterestVaultConfig.bind(tryConfig.value);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,376,"const vaultContract = Vault.bind(event.address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/mappings/vault.ts,377,"const fairlaunchContract = FairLaunch.bind("
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/CurveRouter.ts,21,"const curveRegistryContract = CurveRegistryContract.bind("
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/CurveRouter.ts,47,"const poolContract = CurvePoolContract.bind(poolAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/CurveRouter.ts,102,"const curveRegistryContract = CurveRegistryContract.bind("
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/CurveRouter.ts,143,"const curveRegistryContract = CurveRegistryContract.bind("
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/CurveRouter.ts,208,"const poolContract = CurvePoolContract.bind(poolAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/CurveRouter.ts,229,"const poolContract = CurvePoolContract.bind(poolAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/common/initializers.ts,34,"const vaultContract = AmphorAsyncVault.bind(poolAddress);"
amphor,subgraphs/amphor/src/common/utils.ts,37,"const contract = ERC20.bind(address);"
amphor,subgraphs/amphor/src/common/utils.ts,57,"const vaultContract = AmphorAsyncVault.bind("
amphor,subgraphs/amphor/src/common/utils.ts,70,"const vaultContract = LRTVault.bind(Address.fromBytes(pool.getBytesID()));"
amphor,subgraphs/amphor/src/common/utils.ts,81,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
amphor,subgraphs/amphor/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
amphor,subgraphs/amphor/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
amphor,subgraphs/amphor/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
amphor,subgraphs/amphor/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
amphor,subgraphs/amphor/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
amphor,subgraphs/amphor/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
amphor,subgraphs/amphor/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
amphor,subgraphs/amphor/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
anzen-v2,subgraphs/anzen-v2/src/mappings/handlers.ts,113,"const erc20 = _ERC20.bind(address);"
anzen-v2,subgraphs/anzen-v2/src/mappings/handlers.ts,136,"const contract = USDZ.bind(event.address);"
anzen-v2,subgraphs/anzen-v2/src/mappings/handlers.ts,180,"const contract = USDZ.bind(event.address);"
anzen-v2,subgraphs/anzen-v2/src/mappings/handlers.ts,224,"const contract = USDZ.bind(event.address);"
anzen-v2,subgraphs/anzen-v2/src/mappings/handlers.ts,247,"const contract = USDZ.bind(event.address);"
anzen-v2,subgraphs/anzen-v2/src/mappings/handlers.ts,266,"const contract = USDZ.bind(event.address);"
anzen-v2,subgraphs/anzen-v2/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
anzen-v2,subgraphs/anzen-v2/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
anzen-v2,subgraphs/anzen-v2/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
anzen-v2,subgraphs/anzen-v2/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
anzen-v2,subgraphs/anzen-v2/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
anzen-v2,subgraphs/anzen-v2/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
anzen-v2,subgraphs/anzen-v2/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
anzen-v2,subgraphs/anzen-v2/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
aqua-patina,subgraphs/aqua-patina/src/mappings/handlers.ts,35,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
aqua-patina,subgraphs/aqua-patina/src/mappings/handlers.ts,64,"const erc20 = _ERC20.bind(address);"
aqua-patina,subgraphs/aqua-patina/src/mappings/handlers.ts,88,"const contract = APETH.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/common/utils.ts,79,"const tokenContract = _ERC20.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/common/utils.ts,89,"const tokenContract = _ERC20.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/common/utils.ts,99,"const tokenContract = _ERC20.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/arbitrum/transfers.ts,56,"const gatewayContract = TokenGateway.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/arbitrum/transfers.ts,107,"const erc20 = _ERC20.bind(inputTokenAddress!);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/arbitrum/transfers.ts,169,"const gatewayContract = TokenGateway.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/arbitrum/transfers.ts,220,"const erc20 = _ERC20.bind(inputTokenAddress!);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/ethereum/transfers.ts,74,"const gatewayContract = TokenGateway.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/ethereum/transfers.ts,121,"const erc20 = _ERC20.bind(inputTokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/ethereum/transfers.ts,186,"const gatewayContract = TokenGateway.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/ethereum/transfers.ts,233,"const erc20 = _ERC20.bind(inputTokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,40,"let contract = ERC20.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,41,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,69,"let contract = ERC20.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/mappings/handlers/liquidityGauge.ts,28,"const vaultContract = VaultV1Contract.bind(vaultAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/mappings/handlers/liquidityGauge.ts,56,"const gaugeContract = GaugeContract.bind(gaugeAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/mappings/handlers/liquidityGauge.ts,102,"const gaugeContract = GaugeContract.bind(gaugeAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/mappings/handlers/vault.ts,43,"const vaultContract = ArrakisVaultV1.bind(event.params.pool);"
arrakis-finance,subgraphs/arrakis-finance/src/mappings/helpers/liquidityGauge.ts,110,"const gaugeContract = GaugeContract.bind(gaugeAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/mappings/helpers/vaults.ts,86,"const vaultContract = VaultV1Contract.bind(vaultAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/mappings/helpers/vaults.ts,88,"const poolContract = PoolContract.bind(poolAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/mappings/helpers/vaults.ts,164,"const vaultContract = VaultV1Contract.bind(vaultAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/oracles/1InchOracle.ts,10,"return OneInchOracleContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/oracles/AaveOracle.ts,8,"return AaveOracleContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/UniswapRouter.ts,106,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/UniswapRouter.ts,109,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/UniswapRouter.ts,138,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/UniswapRouter.ts,175,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
aspida,subgraphs/aspida/src/mappings/handlers.ts,32,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
aspida,subgraphs/aspida/src/mappings/handlers.ts,61,"const erc20 = _ERC20.bind(address);"
aspida,subgraphs/aspida/src/mappings/handlers.ts,84,"const contract = AETH.bind("
aura-finance,subgraphs/aura-finance/src/common/getters.ts,325,"const boosterContract = Booster.bind(boosterAddr);"
aura-finance,subgraphs/aura-finance/src/common/getters.ts,366,"const boosterContract = Booster.bind(boosterAddr);"
aura-finance,subgraphs/aura-finance/src/common/getters.ts,548,"const rewardPoolContract = BaseRewardPool.bind(rewardPoolAddr);"
aura-finance,subgraphs/aura-finance/src/common/metrics.ts,269,"const poolRewardsContract = BaseRewardPool.bind(poolRewardsAddress);"
aura-finance,subgraphs/aura-finance/src/common/pools.ts,18,"const poolContract = WeightedPool.bind(poolAddress);"
aura-finance,subgraphs/aura-finance/src/common/pools.ts,31,"const stablePoolContract = StablePool.bind(poolAddress);"
aura-finance,subgraphs/aura-finance/src/common/pools.ts,48,"const balancerVaultContract = BalancerVault.bind(balancerVault);"
aura-finance,subgraphs/aura-finance/src/common/pools.ts,66,"const poolContract = WeightedPool.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/pools.ts,80,"const poolContract = StablePool.bind(poolAddress);"
aura-finance,subgraphs/aura-finance/src/common/pools.ts,111,"const poolContract = WeightedPool.bind(poolAddress);"
aura-finance,subgraphs/aura-finance/src/common/rewards.ts,290,"const rewardTokenContract = AuraToken.bind(rewardTokenAddr);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,12,"let contract = ERC20.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,13,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,43,"let contract = ERC20.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,44,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,74,"let contract = ERC20.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/mappings/handlers.ts,77,"const rewardPoolContract = BaseRewardPool.bind(rewardPoolAddr);"
aura-finance,subgraphs/aura-finance/src/mappings/handlers.ts,96,"const rewardPoolContract = BaseRewardPool.bind(rewardPoolAddr);"
aura-finance,subgraphs/aura-finance/src/mappings/helpers.ts,110,"const outputTokenContract = ERC20.bind("
aura-finance,subgraphs/aura-finance/src/mappings/helpers.ts,125,"const rewardPoolContract = BaseRewardPool.bind("
aura-finance,subgraphs/aura-finance/src/mappings/helpers.ts,173,"const outputTokenContract = ERC20.bind("
aura-finance,subgraphs/aura-finance/src/mappings/helpers.ts,188,"const rewardPoolContract = BaseRewardPool.bind("
aura-finance,subgraphs/aura-finance/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
aura-finance,subgraphs/aura-finance/src/prices/oracles/1InchOracle.ts,10,"return OneInchOracleContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/oracles/AaveOracle.ts,8,"return AaveOracleContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
aura-finance,subgraphs/aura-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
aura-finance,subgraphs/aura-finance/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
aura-finance,subgraphs/aura-finance/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/UniswapRouter.ts,109,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
aura-finance,subgraphs/aura-finance/src/prices/routers/UniswapRouter.ts,112,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
aura-finance,subgraphs/aura-finance/src/prices/routers/UniswapRouter.ts,141,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/UniswapRouter.ts,178,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
aurus,subgraphs/aurus/src/mappings/handlers.ts,41,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
aurus,subgraphs/aurus/src/mappings/handlers.ts,55,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
aurus,subgraphs/aurus/src/mappings/handlers.ts,87,"const erc20 = _ERC20.bind(address);"
aurus,subgraphs/aurus/src/mappings/handlers.ts,125,"const TMetalContract = TMetal.bind(event.address);"
axelar,subgraphs/axelar/src/mappings.ts,85,"const erc20 = _ERC20.bind(address);"
axelar,subgraphs/axelar/src/mappings.ts,93,"const erc20name = ERC20NameBytes.bind(address);"
axelar,subgraphs/axelar/src/mappings.ts,109,"const erc20symbol = ERC20SymbolBytes.bind(address);"
axelar,subgraphs/axelar/src/mappings.ts,769,"const internalERC20Contract = BurnableMintableCappedERC20.bind(tokenAddress);"
axelar,subgraphs/axelar/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
axelar,subgraphs/axelar/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
axelar,subgraphs/axelar/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
axelar,subgraphs/axelar/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
axelar,subgraphs/axelar/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
axelar,subgraphs/axelar/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
axelar,subgraphs/axelar/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
axelar,subgraphs/axelar/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
axelar,subgraphs/axelar/src/prices/routers/CurveRouter.ts,21,"const curveRegistryContract = CurveRegistryContract.bind("
axelar,subgraphs/axelar/src/prices/routers/CurveRouter.ts,47,"const poolContract = CurvePoolContract.bind(poolAddress);"
axelar,subgraphs/axelar/src/prices/routers/CurveRouter.ts,102,"const curveRegistryContract = CurveRegistryContract.bind("
axelar,subgraphs/axelar/src/prices/routers/CurveRouter.ts,143,"const curveRegistryContract = CurveRegistryContract.bind("
axelar,subgraphs/axelar/src/prices/routers/CurveRouter.ts,208,"const poolContract = CurvePoolContract.bind(poolAddress);"
axelar,subgraphs/axelar/src/prices/routers/CurveRouter.ts,229,"const poolContract = CurvePoolContract.bind(poolAddress);"
axelar,subgraphs/axelar/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
axelar,subgraphs/axelar/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
axelar,subgraphs/axelar/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
axelar,subgraphs/axelar/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
axelar,subgraphs/axelar/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
badgerdao,subgraphs/badgerdao/src/common/initializers.ts,84,"const contract = ERC20Contract.bind(address);"
badgerdao,subgraphs/badgerdao/src/common/initializers.ts,359,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,42,"const token = ERC20.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,52,"const strategyContract = StrategyContract.bind(strategyAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,65,"const strategyContract = StrategyContract.bind(strategyAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,78,"const strategyContract = StrategyContract.bind(strategyAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,92,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,106,"const controllerContract = ControllerContract.bind(controllerAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,120,"const controllerContract = ControllerContract.bind(controllerAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,145,"const strategyContract = StrategyContract.bind(strategyAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,178,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,200,"const strategyContract = StrategyContract.bind(strategyAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,208,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,233,"const strategyContract = StrategyContract.bind(strategyAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,241,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,255,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,295,"const rewardsLoggerContract = RewardsLoggerContract.bind("
badgerdao,subgraphs/badgerdao/src/mappings/rewardsLoggerMappings.ts,39,"const diggContract = DiggTokenContract.bind(constants.DIGG_TOKEN_ADDRESS);"
badgerdao,subgraphs/badgerdao/src/modules/Deposit.ts,85,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/modules/Prices.ts,8,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/modules/Prices.ts,25,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/modules/Withdraw.ts,84,"const vaultContract = VaultContract.bind(vaultAddress);"
badgerdao,subgraphs/badgerdao/src/prices/calculations/CalculationsCurve.ts,21,"CalculationsCurveContract.bind(contractAddress);"
badgerdao,subgraphs/badgerdao/src/prices/calculations/CalculationsSushiswap.ts,20,"const curveContract = CalculationsSushiContract.bind(contractAddress);"
badgerdao,subgraphs/badgerdao/src/prices/common/utils.ts,47,"const tokenContract = _ERC20.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/prices/common/utils.ts,54,"const tokenContract = _ERC20.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/prices/common/utils.ts,65,"const tokenContract = _ERC20.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/prices/oracles/AaveOracle.ts,9,"const aaveContract = AaveOracleContract.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/prices/oracles/AaveOracle.ts,27,"const aaveOracleContract = AaveOracleContract.bind(contractAddress);"
badgerdao,subgraphs/badgerdao/src/prices/oracles/ChainLinkFeed.ts,16,"const chainLinkContract = ChainLinkContract.bind(contractAddress);"
badgerdao,subgraphs/badgerdao/src/prices/oracles/InchOracle.ts,19,"const inchOracleContract = InchOracleContract.bind(contractAddress);"
badgerdao,subgraphs/badgerdao/src/prices/oracles/YearnLensOracle.ts,17,"const yearnLensContract = YearnLensContract.bind(contractAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
badgerdao,subgraphs/badgerdao/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/CurveRouter.ts,128,"const curveRegistryContract = CurveRegistryContract.bind("
badgerdao,subgraphs/badgerdao/src/prices/routers/CurveRouter.ts,175,"const curveRegistryContract = CurveRegistryContract.bind("
badgerdao,subgraphs/badgerdao/src/prices/routers/CurveRouter.ts,253,"const poolContract = CurvePoolContract.bind(poolAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/CurveRouter.ts,274,"const poolContract = CurvePoolContract.bind(poolAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/CurveRouter.ts,302,"const poolContract = CurvePoolContract.bind(tokenAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
badgerdao,subgraphs/badgerdao/src/prices/routers/UniswapForksRouter.ts,122,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/UniswapForksRouter.ts,165,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
balancer-forks,subgraphs/balancer-forks/src/common/initializers.ts,135,"const contract = ERC20Contract.bind(address);"
balancer-forks,subgraphs/balancer-forks/src/common/initializers.ts,385,"const poolContract = WeightedPoolContract.bind(poolAddress);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,45,"const token = ERC20Contract.bind(tokenAddr);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,59,"const vaultContract = VaultContract.bind(constants.VAULT_ADDRESS);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,105,"const poolContract = WeightedPoolContract.bind(poolAddress);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,129,"const poolContract = WeightedPoolContract.bind(poolAddress);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,190,"const poolContract = WeightedPoolContract.bind(poolAddress);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,263,"const poolContract = WeightedPoolContract.bind(poolAddress);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,287,"const poolContract = WeightedPoolContract.bind(poolAddress);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,303,"const feesCollectorContract = FeesCollectorContract.bind("
balancer-forks,subgraphs/balancer-forks/src/modules/Rewards.ts,19,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
balancer-forks,subgraphs/balancer-forks/src/modules/Rewards.ts,54,"const gaugeControllerContract = GaugeControllereContract.bind("
balancer-forks,subgraphs/balancer-forks/src/modules/Rewards.ts,102,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
balancer-forks,subgraphs/balancer-forks/src/modules/Rewards.ts,198,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/common/utils.ts,29,"const token = _ERC20.bind(tokenAddr);"
balancer-forks,subgraphs/balancer-forks/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
balancer-forks,subgraphs/balancer-forks/src/prices/oracles/InchOracle.ts,19,"const inchOracleContract = InchOracleContract.bind(contractAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/routers/CurveRouter.ts,20,"const curveRegistryContract = CurveRegistryContract.bind(curveRegistry);"
balancer-forks,subgraphs/balancer-forks/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/routers/UniswapForksRouter.ts,90,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/routers/UniswapForksRouter.ts,112,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/routers/UniswapForksRouter.ts,146,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bancor-v3,subgraphs/bancor-v3/src/mapping.ts,112,"const poolTokenContract = PoolToken.bind(poolTokenAddress);"
bancor-v3,subgraphs/bancor-v3/src/mapping.ts,156,"const tokenContract = ERC20.bind(Address.fromString(reserveTokenID));"
bancor-v3,subgraphs/bancor-v3/src/mapping.ts,953,"const info = BancorNetworkInfo.bind("
bancor-v3,subgraphs/bancor-v3/src/mapping.ts,988,"const info = BancorNetworkInfo.bind("
bedrock-unieth,subgraphs/bedrock-unieth/src/common/initializers.ts,69,"const tokenContract = ERC20.bind("
bedrock-unieth,subgraphs/bedrock-unieth/src/common/initializers.ts,78,"const stakingContract = Staking.bind("
bedrock-unieth,subgraphs/bedrock-unieth/src/common/initializers.ts,94,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
bedrock-unieth,subgraphs/bedrock-unieth/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/deposit.ts,31,"const strategyContract = BeefyStrategy.bind(event.address);"
beefy-finance,subgraphs/beefy-finance/src/mappings/protocol.ts,70,"BeefyStrategy.bind(Address.fromString(vault.strategy.split(""x"")[1]))"
beefy-finance,subgraphs/beefy-finance/src/mappings/protocol.ts,88,"BeefyStrategy.bind(Address.fromString(vault.strategy.split(""x"")[1]))"
beefy-finance,subgraphs/beefy-finance/src/mappings/protocol.ts,119,"BeefyStrategy.bind(Address.fromString(vault.strategy.split(""x"")[1]))"
beefy-finance,subgraphs/beefy-finance/src/mappings/token.ts,5,"const tokenContract = ERC20.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/token.ts,15,"const tokenContract = ERC20.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/token.ts,25,"const tokenContract = ERC20.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/vault.ts,42,"const strategyContract = BeefyStrategy.bind(strategyAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/vault.ts,45,"const vaultContract = BeefyVault.bind(vaultAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/vault.ts,85,"const vaultContract = BeefyVault.bind("
beefy-finance,subgraphs/beefy-finance/src/mappings/vault.ts,195,"const strategyContract = BeefyStrategy.bind(event.address);"
beefy-finance,subgraphs/beefy-finance/src/mappings/withdraw.ts,31,"const strategyContract = BeefyStrategy.bind(event.address);"
beefy-finance,subgraphs/beefy-finance/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
beefy-finance,subgraphs/beefy-finance/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
beefy-finance,subgraphs/beefy-finance/src/prices/common/utils.ts,13,"const token = ERC20.bind(tokenAddr);"
beefy-finance,subgraphs/beefy-finance/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainlinkOracle.bind(Address.fromString(oracles[i][1]));"
beefy-finance,subgraphs/beefy-finance/src/prices/oracles/ChainLinkFeed.ts,14,"return ChainlinkOracle.bind(ZERO_ADDRESS);"
beefy-finance,subgraphs/beefy-finance/src/prices/oracles/ChainLinkFeed.ts,20,"const tokenContract = ERC20.bind(tokenAddr);"
beefy-finance,subgraphs/beefy-finance/src/prices/oracles/YearnLensOracle.ts,14,"return YearnLensContract.bind(yearnLensAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
beefy-finance,subgraphs/beefy-finance/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
beefy-finance,subgraphs/beefy-finance/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
beefy-finance,subgraphs/beefy-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/SushiSwapRouter.ts,111,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/SushiSwapRouter.ts,114,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/SushiSwapRouter.ts,143,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/SushiSwapRouter.ts,177,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,108,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,111,"const uniswapFeeRouter = UniswapFeeRouterContract.bind(routerAddressV1);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,118,"const uniswapFeeRouter = UniswapFeeRouterContract.bind(routerAddressV1);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,125,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,156,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,193,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/utils/getters.ts,45,"const strategyContract = BeefyStrategy.bind(strategyAddress);"
beethovenx-sftmx,subgraphs/beethovenx-sftmx/src/mappings/handlers.ts,45,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
beethovenx-sftmx,subgraphs/beethovenx-sftmx/src/mappings/handlers.ts,74,"const erc20 = _ERC20.bind(address);"
beethovenx-sftmx,subgraphs/beethovenx-sftmx/src/mappings/handlers.ts,96,"const contract = FTMStaking.bind("
beethovenx-sftmx,subgraphs/beethovenx-sftmx/src/mappings/handlers.ts,133,"const contract = FTMStaking.bind("
belt-finance,subgraphs/belt-finance/src/common/initializers.ts,126,"const contract = ERC20Contract.bind(address);"
belt-finance,subgraphs/belt-finance/src/common/initializers.ts,348,"const vaultContract = VaultContract.bind(vaultAddress);"
belt-finance,subgraphs/belt-finance/src/common/utils.ts,33,"const token = ERC20Contract.bind(tokenAddr);"
belt-finance,subgraphs/belt-finance/src/common/utils.ts,66,"const vaultContract = VaultContract.bind(vaultAddress);"
belt-finance,subgraphs/belt-finance/src/common/utils.ts,89,"const strategyContract = StrategyContract.bind(strategyAddress);"
belt-finance,subgraphs/belt-finance/src/common/utils.ts,103,"const strategyContract = StrategyContract.bind(strategyAddress);"
belt-finance,subgraphs/belt-finance/src/common/utils.ts,133,"const strategyContract = StrategyContract.bind(underlyingStrategyAddress);"
belt-finance,subgraphs/belt-finance/src/common/utils.ts,163,"const strategyContract = StrategyContract.bind(underlyingStrategyAddress);"
belt-finance,subgraphs/belt-finance/src/mappings/masterBeltMappings.ts,13,"const masterBeltContract = MasterBelt.bind(event.address);"
belt-finance,subgraphs/belt-finance/src/mappings/masterBeltMappings.ts,32,"const masterBeltContract = MasterBelt.bind(event.address);"
belt-finance,subgraphs/belt-finance/src/modules/Deposit.ts,86,"const vaultContract = VaultContract.bind(vaultAddress);"
belt-finance,subgraphs/belt-finance/src/modules/Prices.ts,11,"const vaultContract = VaultContract.bind(vaultAddress);"
belt-finance,subgraphs/belt-finance/src/modules/Rewards.ts,18,"const strategyContract = StrategyContract.bind(strategyAddress);"
belt-finance,subgraphs/belt-finance/src/modules/Rewards.ts,35,"const masterBeltContract = MasterBeltContract.bind(masterBeltAddress);"
belt-finance,subgraphs/belt-finance/src/modules/Withdraw.ts,88,"const vaultContract = VaultContract.bind(vaultAddress);"
belt-finance,subgraphs/belt-finance/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
belt-finance,subgraphs/belt-finance/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
belt-finance,subgraphs/belt-finance/src/prices/common/utils.ts,30,"const token = _ERC20.bind(tokenAddr);"
belt-finance,subgraphs/belt-finance/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
belt-finance,subgraphs/belt-finance/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
belt-finance,subgraphs/belt-finance/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
belt-finance,subgraphs/belt-finance/src/prices/routers/CurveRouter.ts,20,"const curveRegistryContract = CurveRegistryContract.bind(curveRegistry);"
belt-finance,subgraphs/belt-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
belt-finance,subgraphs/belt-finance/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
belt-finance,subgraphs/belt-finance/src/prices/routers/UniswapForksRouter.ts,112,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
belt-finance,subgraphs/belt-finance/src/prices/routers/UniswapForksRouter.ts,146,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/handlers.ts,57,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/handlers.ts,102,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/handlers.ts,141,"const erc20 = _ERC20.bind(address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/handlers.ts,205,"const sAVAX = SAVAX.bind(event.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/handlers.ts,241,"const sAVAX = SAVAX.bind(event.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/handlers.ts,277,"const sAVAX = SAVAX.bind(event.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/helpers.ts,36,"const sAVAXContract = SAVAX.bind(pricedToken);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/handlers.ts,56,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/handlers.ts,106,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/handlers.ts,145,"const erc20 = _ERC20.bind(address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/handlers.ts,207,"const wbETH = WBETH.bind(event.address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/handlers.ts,236,"const wbETH = WBETH.bind(event.address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/helpers.ts,36,"const wbEthContract = WBETH.bind(pricedToken);"
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/helpers.ts,59,"const wbEthContract = WBETH.bind(pricedToken);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
blackwing,subgraphs/blackwing/src/mappings/handlers.ts,74,"const erc20 = _ERC20.bind(address);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,50,"const pendlePTContract = PendlePT.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,53,"const pendleSYContract = PendleSY.bind(SYCall.value);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,116,"const egEthContract = EGETH.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,132,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,146,"const wbEthContract = WBETH.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,171,"const sFraxContract = SFRAX.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,188,"const sUSDEContract = SUSDE.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
blackwing,subgraphs/blackwing/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
blackwing,subgraphs/blackwing/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
blackwing,subgraphs/blackwing/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
blackwing,subgraphs/blackwing/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
blackwing,subgraphs/blackwing/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
blackwing,subgraphs/blackwing/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
blackwing,subgraphs/blackwing/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
bob-fusion,subgraphs/bob-fusion/src/mappings/handlers.ts,98,"const erc20 = _ERC20.bind(address);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,74,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,88,"const wbEthContract = WBETH.bind(pricedToken);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,106,"const sFraxContract = SFRAX.bind(pricedToken);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,137,"const pendlePTContract = PendlePT.bind(pricedToken);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,140,"const pendleSYContract = PendleSY.bind(SYCall.value);"
bob-fusion,subgraphs/bob-fusion/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
bob-fusion,subgraphs/bob-fusion/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
bob-fusion,subgraphs/bob-fusion/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
bob-fusion,subgraphs/bob-fusion/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
bob-fusion,subgraphs/bob-fusion/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
bob-fusion,subgraphs/bob-fusion/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
bob-fusion,subgraphs/bob-fusion/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
bob-fusion,subgraphs/bob-fusion/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/handlers.ts,107,"const erc20 = _ERC20.bind(address);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,51,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,65,"const wbEthContract = WBETH.bind(pricedToken);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,83,"const sFraxContract = SFRAX.bind(pricedToken);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,115,"const pendlePTContract = PendlePT.bind(pricedToken);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,118,"const pendleSYContract = PendleSY.bind(SYCall.value);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,202,"const datafeedETHUSD = ChainlinkDataFeed.bind("
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,209,"const datafeedWSTETHETH = ChainlinkDataFeed.bind("
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
cbridge,subgraphs/cbridge/src/mappings.ts,92,"const erc20 = _ERC20.bind(address);"
cbridge,subgraphs/cbridge/src/mappings.ts,109,"const erc20name = ERC20NameBytes.bind(address);"
cbridge,subgraphs/cbridge/src/mappings.ts,126,"const erc20symbol = ERC20SymbolBytes.bind(address);"
cbridge,subgraphs/cbridge/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
cbridge,subgraphs/cbridge/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
cbridge,subgraphs/cbridge/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
cbridge,subgraphs/cbridge/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
cbridge,subgraphs/cbridge/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
cbridge,subgraphs/cbridge/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
cbridge,subgraphs/cbridge/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
cbridge,subgraphs/cbridge/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/CurveRouter.ts,21,"const curveRegistryContract = CurveRegistryContract.bind("
cbridge,subgraphs/cbridge/src/prices/routers/CurveRouter.ts,47,"const poolContract = CurvePoolContract.bind(poolAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/CurveRouter.ts,102,"const curveRegistryContract = CurveRegistryContract.bind("
cbridge,subgraphs/cbridge/src/prices/routers/CurveRouter.ts,143,"const curveRegistryContract = CurveRegistryContract.bind("
cbridge,subgraphs/cbridge/src/prices/routers/CurveRouter.ts,208,"const poolContract = CurvePoolContract.bind(poolAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/CurveRouter.ts,229,"const poolContract = CurvePoolContract.bind(poolAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/mappings/handlers.ts,63,"const erc20 = _ERC20.bind(address);"
chainlink-staking,subgraphs/chainlink-staking/src/mappings/handlers.ts,316,"const linkTokenContract = LinkToken.bind("
chainlink-staking,subgraphs/chainlink-staking/src/mappings/handlers.ts,346,"const linkTokenContract = LinkToken.bind("
chainlink-staking,subgraphs/chainlink-staking/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/mappings/handlers.ts,83,"const erc20 = _ERC20.bind(address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/mappings/handlers.ts,145,"const cbETH = CBETH.bind(event.address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/mappings/handlers.ts,174,"const cbETH = CBETH.bind(event.address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/mappings/helpers.ts,32,"const cbEthContract = CBETH.bind(pricedToken);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,113,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,138,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,209,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,227,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,246,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,265,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,299,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,338,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,369,"const auriLensContract = AuriLens.bind(AURI_LENS_CONTRACT_ADDRESS);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,474,"const erc20Contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,515,"const oracleContract = PriceOracle.bind(Address.fromString(priceOracle));"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,525,"const oracleContract = PriceOracle.bind(Address.fromString(priceOracle));"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,537,"const lpPair = Pair.bind(lpAddress);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,100,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,115,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,168,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,186,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,205,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,224,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,258,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,260,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,283,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,319,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,159,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,209,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,280,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,298,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,317,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,336,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,409,"const oracleContract = PriceOracle.bind(priceOracle);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,410,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,442,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,636,"const erc20Contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,661,"const oracleContract = PriceOracle.bind(bstnOracle);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,678,"const oracleContract = PriceOracle.bind(nearOracle);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,131,"const cTokenContract = CToken.bind(event.params.qiToken);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,157,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,210,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,228,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,247,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,266,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,302,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,304,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,339,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,477,"const oldComptroller = OldComptroller.bind(oldComptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,499,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,559,"const joePairContract = JoePair.bind(TraderJoeQiWavaxPairAddr);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,100,"const contract = CTokenContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,118,"const contract = CTokenContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,137,"const contract = CTokenContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,156,"const contract = CTokenContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,239,"const cTokenContract = CTokenContract.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,344,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,364,"const cTokenContract = CTokenContract.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,366,"const oracleContract = PriceOracle2.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,728,"const tokenContract = ERC20.bind(Address.fromString(COMP_ADDRESS));"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,759,"const troller = Comptroller.bind(Address.fromString(COMPTROLLER_ADDRESS));"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/UniswapRouter.ts,98,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/UniswapRouter.ts,101,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices.ts,114,"const priceOracle2 = PriceOracle2.bind(oracle2Address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices.ts,127,"const priceOracle1 = PriceOracle1.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices.ts,148,"const priceOracle2 = PriceOracle2.bind(oracle2Address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices.ts,159,"const priceOracle1 = PriceOracle1.bind("
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices.ts,174,"const priceOracle2 = PriceOracle2.bind(oracle2Address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,11,"let contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,41,"let contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,42,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,71,"let contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,166,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,192,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,280,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,305,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,331,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,357,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,420,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,422,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,460,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,508,"const chainlinkOracle = Oracle.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/oracles/1InchOracle.ts,10,"return OneInchOracleContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/oracles/AaveOracle.ts,8,"return AaveOracleContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/UniswapRouter.ts,106,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/UniswapRouter.ts,109,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/UniswapRouter.ts,138,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/UniswapRouter.ts,175,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,136,"const cTokenContract = CToken.bind(event.params.iToken);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,170,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,324,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,342,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,361,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,380,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,414,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,416,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,460,"const contract = stablecoin.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,527,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,667,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,673,"const distributorContract = RewardDistributor.bind("
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,692,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,148,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,163,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,216,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,234,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,253,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,272,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,306,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,308,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,357,"const rewardContract = StakingRewardsContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,376,"const rewardContract = StakingRewardsContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,395,"const rewardContract = StakingRewardsContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,418,"const erc20Contract = ERC20.bind(event.params.rewardsToken);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,505,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,550,"const poolContract = BeethovenXPoolContract.bind("
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,557,"const vaultContract = BeethovenVaultContract.bind(vaultAddressResult.value);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,125,"const cTokenContract = CToken.bind(event.params.mToken);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,152,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,215,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,234,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,254,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,274,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,312,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,314,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,352,"const comptroller = Comptroller.bind(protocolData.comptrollerAddress);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,501,"const comptroller = Comptroller.bind(protocolData.comptrollerAddress);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,562,"const lpTokenContract = SolarBeamLPToken.bind(lpAddress);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,575,"const lpTokenContract = SolarBeamLPToken.bind(lpAddress);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,588,"const lpTokenContract = AerodromeLPToken.bind(lpAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,144,"const troller = Comptroller.bind(event.params.pool.comptroller);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,234,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,258,"const underlyingContract = ERC20.bind(underlyingAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,383,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,402,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,422,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,442,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,487,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,496,"const oracleContract = PriceOracle.bind(Address.fromString(pool.priceOracle));"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,547,"const tokenContract = ERC20.bind(Address.fromString(GOHM_ADDRESS));"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,646,"const cTokenContract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,914,"const troller = FuseComptroller.bind(comptroller);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,1016,"const distributor = RewardsDistributorDelegator.bind(rewardDistributor[i]);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,1029,"const tokenContract = ERC20.bind(tryRewardToken.value);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,1117,"const priceOracle = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/UniswapRouter.ts,98,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/UniswapRouter.ts,101,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,94,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,109,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,162,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,180,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,199,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,218,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,252,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,254,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,288,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,101,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,126,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,197,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,215,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,234,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,253,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,287,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,323,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,353,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,434,"const erc20Contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,448,"const oracleContract = PriceOracle.bind(Address.fromString(priceOracle));"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,455,"const lpPair = Pair.bind(SONNE_USDC_LP);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,120,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,146,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,192,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,210,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,229,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,248,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,282,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,284,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,330,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,356,"const tokenContract = ERC20.bind(Address.fromString(TONICAddress));"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,388,"const troller = Core.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,411,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,118,"const cTokenContract = CToken.bind(event.params.vToken);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,143,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,221,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,239,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,258,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,277,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,314,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,316,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,410,"const oracleContract = PriceOracle.bind("
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,461,"const comptroller = Comptroller.bind(comptrollerAddr);"
compound-forks,subgraphs/compound-forks/src/mapping.ts,1221,"const cTokenContract = CToken.bind(Address.fromString(marketID));"
compound-forks,subgraphs/compound-forks/src/mapping.ts,2462,"const priceOracle = PriceOracle.bind("
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,89,"const cometContract = Comet.bind(event.params.cometProxy);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,239,"const cometContract = Comet.bind(event.params.cometProxy);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,269,"const cometContract = Comet.bind(event.params.cometProxy);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,303,"const cometContract = Comet.bind(event.params.cometProxy);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,471,"const cometContract = Comet.bind(event.address);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,566,"const cometContract = Comet.bind(event.address);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,584,"const cometContract = Comet.bind(event.address);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,679,"const cometContract = Comet.bind(event.address);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,715,"const cometContract = Comet.bind(event.address);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,795,"const cometContract = Comet.bind(event.address);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,821,"const cometContract = Comet.bind(event.address);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,1005,"const cometContract = Comet.bind(cometAddress);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,1019,"const rewardContract = CometRewards.bind(getRewardAddress());"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,1050,"const chainlinkContract = Chainlink.bind("
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,1121,"const cometContract = Comet.bind(cometAddress);"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,1190,"const cometContract = Comet.bind(Address.fromBytes(market.relation!));"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,1238,"const collateralERC20 = ERC20.bind(Address.fromBytes(market.inputToken));"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,96,"const contract = ERC20.bind(tokenAddress);"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,97,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,126,"const contract = ERC20.bind(tokenAddress);"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,127,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,156,"const contract = ERC20.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
concentrator,subgraphs/concentrator/src/mappings/aladdinConvexVaultMappings.ts,25,"const vaultContract = AladdinConvexVault.bind(vaultAddress);"
concentrator,subgraphs/concentrator/src/mappings/aladdinConvexVaultMappings.ts,46,"const vaultContract = AladdinConvexVault.bind(vaultAddress);"
concentrator,subgraphs/concentrator/src/mappings/aladdinConvexVaultMappings.ts,69,"const vaultContract = AladdinConvexVault.bind(vaultAddress);"
concentrator,subgraphs/concentrator/src/mappings/concentratorCvxCRVMappings.ts,21,"const vaultContract = ConcentratorCvxCRV.bind(vaultAddress);"
concentrator,subgraphs/concentrator/src/mappings/concentratorCvxCRVMappings.ts,45,"const vaultContract = ConcentratorCvxCRV.bind("
concentrator,subgraphs/concentrator/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
concentrator,subgraphs/concentrator/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
concentrator,subgraphs/concentrator/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
concentrator,subgraphs/concentrator/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
concentrator,subgraphs/concentrator/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
concentrator,subgraphs/concentrator/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
concentrator,subgraphs/concentrator/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
concentrator,subgraphs/concentrator/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,133,"const curveRegistryContract = CurveRegistryContract.bind("
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,180,"const curveRegistryContract = CurveRegistryContract.bind("
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,258,"const poolContract = CurvePoolContract.bind(poolAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,279,"const poolContract = CurvePoolContract.bind(poolAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,307,"const poolContract = CurvePoolContract.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,340,"const poolContract = CurvePoolContract.bind(poolAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
convex-finance,subgraphs/convex-finance/src/common/initializers.ts,67,"const contract = ERC20Contract.bind(address);"
convex-finance,subgraphs/convex-finance/src/common/initializers.ts,334,"const lpTokenContract = ERC20Contract.bind(poolInfo.lpToken);"
convex-finance,subgraphs/convex-finance/src/common/utils.ts,23,"const token = ERC20Contract.bind(tokenAddr);"
convex-finance,subgraphs/convex-finance/src/common/utils.ts,50,"const curveRegistryContract = CurveRegistryContract.bind(registryAddress);"
convex-finance,subgraphs/convex-finance/src/common/utils.ts,88,"const boosterContract = BoosterContract.bind("
convex-finance,subgraphs/convex-finance/src/common/utils.ts,126,"const convexTokenContract = ERC20Contract.bind("
convex-finance,subgraphs/convex-finance/src/modules/Deposit.ts,85,"const poolContract = PoolContract.bind(poolAddress);"
convex-finance,subgraphs/convex-finance/src/modules/Deposit.ts,86,"const outputTokenContract = ERC20.bind("
convex-finance,subgraphs/convex-finance/src/modules/Fees.ts,8,"const contract = BoosterContract.bind(constants.CONVEX_BOOSTER_ADDRESS);"
convex-finance,subgraphs/convex-finance/src/modules/Rewards.ts,13,"const rewardsContract = RewardPoolContract.bind(rewardTokenPool);"
convex-finance,subgraphs/convex-finance/src/modules/Rewards.ts,57,"const rewardsContract = RewardPoolContract.bind(poolRewardsAddress);"
convex-finance,subgraphs/convex-finance/src/modules/Rewards.ts,97,"const rewardsContract = RewardPoolContract.bind(poolRewardsAddress);"
convex-finance,subgraphs/convex-finance/src/modules/Rewards.ts,110,"const extraRewardContract = RewardPoolContract.bind(extraRewardPoolAddress);"
convex-finance,subgraphs/convex-finance/src/modules/Withdraw.ts,85,"const poolContract = PoolContract.bind(poolAddress);"
convex-finance,subgraphs/convex-finance/src/modules/Withdraw.ts,86,"const outputTokenContract = ERC20.bind("
convex-finance,subgraphs/convex-finance/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
convex-finance,subgraphs/convex-finance/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
convex-finance,subgraphs/convex-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
convex-finance,subgraphs/convex-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
convex-finance,subgraphs/convex-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
convex-finance,subgraphs/convex-finance/src/prices/custom/ForexTokens.ts,11,"const curveRegistry = CurveRegistry.bind("
convex-finance,subgraphs/convex-finance/src/prices/custom/ForexTokens.ts,23,"const lpTokenContract = CurvePool.bind(lpToken);"
convex-finance,subgraphs/convex-finance/src/prices/custom/ForexTokens.ts,40,"const priceOracle = ChainLinkAggregator.bind(ForexToken);"
convex-finance,subgraphs/convex-finance/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
convex-finance,subgraphs/convex-finance/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
convex-finance,subgraphs/convex-finance/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,137,"const curveRegistryContract = CurveRegistryContract.bind("
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,184,"const curveRegistryContract = CurveRegistryContract.bind("
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,263,"const poolContract = CurvePoolContract.bind(poolAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,284,"const poolContract = CurvePoolContract.bind(poolAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,312,"const poolContract = CurvePoolContract.bind(tokenAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,345,"const poolContract = CurvePoolContract.bind(poolAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
creth2,subgraphs/creth2/src/mappings/handlers.ts,36,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
creth2,subgraphs/creth2/src/mappings/handlers.ts,66,"const erc20 = _ERC20.bind(address);"
creth2,subgraphs/creth2/src/mappings/handlers.ts,92,"const contract = CRETH.bind("
creth2,subgraphs/creth2/src/mappings/handlers.ts,127,"const contract = CRETH.bind("
cryptopunks,subgraphs/cryptopunks/src/constants/utils.ts,6,"const contract = cryptopunkContract.bind("
cryptopunks,subgraphs/cryptopunks/src/constants/utils.ts,17,"const contract = cryptopunkContract.bind("
cryptopunks,subgraphs/cryptopunks/src/constants/utils.ts,23,"const contract = cryptopunkContract.bind("
curve-finance,subgraphs/curve-finance/src/common/initializers.ts,139,"const contract = ERC20Contract.bind(address);"
curve-finance,subgraphs/curve-finance/src/common/types.ts,35,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,41,"const token = ERC20Contract.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,153,"const addressProvider = AddressProviderContract.bind("
curve-finance,subgraphs/curve-finance/src/common/utils.ts,164,"const mainRegistryContract = RegistryContract.bind(mainRegistryAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,182,"const poolContract = LiquidityPoolContract.bind(poolAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,206,"const registryContract = RegistryContract.bind(registryAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,221,"const registryContract = RegistryContract.bind(registryAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,249,"const curvePool = PoolContract.bind(poolAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,283,"const registryContract = RegistryContract.bind(registryAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,308,"const registryContract = RegistryContract.bind(registryAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,319,"const curvePool = PoolContract.bind(Address.fromString(pool.id));"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,397,"const curvePool = PoolContract.bind(poolAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,449,"const registryContract = RegistryContract.bind(registryAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,460,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,477,"const registryContract = RegistryContract.bind(registryAddress);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,572,"const lpTokenContract = ERC20Contract.bind(lpTokenAddress);"
curve-finance,subgraphs/curve-finance/src/modules/Rewards.ts,28,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
curve-finance,subgraphs/curve-finance/src/modules/Rewards.ts,56,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
curve-finance,subgraphs/curve-finance/src/modules/Rewards.ts,81,"const rewardsContract = PoolRewardsContract.bind(rewardContractAddress);"
curve-finance,subgraphs/curve-finance/src/modules/Rewards.ts,97,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
curve-finance,subgraphs/curve-finance/src/modules/Rewards.ts,129,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
curve-finance,subgraphs/curve-finance/src/modules/Rewards.ts,145,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
curve-finance,subgraphs/curve-finance/src/modules/Rewards.ts,146,"const gaugeControllerContract = GaugeControllereContract.bind("
curve-finance,subgraphs/curve-finance/src/prices/calculations/CalculationsCurve.ts,21,"CalculationsCurveContract.bind(contractAddress);"
curve-finance,subgraphs/curve-finance/src/prices/calculations/CalculationsSushiswap.ts,20,"const curveContract = CalculationsSushiContract.bind(contractAddress);"
curve-finance,subgraphs/curve-finance/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/prices/common/utils.ts,70,"const tokenContract = _ERC20.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/prices/common/utils.ts,81,"const tokenContract = _ERC20.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/prices/oracles/AaveOracle.ts,9,"const aaveContract = AaveOracleContract.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/prices/oracles/AaveOracle.ts,27,"const aaveOracleContract = AaveOracleContract.bind(contractAddress);"
curve-finance,subgraphs/curve-finance/src/prices/oracles/ChainLinkFeed.ts,16,"const chainLinkContract = ChainLinkContract.bind(contractAddress);"
curve-finance,subgraphs/curve-finance/src/prices/oracles/InchOracle.ts,19,"const inchOracleContract = InchOracleContract.bind(contractAddress);"
curve-finance,subgraphs/curve-finance/src/prices/oracles/YearnLensOracle.ts,17,"const yearnLensContract = YearnLensContract.bind(contractAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/CurveRouter.ts,32,"const curveRegistryContract = CurveRegistryContract.bind("
curve-finance,subgraphs/curve-finance/src/prices/routers/CurveRouter.ts,61,"const poolContract = CurvePoolContract.bind(poolAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/CurveRouter.ts,127,"const curveRegistryContract = CurveRegistryContract.bind("
curve-finance,subgraphs/curve-finance/src/prices/routers/CurveRouter.ts,174,"const curveRegistryContract = CurveRegistryContract.bind("
curve-finance,subgraphs/curve-finance/src/prices/routers/CurveRouter.ts,248,"const poolContract = CurvePoolContract.bind(poolAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/CurveRouter.ts,269,"const poolContract = CurvePoolContract.bind(poolAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/CurveRouter.ts,297,"const poolContract = CurvePoolContract.bind(tokenAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
curve-finance,subgraphs/curve-finance/src/prices/routers/UniswapForksRouter.ts,122,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/UniswapForksRouter.ts,165,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/common/initializers.ts,35,"const poolContract = CGUSD.bind(poolAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/common/initializers.ts,57,"const poolContract = CGUSD.bind(Address.fromBytes(pool.getBytesID()));"
cygnus-finance,subgraphs/cygnus-finance/src/common/initializers.ts,68,"const contract = ERC20.bind(Address.fromString(constants.CGUSD_ADDRESS));"
cygnus-finance,subgraphs/cygnus-finance/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
deq,subgraphs/deq/src/mappings/handlers.ts,64,"const erc20 = _ERC20.bind(address);"
deq,subgraphs/deq/src/mappings/handlers.ts,81,"const contract = StakedAvail.bind(event.address);"
deq,subgraphs/deq/src/mappings/helpers.ts,48,"const uniswapPool = UniswapV3Pool.bind(address);"
deq,subgraphs/deq/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
deq,subgraphs/deq/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
deq,subgraphs/deq/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
deq,subgraphs/deq/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
deq,subgraphs/deq/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
deq,subgraphs/deq/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
deq,subgraphs/deq/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
deq,subgraphs/deq/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/mappings/handlers.ts,95,"const erc20 = _ERC20.bind(address);"
dinero-pxeth,subgraphs/dinero-pxeth/src/mappings/handlers.ts,121,"const pxETH = PXETH.bind(NetworkConfigs.getLSTAddress());"
dinero-pxeth,subgraphs/dinero-pxeth/src/mappings/handlers.ts,147,"const pxETH = PXETH.bind(NetworkConfigs.getLSTAddress());"
dinero-pxeth,subgraphs/dinero-pxeth/src/mappings/handlers.ts,173,"const pxETH = PXETH.bind(NetworkConfigs.getLSTAddress());"
dinero-pxeth,subgraphs/dinero-pxeth/src/mappings/handlers.ts,199,"const pxETH = PXETH.bind(NetworkConfigs.getLSTAddress());"
dinero-pxeth,subgraphs/dinero-pxeth/src/mappings/handlers.ts,225,"const pxETH = PXETH.bind(NetworkConfigs.getLSTAddress());"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
dopex,subgraphs/dopex/src/entities/option.ts,38,"const strikeTokenContract = SsovV3OptionsToken.bind(strikeTokenAddress);"
dopex,subgraphs/dopex/src/entities/pool.ts,54,"const ssovContract = Ssov.bind(event.address);"
dopex,subgraphs/dopex/src/entities/position.ts,51,"const ssoveContract = Ssov.bind(event.address);"
dopex,subgraphs/dopex/src/entities/token.ts,83,"const tokenContract = ERC20.bind(tokenAddress);"
dopex,subgraphs/dopex/src/entities/token.ts,93,"const tokenContract = ERC20.bind(tokenAddress);"
dopex,subgraphs/dopex/src/entities/token.ts,103,"const tokenContract = ERC20.bind(tokenAddress);"
dopex,subgraphs/dopex/src/mappings/ssov.ts,68,"const ssoveContract = Ssov.bind(event.address);"
dopex,subgraphs/dopex/src/mappings/ssov.ts,174,"const ssoveContract = Ssov.bind(event.address);"
dopex,subgraphs/dopex/src/mappings/ssov.ts,252,"const ssoveContract = Ssov.bind(event.address);"
dopex,subgraphs/dopex/src/mappings/stakingStrategy.ts,21,"const ssovContract = Ssov.bind(Address.fromBytes(pool.id));"
dopex,subgraphs/dopex/src/mappings/stakingStrategy.ts,37,"const stakingStrategyV1Contract = StakingStrategyV1.bind("
dopex,subgraphs/dopex/src/mappings/stakingStrategy.ts,51,"const stakingStrategyV2Contract = StakingStrategyV2.bind("
dopex,subgraphs/dopex/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
dopex,subgraphs/dopex/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
dopex,subgraphs/dopex/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
dopex,subgraphs/dopex/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
dopex,subgraphs/dopex/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
dopex,subgraphs/dopex/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
dopex,subgraphs/dopex/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
dopex,subgraphs/dopex/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
dopex,subgraphs/dopex/src/prices/routers/CurveRouter.ts,30,"const curveRegistryContract = CurveRegistryContract.bind("
dopex,subgraphs/dopex/src/prices/routers/CurveRouter.ts,59,"const poolContract = CurvePoolContract.bind(poolAddress);"
dopex,subgraphs/dopex/src/prices/routers/CurveRouter.ts,126,"const curveRegistryContract = CurveRegistryContract.bind("
dopex,subgraphs/dopex/src/prices/routers/CurveRouter.ts,173,"const curveRegistryContract = CurveRegistryContract.bind("
dopex,subgraphs/dopex/src/prices/routers/CurveRouter.ts,251,"const poolContract = CurvePoolContract.bind(poolAddress);"
dopex,subgraphs/dopex/src/prices/routers/CurveRouter.ts,272,"const poolContract = CurvePoolContract.bind(poolAddress);"
dopex,subgraphs/dopex/src/prices/routers/CurveRouter.ts,300,"const poolContract = CurvePoolContract.bind(tokenAddress);"
dopex,subgraphs/dopex/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
dopex,subgraphs/dopex/src/prices/routers/UniswapForksRouter.ts,92,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
dopex,subgraphs/dopex/src/prices/routers/UniswapForksRouter.ts,119,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
dopex,subgraphs/dopex/src/prices/routers/UniswapForksRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/common/getters.ts,385,"const strategyContract = Strategy.bind(poolAddress);"
eigenlayer,subgraphs/eigenlayer/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/common/tokens.ts,21,"let contract = ERC20.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/common/tokens.ts,31,"let contract = ERC20.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/mappings/handlers.ts,68,"const eigenPod = EigenPod.bind(podAddress);"
eigenlayer,subgraphs/eigenlayer/src/mappings/handlers.ts,105,"const strategyContract = Strategy.bind(strategyAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
eigenlayer,subgraphs/eigenlayer/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
eigenlayer,subgraphs/eigenlayer/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenlayer,subgraphs/eigenlayer/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenlayer,subgraphs/eigenlayer/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenlayer,subgraphs/eigenlayer/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
eigenlayer,subgraphs/eigenlayer/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
eigenlayer,subgraphs/eigenlayer/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
eigenpie,subgraphs/eigenpie/src/common/initializers.ts,55,"const poolContract = MLRT.bind(poolAddress);"
eigenpie,subgraphs/eigenpie/src/common/initializers.ts,75,"const contract = MLRT.bind(Address.fromBytes(pool.getBytesID()));"
eigenpie,subgraphs/eigenpie/src/common/initializers.ts,86,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
eigenpie,subgraphs/eigenpie/src/common/utils.ts,35,"const contract = ERC20.bind(address);"
eigenpie,subgraphs/eigenpie/src/common/utils.ts,55,"const contract = EigenConfig.bind("
eigenpie,subgraphs/eigenpie/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
eigenpie,subgraphs/eigenpie/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
eigenpie,subgraphs/eigenpie/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenpie,subgraphs/eigenpie/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenpie,subgraphs/eigenpie/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenpie,subgraphs/eigenpie/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
eigenpie,subgraphs/eigenpie/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
eigenpie,subgraphs/eigenpie/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/initializers.ts,44,"const lpTokenContract = LPTokenContract.bind("
ellipsis-finance,subgraphs/ellipsis-finance/src/common/initializers.ts,333,"const contract = ERC20Contract.bind(address);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,50,"const poolContract = PoolContract.bind(poolAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,68,"const registryContract = RegistryContract.bind(constants.REGISTRY_ADDRESS);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,78,"const factoryContract = FactoryContract.bind(constants.FACTORY_ADDRESS);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,88,"const newFactoryContract = FactoryContract.bind(newRegistryAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,97,"const newFactoryContract = FactoryContract.bind(newRegistryAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,112,"const poolContract = PoolContract.bind(poolAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,137,"const poolContract = PoolContract.bind(poolAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,153,"const poolContract = PoolContract.bind(poolAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,292,"const token = ERC20Contract.bind(tokenAddr);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,332,"const registryContract = RegistryContract.bind(constants.REGISTRY_ADDRESS);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,351,"const factoryContract = FactoryContract.bind(constants.FACTORY_ADDRESS);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,371,"const factoryContract = FactoryContract.bind(newRegistryAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,392,"const registryContract = FactoryContract.bind(newRegistryAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,429,"const factoryContract = FactoryContract.bind(constants.FACTORY_ADDRESS);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,430,"const registryContract = RegistryContract.bind(constants.REGISTRY_ADDRESS);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,446,"const poolContract = PoolContract.bind(poolAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,498,"const lpTokenContract = LPTokenContract.bind(lpTokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/modules/Rewards.ts,20,"const stakingContract = StakingContract.bind("
ellipsis-finance,subgraphs/ellipsis-finance/src/modules/Rewards.ts,81,"const stakingContractV2 = StakingContractV2.bind("
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/CurveRouter.ts,21,"const curveRegistryContract = CurveRegistryContract.bind("
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/CurveRouter.ts,47,"const poolContract = CurvePoolContract.bind(poolAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/CurveRouter.ts,102,"const curveRegistryContract = CurveRegistryContract.bind("
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/CurveRouter.ts,143,"const curveRegistryContract = CurveRegistryContract.bind("
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/CurveRouter.ts,208,"const poolContract = CurvePoolContract.bind(poolAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/CurveRouter.ts,229,"const poolContract = CurvePoolContract.bind(poolAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
erc20,subgraphs/erc20/src/mappings/token.ts,37,"let erc20 = ERC20.bind(event.address);"
erc20,subgraphs/erc20/src/mappings/token.ts,200,"let totalSupply = ERC20.bind(event.address).try_totalSupply();"
erc20,subgraphs/erc20/src/mappings/token.ts,245,"let totalSupply = ERC20.bind(event.address).try_totalSupply();"
erc721-holders,subgraphs/erc721-holders/src/mappings/collection.ts,40,"let contract = ERC721.bind(event.address);"
erc721-metadata,subgraphs/erc721-metadata/src/mappings/collection.ts,19,"let contract = ERC721.bind(event.address);"
etherfi,subgraphs/etherfi/src/common/initializers.ts,116,"const poolContract = LiquidityPool.bind(Address.fromBytes(pool.getBytesID()));"
etherfi,subgraphs/etherfi/src/common/initializers.ts,127,"const contract = ERC20.bind(Address.fromString(constants.EETH_ADDRESS));"
etherfi,subgraphs/etherfi/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
etherfi,subgraphs/etherfi/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
etherfi,subgraphs/etherfi/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
etherfi,subgraphs/etherfi/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
etherfi,subgraphs/etherfi/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
etherfi,subgraphs/etherfi/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
etherfi,subgraphs/etherfi/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
etherfi,subgraphs/etherfi/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
etherfi,subgraphs/etherfi/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,9,"const contract = ERC20.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,15,"const bytesContract = ERC20NameBytes.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,26,"const contract = ERC20.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,32,"const bytesContract = ERC20SymbolBytes.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,43,"const contract = ERC20.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,54,"const contract = ERC20.bind(address);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,121,"const erc20Contract = ERC20.bind(event.params.underlying);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,125,"const eToken = ERC20.bind(eTokenAddress);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,128,"const dToken = ERC20.bind(dTokenAddress);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,187,"const eulerContract = Euler.bind(Address.fromString(EULER_ADDRESS));"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,252,"const dToken = ERC20.bind(dTokenAddress);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,364,"const marketContract = MarketsContract.bind(event.address);"
euler-finance,subgraphs/euler-finance/src/mappings/helpers.ts,225,"const execProxyContract = Exec.bind(execProxyAddress);"
euler-finance,subgraphs/euler-finance/src/mappings/helpers.ts,1096,"const eulerContract = Euler.bind(Address.fromString(EULER_ADDRESS));"
flat-money,subgraphs/flat-money/src/mappings/handlers.ts,41,"const datafeedETHUSD = ChainlinkDataFeed.bind("
flat-money,subgraphs/flat-money/src/mappings/handlers.ts,48,"const datafeedRETHETH = ChainlinkDataFeed.bind("
flat-money,subgraphs/flat-money/src/mappings/handlers.ts,79,"const erc20 = _ERC20.bind(address);"
flat-money,subgraphs/flat-money/src/mappings/handlers.ts,130,"const contract = UNIT.bind(event.address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/mappings/handlers.ts,53,"const erc20 = _ERC20.bind(address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/mappings/handlers.ts,116,"const sfrxETH = SFRXETH.bind(Address.fromBytes(lst.id));"
frax-ether-staking,subgraphs/frax-ether-staking/src/mappings/handlers.ts,143,"const sfrxETH = SFRXETH.bind(Address.fromBytes(lst.id));"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
friend-tech,subgraphs/friend-tech/src/common/prices.ts,14,"const chainLinkAggregator = ChainLinkAggregator.bind("
fx-protocol,subgraphs/fx-protocol/src/common/initializers.ts,56,"const contract = TreasuryV2.bind(poolAddress);"
fx-protocol,subgraphs/fx-protocol/src/common/initializers.ts,80,"const contract = TreasuryV2.bind(Address.fromBytes(pool.getBytesID()));"
fx-protocol,subgraphs/fx-protocol/src/common/initializers.ts,96,"const contract = ERC20.bind(Address.fromBytes(pool.pool.outputToken!));"
fx-protocol,subgraphs/fx-protocol/src/common/initializers.ts,125,"const poolManagerContract = PoolManagerContract.bind("
fx-protocol,subgraphs/fx-protocol/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
fx-protocol,subgraphs/fx-protocol/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
fx-protocol,subgraphs/fx-protocol/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
fx-protocol,subgraphs/fx-protocol/src/prices/common/utils.ts,49,"const tokenContract = ERC20.bind(tokenAddr);"
fx-protocol,subgraphs/fx-protocol/src/prices/common/utils.ts,56,"const tokenContract = ERC20.bind(tokenAddr);"
fx-protocol,subgraphs/fx-protocol/src/prices/common/utils.ts,67,"const tokenContract = ERC20.bind(tokenAddr);"
fx-protocol,subgraphs/fx-protocol/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
fx-protocol,subgraphs/fx-protocol/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
fx-protocol,subgraphs/fx-protocol/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
gains-trade,subgraphs/gains-trade/src/mappings/handlers.ts,72,"const erc20 = _ERC20.bind(address);"
gains-trade,subgraphs/gains-trade/src/mappings/helpers.ts,66,"const storageContract = Storage.bind(NetworkConfigs.getStorageAddress());"
gains-trade,subgraphs/gains-trade/src/mappings/helpers.ts,100,"const pairInfoContract = PairInfo.bind(NetworkConfigs.getPairInfoAddress());"
gains-trade,subgraphs/gains-trade/src/mappings/helpers.ts,129,"const vaultContract = Vault.bind(NetworkConfigs.getVaultAddress());"
gains-trade,subgraphs/gains-trade/src/mappings/helpers.ts,160,"const pairStorageContract = PairStorage.bind("
gains-trade,subgraphs/gains-trade/src/mappings/helpers.ts,232,"const pairStorageContract = PairStorage.bind("
gains-trade,subgraphs/gains-trade/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
gains-trade,subgraphs/gains-trade/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
gains-trade,subgraphs/gains-trade/src/prices/calculations/CalculationsUniswapV2.ts,22,"const uniswapFactoryContract = UniswapFactoryContract.bind("
gains-trade,subgraphs/gains-trade/src/prices/calculations/CalculationsUniswapV2.ts,43,"const uniswapPairContract = UniswapPairContract.bind(uniswapPairAddress);"
gains-trade,subgraphs/gains-trade/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
gains-trade,subgraphs/gains-trade/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
gains-trade,subgraphs/gains-trade/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
gains-trade,subgraphs/gains-trade/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
gains-trade,subgraphs/gains-trade/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
gains-trade,subgraphs/gains-trade/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/CurveRouter.ts,21,"const curveRegistryContract = CurveRegistryContract.bind("
gains-trade,subgraphs/gains-trade/src/prices/routers/CurveRouter.ts,47,"const poolContract = CurvePoolContract.bind(poolAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/CurveRouter.ts,102,"const curveRegistryContract = CurveRegistryContract.bind("
gains-trade,subgraphs/gains-trade/src/prices/routers/CurveRouter.ts,143,"const curveRegistryContract = CurveRegistryContract.bind("
gains-trade,subgraphs/gains-trade/src/prices/routers/CurveRouter.ts,208,"const poolContract = CurvePoolContract.bind(poolAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/CurveRouter.ts,229,"const poolContract = CurvePoolContract.bind(poolAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,40,"let contract = ERC20.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,41,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,69,"let contract = ERC20.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/mappings/handlers.ts,30,"let hypervisorContract = HypervisorContract.bind(event.params.hype);"
gamma-strategies,subgraphs/gamma-strategies/src/mappings/helpers/financials.ts,27,"let hypeContract = HypervisorContract.bind(event.address);"
gamma-strategies,subgraphs/gamma-strategies/src/mappings/helpers/vaults.ts,66,"let hypeContract = HypervisorContract.bind(vaultAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/mappings/helpers/vaults.ts,114,"const hypeContract = HypervisorContract.bind(vaultAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/calculations/CalculationsCurve.ts,8,"return CalculationsCurveContract.bind(constants.CURVE_CALCULATIONS_ADDRESS_MAP.get(network)!);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/calculations/CalculationsSushiswap.ts,8,"return CalculationsSushiContract.bind(constants.SUSHISWAP_CALCULATIONS_ADDRESS_MAP.get(network)!);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/common/utils.ts,10,"const token = _ERC20.bind(tokenAddr);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind(constants.CHAIN_LINK_CONTRACT_ADDRESS.get(network));"
gamma-strategies,subgraphs/gamma-strategies/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind(Address.fromString(constants.YEARN_LENS_CONTRACT_ADDRESS.get(network)));"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/CurveRouter.ts,12,"const curveRegistry = CurveRegistryContract.bind(constants.CURVE_REGISTRY_ADDRESS_MAP.get(network)!);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/CurveRouter.ts,35,"const curvePoolRegistry = CurvePoolRegistryContract.bind(constants.CURVE_POOL_REGISTRY_ADDRESS_MAP.get(network)!);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/CurveRouter.ts,105,"const curveRegistry = CurveRegistryContract.bind(constants.CURVE_REGISTRY_ADDRESS_MAP.get(network)!);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/SushiSwapRouter.ts,16,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/SushiSwapRouter.ts,79,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/SushiSwapRouter.ts,82,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/SushiSwapRouter.ts,105,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/SushiSwapRouter.ts,124,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/UniswapRouter.ts,17,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/UniswapRouter.ts,83,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/UniswapRouter.ts,86,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/UniswapRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/UniswapRouter.ts,134,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/mappings/handlers.ts,90,"const erc20 = _ERC20.bind(address);"
gaurda-staking,subgraphs/gaurda-staking/src/mappings/handlers.ts,113,"const gETH = GETH.bind(event.address);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
geode,subgraphs/geode/src/mappings/handlers.ts,51,"const gAVAX = GAVAX.bind(NetworkConfigs.getLSTAddress());"
geode,subgraphs/geode/src/mappings/handlers.ts,60,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
geode,subgraphs/geode/src/mappings/handlers.ts,100,"const erc20 = _ERC20.bind(address);"
geode,subgraphs/geode/src/mappings/handlers.ts,122,"const contract = Portal.bind(event.address);"
geode,subgraphs/geode/src/mappings/handlers.ts,148,"const gAVAX = GAVAX.bind(NetworkConfigs.getLSTAddress());"
geode,subgraphs/geode/src/mappings/handlers.ts,174,"const gAVAX = GAVAX.bind(NetworkConfigs.getLSTAddress());"
geode,subgraphs/geode/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
geode,subgraphs/geode/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
geode,subgraphs/geode/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
geode,subgraphs/geode/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
geode,subgraphs/geode/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
geode,subgraphs/geode/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
geode,subgraphs/geode/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
geode,subgraphs/geode/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
gmx-forks,subgraphs/gmx-forks/src/common/utils.ts,136,"const vaultContract = Vault.bind(constants.VAULT_ADDRESS);"
gmx-forks,subgraphs/gmx-forks/src/mappings/rewardDistributor.ts,23,"const rewardDistributorContract = RewardDistributor.bind(event.address);"
gmx-forks,subgraphs/gmx-forks/src/modules/position.ts,223,"const vaultContract = Vault.bind(Address.fromBytes(constants.VAULT_ADDRESS));"
gmx-forks,subgraphs/gmx-forks/src/modules/token.ts,15,"const tokenContract = _ERC20.bind(address);"
gmx-forks,subgraphs/gmx-forks/src/prices/calculations/CalculationsCurve.ts,21,"CalculationsCurveContract.bind(contractAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/calculations/CalculationsSushiswap.ts,20,"const curveContract = CalculationsSushiContract.bind(contractAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
gmx-forks,subgraphs/gmx-forks/src/prices/common/utils.ts,70,"const tokenContract = _ERC20.bind(tokenAddr);"
gmx-forks,subgraphs/gmx-forks/src/prices/common/utils.ts,81,"const tokenContract = _ERC20.bind(tokenAddr);"
gmx-forks,subgraphs/gmx-forks/src/prices/oracles/AaveOracle.ts,17,"const aaveOracleContract = AaveOracleContract.bind(contractAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/oracles/ChainLinkFeed.ts,16,"const chainLinkContract = ChainLinkContract.bind(contractAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/oracles/InchOracle.ts,19,"const inchOracleContract = InchOracleContract.bind(contractAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/oracles/YearnLensOracle.ts,17,"const yearnLensContract = YearnLensContract.bind(contractAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/CurveRouter.ts,30,"const curveRegistryContract = CurveRegistryContract.bind("
gmx-forks,subgraphs/gmx-forks/src/prices/routers/CurveRouter.ts,59,"const poolContract = CurvePoolContract.bind(poolAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/CurveRouter.ts,129,"const curveRegistryContract = CurveRegistryContract.bind("
gmx-forks,subgraphs/gmx-forks/src/prices/routers/CurveRouter.ts,176,"const curveRegistryContract = CurveRegistryContract.bind("
gmx-forks,subgraphs/gmx-forks/src/prices/routers/CurveRouter.ts,254,"const poolContract = CurvePoolContract.bind(poolAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/CurveRouter.ts,275,"const poolContract = CurvePoolContract.bind(poolAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/CurveRouter.ts,303,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/UniswapForksRouter.ts,100,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/UniswapForksRouter.ts,128,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/UniswapForksRouter.ts,171,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,59,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,86,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,117,"const erc20 = _ERC20.bind(address);"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,143,"const ggAVAX = GGAVAX.bind(NetworkConfigs.getLSTAddress());"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,171,"const ggAVAX = GGAVAX.bind(NetworkConfigs.getLSTAddress());"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,199,"const ggAVAX = GGAVAX.bind(NetworkConfigs.getLSTAddress());"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,227,"const ggAVAX = GGAVAX.bind(NetworkConfigs.getLSTAddress());"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,276,"const mm = MinipoolManager.bind(event.address);"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,301,"const mm = MinipoolManager.bind(event.address);"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,326,"const mm = MinipoolManager.bind(event.address);"
gogopool,subgraphs/gogopool/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
gogopool,subgraphs/gogopool/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
gogopool,subgraphs/gogopool/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
gogopool,subgraphs/gogopool/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
gogopool,subgraphs/gogopool/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
gogopool,subgraphs/gogopool/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
gogopool,subgraphs/gogopool/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
gogopool,subgraphs/gogopool/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
goldfinch,subgraphs/goldfinch/src/common/getters.ts,85,"const contract = ERC20.bind(tokenAddr);"
goldfinch,subgraphs/goldfinch/src/common/getters.ts,165,"const poolContract = TranchedPoolContract.bind("
goldfinch,subgraphs/goldfinch/src/common/getters.ts,641,"const pairContract = UniswapV2Pair.bind(Address.fromString(pairAddress));"
goldfinch,subgraphs/goldfinch/src/common/helpers.ts,577,"const contract = MigratedTranchedPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/common/utils.ts,64,"const goldfinchConfigContract = GoldfinchConfig.bind(contract.config());"
goldfinch,subgraphs/goldfinch/src/entities/backer_rewards.ts,41,"const contract = BackerRewardsContract.bind(contractAddress);"
goldfinch,subgraphs/goldfinch/src/entities/credit_line.ts,32,"const contract = CreditLineContract.bind(address);"
goldfinch,subgraphs/goldfinch/src/entities/helpers.ts,78,"const fixedLeverageRatioStrategyContract = FixedLeverageRatioStrategy.bind("
goldfinch,subgraphs/goldfinch/src/entities/helpers.ts,86,"const seniorPoolContract = SeniorPoolContract.bind(seniorPoolAddress);"
goldfinch,subgraphs/goldfinch/src/entities/senior_pool.ts,74,"const seniorPoolContract = SeniorPoolContract.bind(seniorPoolAddress);"
goldfinch,subgraphs/goldfinch/src/entities/senior_pool.ts,75,"const fidu_contract = FiduContract.bind("
goldfinch,subgraphs/goldfinch/src/entities/senior_pool.ts,78,"const usdc_contract = UsdcContract.bind("
goldfinch,subgraphs/goldfinch/src/entities/staking_rewards.ts,34,"const contract = StakingRewardsContract.bind(contractAddress);"
goldfinch,subgraphs/goldfinch/src/entities/tranched_pool.ts,51,"const contract = TranchedPoolContract.bind(address);"
goldfinch,subgraphs/goldfinch/src/entities/tranched_pool.ts,132,"const poolContract = TranchedPoolContract.bind(address);"
goldfinch,subgraphs/goldfinch/src/entities/tranched_pool.ts,133,"const goldfinchConfigContract = GoldfinchConfigContract.bind("
goldfinch,subgraphs/goldfinch/src/entities/tranched_pool.ts,600,"const backerRewardsContract = BackerRewardsContract.bind("
goldfinch,subgraphs/goldfinch/src/entities/tranched_pool.ts,625,"const tranchedPoolContract = TranchedPoolContract.bind("
goldfinch,subgraphs/goldfinch/src/entities/zapper.ts,19,"const tranchedPoolContract = TranchedPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/entities/zapper.ts,24,"const seniorPoolContract = SeniorPoolContract.bind(seniorPoolAddress);"
goldfinch,subgraphs/goldfinch/src/entities/zapper.ts,40,"const zapperContract = ZapperContract.bind(event.params.owner);"
goldfinch,subgraphs/goldfinch/src/entities/zapper.ts,51,"const tranchedPoolContract = TranchedPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/entities/zapper.ts,56,"const seniorPoolContract = SeniorPoolContract.bind(seniorPoolAddress);"
goldfinch,subgraphs/goldfinch/src/entities/zapper.ts,83,"const tranchedPoolContract = PoolTokensContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/entities/zapper.ts,88,"const seniorPoolContract = SeniorPoolContract.bind(seniorPoolAddress);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/callable_loan.ts,29,"const poolContract = CallableLoanContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/callable_loan.ts,44,"const callableLoanContract = CallableLoanContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/callable_loan.ts,74,"const callableLoanContract = CallableLoanContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/callable_loan.ts,111,"const callableLoanContract = CallableLoanContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/callable_loan.ts,155,"const callableLoanContract = CallableLoanContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/callable_loan.ts,204,"const callableLoanContract = CallableLoanContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/callable_loan.ts,215,"const callableLoanContract = CallableLoanContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/callable_loan.ts,221,"const callableLoanContract = CallableLoanContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/helpers.ts,20,"const callableLoanContract = CallableLoanContract.bind(address);"
goldfinch,subgraphs/goldfinch/src/mappings/callable_loan/helpers.ts,99,"const callableLoanContract = CallableLoanContract.bind("
goldfinch,subgraphs/goldfinch/src/mappings/community_rewards.ts,17,"const communityRewardsContract = CommunityRewardsContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/goldfinch_factory.ts,34,"const contract = GoldfinchFactory.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/goldfinch_factory.ts,62,"const tranchedPoolContract = TranchedPoolContract.bind(poolAddress);"
goldfinch,subgraphs/goldfinch/src/mappings/goldfinch_factory.ts,63,"const configContract = GoldfinchConfig.bind(tranchedPoolContract.config());"
goldfinch,subgraphs/goldfinch/src/mappings/goldfinch_factory.ts,103,"const contract = MigratedTranchedPoolContract.bind(event.params.pool);"
goldfinch,subgraphs/goldfinch/src/mappings/helpers.ts,41,"const configContract = GoldfinchConfigContract.bind(configAddress);"
goldfinch,subgraphs/goldfinch/src/mappings/helpers.ts,56,"const creditLineContract = CreditLineContract.bind(creditLineAddress);"
goldfinch,subgraphs/goldfinch/src/mappings/helpers.ts,113,"const poolTokensContract = PoolTokensContract.bind("
goldfinch,subgraphs/goldfinch/src/mappings/helpers.ts,194,"const creditLineContract = CreditLineContract.bind("
goldfinch,subgraphs/goldfinch/src/mappings/helpers.ts,236,"const creditLineContract = CreditLineContract.bind("
goldfinch,subgraphs/goldfinch/src/mappings/helpers.ts,311,"const creditLineContract = CreditLineContract.bind("
goldfinch,subgraphs/goldfinch/src/mappings/membership/membership_collector.ts,66,"const membershipVaultContract = MembershipVault.bind("
goldfinch,subgraphs/goldfinch/src/mappings/senior_pool.ts,75,"const seniorPoolContract = SeniorPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/senior_pool.ts,85,"const fiduContract = FiduContract.bind("
goldfinch,subgraphs/goldfinch/src/mappings/senior_pool.ts,199,"const seniorPoolContract = SeniorPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/senior_pool.ts,212,"const fiduContract = FiduContract.bind(Address.fromString(FIDU_ADDRESS));"
goldfinch,subgraphs/goldfinch/src/mappings/senior_pool.ts,290,"const seniorPoolContract = SeniorPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/senior_pool.ts,402,"const seniorPoolContract = SeniorPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/senior_pool.ts,488,"const seniorPoolContract = SeniorPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/senior_pool.ts,557,"const seniorPoolContract = SeniorPoolContract.bind(seniorPoolAddress);"
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,65,"const creditLineContract = CreditLine.bind(event.params.newCreditLine);"
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,82,"const poolContract = TranchedPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,146,"const tranchedPoolContract = TranchedPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,185,"const tranchedPoolContract = TranchedPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,186,"const goldfinchConfigContract = GoldfinchConfigContract.bind("
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,265,"TranchedPoolContract.bind(event.address)"
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,302,"const tranchedPoolContract = TranchedPoolContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,312,"const configContract = GoldfinchConfigContract.bind("
goldfinch,subgraphs/goldfinch/src/mappings/tranched_pool.ts,322,"const creditLineContract = CreditLineContract.bind(creditLineAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/ampleforth-governance/src/GovernorBravoDelegate.ts,84,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/ampleforth-governance/src/GovernorBravoDelegate.ts,142,"const contract = GovernorBravoDelegate.bind("
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/ampleforth-governance/src/GovernorBravoDelegate.ts,164,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/compound-governance/src/governor-bravo-delegate.ts,84,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/compound-governance/src/governor-bravo-delegate.ts,141,"const contract = GovernorBravoDelegate.bind("
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/compound-governance/src/governor-bravo-delegate.ts,163,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/compound-governance-v1/src/governor-alpha.ts,71,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/compound-governance-v1/src/governor-alpha.ts,110,"const contract = GovernorAlpha.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/compound-governance-v1/src/governor-alpha.ts,130,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/cryptex-governance/src/GovernorBeta.ts,72,"const contract = GovernorBeta.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/cryptex-governance/src/GovernorBeta.ts,112,"const contract = GovernorBeta.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/cryptex-governance/src/GovernorBeta.ts,132,"const contract = GovernorBeta.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/gitcoin-governance/src/GovernorAlpha.ts,72,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/gitcoin-governance/src/GovernorAlpha.ts,112,"const contract = GovernorAlpha.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/gitcoin-governance/src/GovernorAlpha.ts,132,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/hifi-governance/src/governor-bravo-delegate.ts,84,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/hifi-governance/src/governor-bravo-delegate.ts,141,"const contract = GovernorBravoDelegate.bind("
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/hifi-governance/src/governor-bravo-delegate.ts,163,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/idle-governance/src/GovernorBravoDelegate.ts,84,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/idle-governance/src/GovernorBravoDelegate.ts,142,"const contract = GovernorBravoDelegate.bind("
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/idle-governance/src/GovernorBravoDelegate.ts,164,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/idle-governance-v1/src/governor-alpha.ts,71,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/idle-governance-v1/src/governor-alpha.ts,110,"const contract = GovernorAlpha.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/idle-governance-v1/src/governor-alpha.ts,130,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/indexed-governance/src/GovernorAlpha.ts,72,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/indexed-governance/src/GovernorAlpha.ts,112,"const contract = GovernorAlpha.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/indexed-governance/src/GovernorAlpha.ts,132,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/lilnouns-governance/src/lilnouns-dao.ts,107,"const contract = NounsDAOLogicV2.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/lilnouns-governance/src/lilnouns-dao.ts,164,"const contract = NounsDAOLogicV2.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/lilnouns-governance/src/lilnouns-dao.ts,187,"const contract = NounsDAOLogicV2.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/nouns-governance/src/nouns-dao.ts,107,"const contract = NounsDAOLogicV2.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/nouns-governance/src/nouns-dao.ts,164,"const contract = NounsDAOLogicV2.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/nouns-governance/src/nouns-dao.ts,184,"const contract = NounsDAOLogicV2.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/ooki-governance/src/governor-bravo-delegate.ts,84,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/ooki-governance/src/governor-bravo-delegate.ts,141,"const contract = GovernorBravoDelegate.bind("
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/ooki-governance/src/governor-bravo-delegate.ts,164,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/pooltogether-governance/src/GovernorAlpha.ts,72,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/pooltogether-governance/src/GovernorAlpha.ts,112,"const contract = GovernorAlpha.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/pooltogether-governance/src/GovernorAlpha.ts,132,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/radicle-governance/src/Governor.ts,72,"const contract = Governor.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/radicle-governance/src/Governor.ts,112,"const contract = Governor.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/radicle-governance/src/Governor.ts,132,"const contract = Governor.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/reflexer-governance/src/GovernorBravo.ts,93,"const contract = GovernorBravo.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/reflexer-governance/src/GovernorBravo.ts,151,"const contract = GovernorBravo.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/reflexer-governance/src/GovernorBravo.ts,171,"const contract = GovernorBravo.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance/src/governor-bravo-delegate.ts,84,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance/src/governor-bravo-delegate.ts,141,"const contract = GovernorBravoDelegate.bind("
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance/src/governor-bravo-delegate.ts,163,"const contract = GovernorBravoDelegate.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance-v1/src/governor-alpha.ts,71,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance-v1/src/governor-alpha.ts,110,"const contract = GovernorAlpha.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance-v1/src/governor-alpha.ts,130,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance-v2/src/governor-alpha.ts,71,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance-v2/src/governor-alpha.ts,110,"const contract = GovernorAlpha.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/uniswap-governance-v2/src/governor-alpha.ts,130,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/unslashed-governance/src/GovernorAlpha.ts,72,"const contract = GovernorAlpha.bind(contractAddress);"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/unslashed-governance/src/GovernorAlpha.ts,112,"const contract = GovernorAlpha.bind(Address.fromString(contractAddress));"
governor-alpha-bravo,subgraphs/governor-alpha-bravo/protocols/unslashed-governance/src/GovernorAlpha.ts,132,"const contract = GovernorAlpha.bind(contractAddress);"
gudchain,subgraphs/gudchain/src/mappings/handlers.ts,94,"const erc20 = _ERC20.bind(address);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,74,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,88,"const wbEthContract = WBETH.bind(pricedToken);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,106,"const sFraxContract = SFRAX.bind(pricedToken);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,137,"const pendlePTContract = PendlePT.bind(pricedToken);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,140,"const pendleSYContract = PendleSY.bind(SYCall.value);"
gudchain,subgraphs/gudchain/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
gudchain,subgraphs/gudchain/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
gudchain,subgraphs/gudchain/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
gudchain,subgraphs/gudchain/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
gudchain,subgraphs/gudchain/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
gudchain,subgraphs/gudchain/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
gudchain,subgraphs/gudchain/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
gudchain,subgraphs/gudchain/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
hop-protocol,subgraphs/hop-protocol/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
hop-protocol,subgraphs/hop-protocol/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
hop-protocol,subgraphs/hop-protocol/src/prices/index.ts,116,"const uniSwapPair = UniswapV3.bind("
hop-protocol,subgraphs/hop-protocol/src/prices/index.ts,159,"const uniSwapPair = UniswapV3.bind("
hop-protocol,subgraphs/hop-protocol/src/prices/index.ts,198,"const uniSwapPair = UniswapPair.bind("
hop-protocol,subgraphs/hop-protocol/src/prices/index.ts,315,"const uniSwapPair = UniswapPair.bind("
hop-protocol,subgraphs/hop-protocol/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
hop-protocol,subgraphs/hop-protocol/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/CurveRouter.ts,23,"const curveRegistryContract = CurveRegistryContract.bind("
hop-protocol,subgraphs/hop-protocol/src/prices/routers/CurveRouter.ts,49,"const poolContract = CurvePoolContract.bind(poolAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/CurveRouter.ts,104,"const curveRegistryContract = CurveRegistryContract.bind("
hop-protocol,subgraphs/hop-protocol/src/prices/routers/CurveRouter.ts,145,"const curveRegistryContract = CurveRegistryContract.bind("
hop-protocol,subgraphs/hop-protocol/src/prices/routers/CurveRouter.ts,210,"const poolContract = CurvePoolContract.bind(poolAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/CurveRouter.ts,231,"const poolContract = CurvePoolContract.bind(poolAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/CurveRouter.ts,257,"const poolContract = CurvePoolContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapForksRouter.ts,88,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapForksRouter.ts,111,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapForksRouter.ts,150,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapV2.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapV2.ts,91,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapV2.ts,114,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapV2.ts,153,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/sdk/util/rewards.ts,455,"const Reward = L2_Reward.bind(event.address);"
hop-protocol,subgraphs/hop-protocol/src/sdk/util/tokens.ts,21,"const Amm = L2_Amm.bind(ammAddress);"
hord-fi,subgraphs/hord-fi/src/mappings/handlers.ts,33,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
hord-fi,subgraphs/hord-fi/src/mappings/handlers.ts,62,"const erc20 = _ERC20.bind(address);"
hord-fi,subgraphs/hord-fi/src/mappings/handlers.ts,87,"const contract = HETH.bind("
hord-fi,subgraphs/hord-fi/src/mappings/handlers.ts,121,"const contract = HETH.bind("
hyperlock-finance,subgraphs/hyperlock-finance/src/common/initializers.ts,36,"const poolContract = ThrusterV2.bind(poolAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/common/initializers.ts,103,"const positionsNftContract = ThrusterPointNFT.bind("
hyperlock-finance,subgraphs/hyperlock-finance/src/common/utils.ts,24,"const pairContract = ThrusterV2.bind(Address.fromBytes(token.id));"
hyperlock-finance,subgraphs/hyperlock-finance/src/common/utils.ts,39,"const pairContract = ThrusterV2.bind(Address.fromBytes(token.id));"
hyperlock-finance,subgraphs/hyperlock-finance/src/common/utils.ts,53,"const contract = ERC20.bind(address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/common/utils.ts,76,"const pairContract = ThrusterV2.bind(Address.fromBytes(pool.getBytesID()));"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
inception,subgraphs/inception/src/mappings/handlers.ts,97,"const erc20 = _ERC20.bind(address);"
inception,subgraphs/inception/src/mappings/handlers.ts,121,"const inETHContract = INETH.bind(event.address);"
inception,subgraphs/inception/src/mappings/handlers.ts,141,"const vaultContract = INVault.bind(event.address);"
inception,subgraphs/inception/src/mappings/handlers.ts,143,"const strategyContract = Strategy.bind(strategy);"
inception,subgraphs/inception/src/mappings/handlers.ts,153,"const inVaultContract = INVault.bind(event.address);"
inception,subgraphs/inception/src/mappings/handlers.ts,173,"const vaultContract = INVault.bind(event.address);"
inception,subgraphs/inception/src/mappings/handlers.ts,175,"const strategyContract = Strategy.bind(strategy);"
inception,subgraphs/inception/src/mappings/handlers.ts,185,"const inVaultContract = INVault.bind(event.address);"
inception,subgraphs/inception/src/mappings/handlers.ts,205,"const vaultContract = INVault.bind(event.address);"
inception,subgraphs/inception/src/mappings/handlers.ts,207,"const strategyContract = Strategy.bind(strategy);"
inception,subgraphs/inception/src/mappings/handlers.ts,217,"const inVaultContract = INVault.bind(event.address);"
inception,subgraphs/inception/src/mappings/handlers.ts,237,"const vaultContract = INVault.bind(event.address);"
inception,subgraphs/inception/src/mappings/handlers.ts,239,"const strategyContract = Strategy.bind(strategy);"
inception,subgraphs/inception/src/mappings/handlers.ts,249,"const inVaultContract = INVault.bind(event.address);"
inception,subgraphs/inception/src/mappings/helpers.ts,50,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
inception,subgraphs/inception/src/mappings/helpers.ts,64,"const wbEthContract = WBETH.bind(pricedToken);"
inception,subgraphs/inception/src/mappings/helpers.ts,82,"const sFraxContract = SFRAX.bind(pricedToken);"
inception,subgraphs/inception/src/mappings/helpers.ts,113,"const pendlePTContract = PendlePT.bind(pricedToken);"
inception,subgraphs/inception/src/mappings/helpers.ts,116,"const pendleSYContract = PendleSY.bind(SYCall.value);"
inception,subgraphs/inception/src/mappings/helpers.ts,162,"const lrtDepositContract = LRTDepositPool.bind("
inception,subgraphs/inception/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
inception,subgraphs/inception/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
inception,subgraphs/inception/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
inception,subgraphs/inception/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
inception,subgraphs/inception/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
inception,subgraphs/inception/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
inception,subgraphs/inception/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
inception,subgraphs/inception/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,44,"let contract = CErc20.bind(cToken);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,70,"let cTokenContract = CErc20.bind(cToken);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,74,"let underlyingTokenContract = CErc20.bind(tryUnderlyingTokenAddr.value);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,103,"let contract = CErc20.bind(cToken);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,114,"let factoryContract = Factory.bind(Address.fromString(FACTORY_ADDRESS));"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,116,"let oracleContract = PriceOracle.bind(oracleAddress);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,181,"let contract = CErc20.bind(Address.fromString(marketId));"
inverse-finance,subgraphs/inverse-finance/src/common/helpers.ts,639,"let markets = Factory.bind(Address.fromString(FACTORY_ADDRESS)).getAllMarkets();"
inverse-finance,subgraphs/inverse-finance/src/common/helpers.ts,644,"let tokenContract = CErc20.bind(event.address);"
inverse-finance,subgraphs/inverse-finance/src/common/helpers.ts,709,"let factoryContract = Factory.bind(Address.fromString(FACTORY_ADDRESS));"
inverse-finance,subgraphs/inverse-finance/src/common/helpers.ts,822,"let tokenContract = CErc20.bind(event.address);"
inverse-finance,subgraphs/inverse-finance/src/core.ts,82,"let tokenContract = CErc20.bind(event.address);"
inverse-finance,subgraphs/inverse-finance/src/dola.ts,18,"let dolaContract = DOLA.bind(event.address);"
inverse-finance,subgraphs/inverse-finance/src/factory.ts,58,"let factoryContract = Factory.bind(Address.fromString(FACTORY_ADDRESS));"
inverse-finance,subgraphs/inverse-finance/src/factory.ts,112,"let factoryContract = Factory.bind(Address.fromString(FACTORY_ADDRESS));"
karak,subgraphs/karak/src/mappings/handlers.ts,84,"const erc20 = _ERC20.bind(address);"
karak,subgraphs/karak/src/mappings/handlers.ts,133,"const vaultContract = Vault.bind(event.address);"
karak,subgraphs/karak/src/mappings/handlers.ts,179,"const vaultContract = Vault.bind(event.address);"
karak,subgraphs/karak/src/mappings/helpers.ts,50,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
karak,subgraphs/karak/src/mappings/helpers.ts,64,"const wbEthContract = WBETH.bind(pricedToken);"
karak,subgraphs/karak/src/mappings/helpers.ts,81,"const sFraxContract = SFRAX.bind(pricedToken);"
karak,subgraphs/karak/src/mappings/helpers.ts,112,"const pendlePTContract = PendlePT.bind(pricedToken);"
karak,subgraphs/karak/src/mappings/helpers.ts,115,"const pendleSYContract = PendleSY.bind(SYCall.value);"
karak,subgraphs/karak/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
karak,subgraphs/karak/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
karak,subgraphs/karak/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
karak,subgraphs/karak/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
karak,subgraphs/karak/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
karak,subgraphs/karak/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
karak,subgraphs/karak/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
karak,subgraphs/karak/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
kelp-dao,subgraphs/kelp-dao/src/mappings/handlers.ts,88,"const erc20 = _ERC20.bind(address);"
kelp-dao,subgraphs/kelp-dao/src/mappings/handlers.ts,149,"const lrtContract = RSETH.bind(Address.fromString(NetworkConfigs.getLRT()));"
kelp-dao,subgraphs/kelp-dao/src/mappings/handlers.ts,178,"const lrtContract = RSETH.bind(Address.fromString(NetworkConfigs.getLRT()));"
kelp-dao,subgraphs/kelp-dao/src/mappings/handlers.ts,224,"const lrtContract = RSETH.bind(Address.fromString(NetworkConfigs.getLRT()));"
kelp-dao,subgraphs/kelp-dao/src/mappings/helpers.ts,42,"const lrtDepositContract = LRTDepositPool.bind("
kelp-dao,subgraphs/kelp-dao/src/mappings/helpers.ts,65,"const sFraxContract = SFRAX.bind(pricedToken);"
kelp-dao,subgraphs/kelp-dao/src/mappings/helpers.ts,89,"const lrtDepositContract = LRTDepositPool.bind("
kelp-dao,subgraphs/kelp-dao/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
kelp-dao,subgraphs/kelp-dao/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
kelp-dao,subgraphs/kelp-dao/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
kelp-dao,subgraphs/kelp-dao/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
kelp-dao,subgraphs/kelp-dao/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
kelp-dao,subgraphs/kelp-dao/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
kelp-dao,subgraphs/kelp-dao/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
kelp-dao,subgraphs/kelp-dao/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/mappings/handlers.ts,98,"const erc20 = _ERC20.bind(address);"
kernel-protocol,subgraphs/kernel-protocol/src/mappings/handlers.ts,157,"const contract = KRETH.bind(event.address);"
kernel-protocol,subgraphs/kernel-protocol/src/mappings/handlers.ts,191,"const contract = KRETH.bind(event.address);"
kernel-protocol,subgraphs/kernel-protocol/src/mappings/handlers.ts,261,"const contract = KSETH.bind(event.address);"
kernel-protocol,subgraphs/kernel-protocol/src/mappings/handlers.ts,295,"const contract = KSETH.bind(event.address);"
kernel-protocol,subgraphs/kernel-protocol/src/mappings/handlers.ts,365,"const contract = KUSD.bind(event.address);"
kernel-protocol,subgraphs/kernel-protocol/src/mappings/handlers.ts,399,"const contract = KUSD.bind(event.address);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
klimadao,subgraphs/klimadao/src/mappings/handlers.ts,34,"const poolContract = PoolV2.bind(pairAddr);"
klimadao,subgraphs/klimadao/src/mappings/handlers.ts,78,"const erc20 = _ERC20.bind(address);"
klimadao,subgraphs/klimadao/src/mappings/handlers.ts,117,"const bctContract = BCT.bind(event.address);"
kwenta,subgraphs/kwenta/src/mappings/handlers.ts,78,"const erc20 = _ERC20.bind(address);"
kwenta,subgraphs/kwenta/src/mappings/helpers.ts,113,"const contract = PerpsV2MarketProxyable.bind(marketAddress);"
kwenta,subgraphs/kwenta/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
kwenta,subgraphs/kwenta/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
kwenta,subgraphs/kwenta/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
kwenta,subgraphs/kwenta/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
kwenta,subgraphs/kwenta/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
kwenta,subgraphs/kwenta/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
kwenta,subgraphs/kwenta/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
kwenta,subgraphs/kwenta/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
kwenta,subgraphs/kwenta/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
kwenta,subgraphs/kwenta/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/CurveRouter.ts,127,"const curveRegistryContract = CurveRegistryContract.bind("
kwenta,subgraphs/kwenta/src/prices/routers/CurveRouter.ts,174,"const curveRegistryContract = CurveRegistryContract.bind("
kwenta,subgraphs/kwenta/src/prices/routers/CurveRouter.ts,252,"const poolContract = CurvePoolContract.bind(poolAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/CurveRouter.ts,273,"const poolContract = CurvePoolContract.bind(poolAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/UniswapForksRouter.ts,93,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
kwenta,subgraphs/kwenta/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
level-finance,subgraphs/level-finance/src/common/utils.ts,146,"const lpTokenContract = LpTokenContract.bind(trancheAddress);"
level-finance,subgraphs/level-finance/src/mappings/staking.ts,22,"const stakingContract = StakingContract.bind(constants.LEVEL_STAKE_ADDRESS);"
level-finance,subgraphs/level-finance/src/mappings/staking.ts,47,"const stakingContract = StakingContract.bind(constants.LEVEL_STAKE_ADDRESS);"
level-finance,subgraphs/level-finance/src/modules/position.ts,247,"const poolContract = PoolContract.bind("
level-finance,subgraphs/level-finance/src/modules/token.ts,21,"const tokenContract = ERC20.bind(address);"
level-finance,subgraphs/level-finance/src/modules/transaction.ts,36,"const poolContract = PoolContract.bind(Address.fromBytes(pool.getBytesID()));"
level-finance,subgraphs/level-finance/src/prices/calculations/CalculationsCurve.ts,21,"CalculationsCurveContract.bind(contractAddress);"
level-finance,subgraphs/level-finance/src/prices/calculations/CalculationsSushiswap.ts,20,"const curveContract = CalculationsSushiContract.bind(contractAddress);"
level-finance,subgraphs/level-finance/src/prices/common/utils.ts,64,"const tokenContract = _ERC20.bind(tokenAddr);"
level-finance,subgraphs/level-finance/src/prices/common/utils.ts,71,"const tokenContract = _ERC20.bind(tokenAddr);"
level-finance,subgraphs/level-finance/src/prices/common/utils.ts,82,"const tokenContract = _ERC20.bind(tokenAddr);"
level-finance,subgraphs/level-finance/src/prices/oracles/AaveOracle.ts,17,"const aaveOracleContract = AaveOracleContract.bind(contractAddress);"
level-finance,subgraphs/level-finance/src/prices/oracles/ChainLinkFeed.ts,16,"const chainLinkContract = ChainLinkContract.bind(contractAddress);"
level-finance,subgraphs/level-finance/src/prices/oracles/InchOracle.ts,19,"const inchOracleContract = InchOracleContract.bind(contractAddress);"
level-finance,subgraphs/level-finance/src/prices/oracles/YearnLensOracle.ts,17,"const yearnLensContract = YearnLensContract.bind(contractAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/CurveRouter.ts,30,"const curveRegistryContract = CurveRegistryContract.bind("
level-finance,subgraphs/level-finance/src/prices/routers/CurveRouter.ts,59,"const poolContract = CurvePoolContract.bind(poolAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/CurveRouter.ts,129,"const curveRegistryContract = CurveRegistryContract.bind("
level-finance,subgraphs/level-finance/src/prices/routers/CurveRouter.ts,176,"const curveRegistryContract = CurveRegistryContract.bind("
level-finance,subgraphs/level-finance/src/prices/routers/CurveRouter.ts,254,"const poolContract = CurvePoolContract.bind(poolAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/CurveRouter.ts,275,"const poolContract = CurvePoolContract.bind(poolAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/CurveRouter.ts,303,"const poolContract = CurvePoolContract.bind(tokenAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/UniswapForksRouter.ts,100,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
level-finance,subgraphs/level-finance/src/prices/routers/UniswapForksRouter.ts,128,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/UniswapForksRouter.ts,171,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lido,subgraphs/lido/src/entities/token.ts,54,"const tokenContract = ERC20.bind(tokenAddress);"
lido,subgraphs/lido/src/entities/token.ts,64,"const tokenContract = ERC20.bind(tokenAddress);"
lido,subgraphs/lido/src/entities/token.ts,74,"const tokenContract = ERC20.bind(tokenAddress);"
lido,subgraphs/lido/src/mappings/Lido.ts,43,"const lido = Lido.bind(event.address);"
lido,subgraphs/lido/src/mappings/Lido.ts,105,"const nodeOperatorsRegistry = NodeOperatorsRegistry.bind("
lido,subgraphs/lido/src/mappings/Lido.ts,148,"const lido = Lido.bind(Address.fromString(PROTOCOL_ID));"
lido,subgraphs/lido/src/mappings/Lido.ts,161,"const lido = Lido.bind(Address.fromString(PROTOCOL_ID));"
lido,subgraphs/lido/src/mappings/Lido.ts,176,"const lido = Lido.bind(Address.fromString(PROTOCOL_ID));"
lido,subgraphs/lido/src/mappings/Oracle.ts,31,"const lido = Lido.bind(Address.fromString(PROTOCOL_ID));"
lido,subgraphs/lido/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
lido,subgraphs/lido/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
lido,subgraphs/lido/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
lido,subgraphs/lido/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
lido,subgraphs/lido/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
lido,subgraphs/lido/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
lido,subgraphs/lido/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
lido,subgraphs/lido/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
liquid-collective,subgraphs/liquid-collective/src/mappings/handlers.ts,42,"const erc20 = _ERC20.bind(address);"
liquid-collective,subgraphs/liquid-collective/src/mappings/handlers.ts,111,"const lstContract = LSETH.bind(event.address);"
liquid-collective,subgraphs/liquid-collective/src/mappings/handlers.ts,137,"const lstContract = LSETH.bind(event.address);"
liquid-collective,subgraphs/liquid-collective/src/mappings/handlers.ts,188,"const lstContract = LSETH.bind("
liquid-collective,subgraphs/liquid-collective/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
liquid-collective,subgraphs/liquid-collective/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
liquid-collective,subgraphs/liquid-collective/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
liquid-collective,subgraphs/liquid-collective/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
liquid-collective,subgraphs/liquid-collective/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
liquid-collective,subgraphs/liquid-collective/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
liquid-collective,subgraphs/liquid-collective/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
liquid-collective,subgraphs/liquid-collective/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
liquity,subgraphs/liquity/src/mapping/StabilityPool.ts,44,"const stabilityPool = StabilityPool.bind(event.address);"
liquity,subgraphs/liquity/src/mapping/StabilityPool.ts,59,"const stabilityPool = StabilityPool.bind(event.address);"
liquity,subgraphs/liquity/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
liquity,subgraphs/liquity/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
liquity,subgraphs/liquity/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
liquity,subgraphs/liquity/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
liquity,subgraphs/liquity/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
liquity,subgraphs/liquity/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
liquity,subgraphs/liquity/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
liquity,subgraphs/liquity/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
liquity,subgraphs/liquity/src/prices/routers/CurveRouter.ts,21,"const curveRegistryContract = CurveRegistryContract.bind("
liquity,subgraphs/liquity/src/prices/routers/CurveRouter.ts,47,"const poolContract = CurvePoolContract.bind(poolAddress);"
liquity,subgraphs/liquity/src/prices/routers/CurveRouter.ts,102,"const curveRegistryContract = CurveRegistryContract.bind("
liquity,subgraphs/liquity/src/prices/routers/CurveRouter.ts,143,"const curveRegistryContract = CurveRegistryContract.bind("
liquity,subgraphs/liquity/src/prices/routers/CurveRouter.ts,208,"const poolContract = CurvePoolContract.bind(poolAddress);"
liquity,subgraphs/liquity/src/prices/routers/CurveRouter.ts,229,"const poolContract = CurvePoolContract.bind(poolAddress);"
liquity,subgraphs/liquity/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
liquity,subgraphs/liquity/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
liquity,subgraphs/liquity/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
liquity,subgraphs/liquity/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
liquity,subgraphs/liquity/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
livepeer,subgraphs/livepeer/src/common/initializers.ts,25,"const bondingManagerContract = BondingManager.bind("
livepeer,subgraphs/livepeer/src/modules/prices.ts,17,"const uniswapPool = UniswapV3Pool.bind(address);"
livepeer,subgraphs/livepeer/src/modules/tokens.ts,13,"const tokenContract = ERC20.bind(address);"
livepeer,subgraphs/livepeer/src/modules/tokens.ts,71,"const minterContract = Minter.bind(constants.MINTER_ADDRESS);"
llama-airforce,subgraphs/llama-airforce/src/common/initializers.ts,35,"const vaultContract = Vault.bind(poolAddress);"
llama-airforce,subgraphs/llama-airforce/src/common/initializers.ts,43,"const vaultV2Contract = VaultV2.bind(poolAddress);"
llama-airforce,subgraphs/llama-airforce/src/common/utils.ts,37,"const contract = ERC20.bind(address);"
llama-airforce,subgraphs/llama-airforce/src/common/utils.ts,58,"const vaultContract = Vault.bind(poolAddress);"
llama-airforce,subgraphs/llama-airforce/src/common/utils.ts,66,"const vaultV2Contract = VaultV2.bind(poolAddress);"
llama-airforce,subgraphs/llama-airforce/src/common/utils.ts,78,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
llama-airforce,subgraphs/llama-airforce/src/common/utils.ts,89,"const vaultContract = Vault.bind(Address.fromBytes(pool.getBytesID()));"
llama-airforce,subgraphs/llama-airforce/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
llama-airforce,subgraphs/llama-airforce/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
llama-airforce,subgraphs/llama-airforce/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
llama-airforce,subgraphs/llama-airforce/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
llama-airforce,subgraphs/llama-airforce/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
llama-airforce,subgraphs/llama-airforce/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
llama-airforce,subgraphs/llama-airforce/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
llama-airforce,subgraphs/llama-airforce/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
looksrare,subgraphs/looksrare/src/mapping.ts,318,"const contract = NftMetadata.bind(Address.fromString(collectionID));"
looksrare,subgraphs/looksrare/src/mapping.ts,386,"const contract = ExecutionStrategy.bind(address);"
looksrare,subgraphs/looksrare/src/mapping.ts,450,"const erc165 = ERC165.bind(Address.fromString(collectionID));"
lybra-finance,subgraphs/lybra-finance/src/common/initializers.ts,54,"const poolContract = LybraV2.bind(poolAddress);"
lybra-finance,subgraphs/lybra-finance/src/common/initializers.ts,79,"const poolContract = LybraV2.bind(poolAddress);"
lybra-finance,subgraphs/lybra-finance/src/common/utils.ts,37,"const contract = ERC20.bind(address);"
lybra-finance,subgraphs/lybra-finance/src/common/utils.ts,57,"const poolContract = LybraV1.bind(Address.fromBytes(pool.getBytesID()));"
lybra-finance,subgraphs/lybra-finance/src/common/utils.ts,68,"const poolContract = LybraV2.bind(Address.fromBytes(pool.getBytesID()));"
lybra-finance,subgraphs/lybra-finance/src/common/utils.ts,79,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
lybra-finance,subgraphs/lybra-finance/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
lybra-finance,subgraphs/lybra-finance/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
lybra-finance,subgraphs/lybra-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
lybra-finance,subgraphs/lybra-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
lybra-finance,subgraphs/lybra-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
lybra-finance,subgraphs/lybra-finance/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
lybra-finance,subgraphs/lybra-finance/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
lybra-finance,subgraphs/lybra-finance/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
m0-power,subgraphs/m0-power/src/common/initializers.ts,35,"const minterContract = Minter.bind(poolAddress);"
m0-power,subgraphs/m0-power/src/common/initializers.ts,59,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
m0-power,subgraphs/m0-power/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
m0-power,subgraphs/m0-power/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
m0-power,subgraphs/m0-power/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
m0-power,subgraphs/m0-power/src/prices/common/utils.ts,49,"const tokenContract = ERC20.bind(tokenAddr);"
m0-power,subgraphs/m0-power/src/prices/common/utils.ts,56,"const tokenContract = ERC20.bind(tokenAddr);"
m0-power,subgraphs/m0-power/src/prices/common/utils.ts,67,"const tokenContract = ERC20.bind(tokenAddr);"
m0-power,subgraphs/m0-power/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
m0-power,subgraphs/m0-power/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
m0-power,subgraphs/m0-power/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
maker-governance,subgraphs/maker-governance/protocols/maker-governance/src/ds-chief.ts,50,"const voteDelegate = VoteDelegate.bind(sender);"
maker-governance,subgraphs/maker-governance/src/helpers.ts,114,"const dsChief = DSChief.bind(event.address);"
maker-governance,subgraphs/maker-governance/src/helpers.ts,128,"const dsSpell = DSSpell.bind(spellAddress);"
makerdao,subgraphs/makerdao/src/common/helpers.ts,93,"let vatContract = Vat.bind(Address.fromString(VAT_ADDRESS));"
makerdao,subgraphs/makerdao/src/common/helpers.ts,154,"const daiContract = DAI.bind(Address.fromString(DAI_ADDRESS));"
makerdao,subgraphs/makerdao/src/mapping.ts,120,"const marketContract = GemJoin.bind(someAddress);"
makerdao,subgraphs/makerdao/src/mapping.ts,145,"const erc20Contract = ERC20.bind(gemCall.value);"
makerdao,subgraphs/makerdao/src/mapping.ts,354,"//let vatContract = Vat.bind(Address.fromString(VAT_ADDRESS));"
makerdao,subgraphs/makerdao/src/mapping.ts,486,"const vatContract = Vat.bind(event.address);"
makerdao,subgraphs/makerdao/src/mapping.ts,808,"const flipContract = FlipContract.bind(event.address);"
makerdao,subgraphs/makerdao/src/mapping.ts,1156,"const clipContract = ClipContract.bind(event.address);"
makerdao,subgraphs/makerdao/src/mapping.ts,1375,"const jugContract = Jug.bind(event.address);"
makerdao,subgraphs/makerdao/src/mapping.ts,1434,"const potContract = Pot.bind(event.address);"
makerdao,subgraphs/makerdao/src/mapping.ts,1489,"const potContract = Pot.bind(event.address);"
makerdao,subgraphs/makerdao/src/mapping.ts,1529,"const contract = CdpManager.bind(event.address);"
makerdao,subgraphs/makerdao/src/mapping.ts,1765,"const contract = PSM.bind(event.address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/mappings/handlers.ts,61,"const erc20 = _ERC20.bind(address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/mappings/handlers.ts,121,"const mETH = METH.bind(Address.fromBytes(lst.id));"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/mappings/handlers.ts,192,"const mETH = METH.bind(Address.fromBytes(lst.id));"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/mappings/handlers.ts,200,"const contract = ReturnsAggregator.bind(event.address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/mappingHelpers/getOrCreate/markets.ts,37,"const poolContract = PoolContract.bind(marketAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/mappingHelpers/getOrCreate/markets.ts,156,"const stakeLockerContract = StakeLockerContract.bind(stakeLockerAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/mappingHelpers/getOrCreate/markets.ts,248,"const loanV1Contract = LoanV1Contract.bind(loanAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/mappingHelpers/getOrCreate/markets.ts,283,"const loanV2V3Contract = LoanV2Contract.bind(loanAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/mappingHelpers/getOrCreate/markets.ts,358,"const mplRewardContract = MplRewardContract.bind(mplRewardAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/mappingHelpers/getOrCreate/transactions.ts,76,"const poolContract = PoolContract.bind(Address.fromString(market.id));"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/mappingHelpers/update/intervalUpdate.ts,38,"const poolLibContract = PoolLib.bind(MAPLE_POOL_LIB_ADDRESS);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/calculations/CalculationsCurve.ts,8,"return CalculationsCurveContract.bind(constants.CURVE_CALCULATIONS_ADDRESS_MAP.get(network)!);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/calculations/CalculationsSushiswap.ts,8,"return CalculationsSushiContract.bind(constants.SUSHISWAP_CALCULATIONS_ADDRESS_MAP.get(network)!);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/common/utils.ts,10,"const token = ERC20.bind(tokenAddr);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/oracles/chainlink.ts,14,"const chainLinkContract = ChainLinkOracle.bind(CHAIN_LINK_ORACLE_ADDRESS);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/oracles/maple.ts,13,"const mapleGlobalsContract = MapleGlobals.bind(MAPLE_GLOBALS_ADDRESS);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/oracles/yearn.ts,15,"const yearnOracleContract = YearnOracle.bind(YEARN_ORACLE_ADDRESS);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/prices.ts,113,"const balancerContract = BalancerPool.bind(Address.fromString(bptToken.id));"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/CurveRouter.ts,12,"const curveRegistry = CurveRegistryContract.bind(constants.CURVE_REGISTRY_ADDRESS_MAP.get(network)!);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/CurveRouter.ts,37,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/CurveRouter.ts,109,"const curveRegistry = CurveRegistryContract.bind(constants.CURVE_REGISTRY_ADDRESS_MAP.get(network)!);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/SushiSwapRouter.ts,16,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/SushiSwapRouter.ts,79,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/SushiSwapRouter.ts,82,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/SushiSwapRouter.ts,105,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/SushiSwapRouter.ts,124,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/UniswapRouter.ts,17,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/UniswapRouter.ts,76,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/UniswapRouter.ts,79,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/UniswapRouter.ts,102,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/UniswapRouter.ts,127,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,9,"const contract = ERC20.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,15,"const bytesContract = ERC20NameBytes.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,26,"const contract = ERC20.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,32,"const bytesContract = ERC20SymbolBytes.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,43,"const contract = ERC20.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/mappings/loanV2.ts,42,"const loanV2Contract = LoanV2Contract.bind(Address.fromString(loan.id));"
maple-finance-v1,subgraphs/maple-finance-v1/src/mappings/loanV3.ts,42,"const loanV3Contract = LoanV3Contract.bind(Address.fromString(loan.id));"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,72,"const poolManagerContract = PoolManager.bind(event.params.instance_);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,83,"const poolContract = Pool.bind(tryPool.value);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,137,"const loanManagerContract = LoanManager.bind(event.params.loanManager_);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,147,"const mapleLoan = MapleLoan.bind(Address.fromBytes(loan.id));"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,164,"const poolContract = Pool.bind(tryPool.value);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,219,"const poolContract = Pool.bind(event.address);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,278,"const poolContract = Pool.bind(event.address);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,315,"const poolContract = Pool.bind(event.address);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,354,"const poolManagerContract = PoolManager.bind(event.address);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,388,"const poolManagerContract = PoolManager.bind(event.address);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,438,"const poolManagerContract = PoolManager.bind(Address.fromBytes(loan.market!));"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,456,"const mapleLoanContract = MapleLoan.bind(event.address);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,502,"const loanManagerContract = LoanManager.bind(event.params.instance_);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,549,"const liquidatorContract = Liquidator.bind(event.address);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,558,"const loanManagerContract = LoanManager.bind(tryLoanManager.value);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,567,"const poolContract = Pool.bind(tryPool.value);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,610,"const loanManagerContract = LoanManager.bind(event.params.loanManager_);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,620,"const mapleLoan = MapleLoan.bind(Address.fromBytes(loan.id));"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,637,"const poolContract = Pool.bind(tryPool.value);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,683,"const loanManagerContract = LoanManager.bind("
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,686,"const poolContract = Pool.bind(Address.fromBytes(market.id));"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,766,"const loanContract = MapleLoan.bind(Address.fromBytes(market._loans![i]));"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,839,"const contract = ERC20.bind(erc20Contract);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,852,"const mapleGlobalsContract = MapleGlobals.bind("
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,858,"const chainlinkContract = Chainlink.bind("
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,89,"const contract = ERC20.bind(tokenAddress);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,90,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,119,"const contract = ERC20.bind(tokenAddress);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,120,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,149,"const contract = ERC20.bind(tokenAddress);"
matrixdock,subgraphs/matrixdock/src/mappings/handlers.ts,54,"const erc20 = _ERC20.bind(address);"
matrixdock,subgraphs/matrixdock/src/mappings/handlers.ts,102,"const dataFeedContract = DataFeed.bind(NetworkConfigs.getDataFeed());"
mellow-lrt,subgraphs/mellow-lrt/src/common/initializers.ts,64,"const poolContract = Vault.bind(Address.fromBytes(pool.getBytesID()));"
mellow-lrt,subgraphs/mellow-lrt/src/common/initializers.ts,77,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
mellow-lrt,subgraphs/mellow-lrt/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
mev-protocol,subgraphs/mev-protocol/src/mappings/handlers.ts,32,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
mev-protocol,subgraphs/mev-protocol/src/mappings/handlers.ts,61,"const erc20 = _ERC20.bind(address);"
mev-protocol,subgraphs/mev-protocol/src/mappings/handlers.ts,84,"const contract = MEVETH.bind("
mev-protocol,subgraphs/mev-protocol/src/mappings/handlers.ts,110,"const contract = MEVETH.bind("
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,35,"const morphoContract = MorphoAaveV2.bind(protocolAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,36,"const lendingPool = LendingPool.bind(morphoContract.pool());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,38,"const addressesProvider = LendingPoolAddressesProvider.bind("
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,80,"const aToken = AToken.bind(aTokenAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,82,"const debtToken = DebtToken.bind(Address.fromBytes(tokenMapping.debtToken));"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,84,"const morpho = MorphoAaveV2.bind(MORPHO_AAVE_V2_ADDRESS);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,135,"const morpho = MorphoAaveV2.bind(MORPHO_AAVE_V2_ADDRESS);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,136,"const addressesProvider = LendingPoolAddressesProvider.bind("
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,140,"const oracle = PriceOracle.bind(addressesProvider.getPriceOracle());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,151,"const fallbackOracle = PriceOracle.bind(tryFallback.value);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,160,"const ethPriceFeed = ChainlinkPriceFeed.bind(ETH_USD_PRICE_FEED_ADDRESS);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,22,"const aToken = AToken.bind(event.params._poolToken);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,23,"const underlying = ERC20.bind(aToken.UNDERLYING_ASSET_ADDRESS());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,25,"const morpho = MorphoAaveV2.bind(event.address);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,27,"const lendingPool = LendingPool.bind(morpho.pool());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,28,"const addressProvider = LendingPoolAddressesProvider.bind("
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,31,"const oracle = PriceOracle.bind(addressProvider.getPriceOracle());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,34,"const dataProvider = ProtocolDataProvider.bind("
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,32,"const morphoContract = MorphoAaveV3.bind(protocolAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,33,"const lendingPool = LendingPool.bind(morphoContract.pool());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,35,"const addressesProvider = LendingPoolAddressesProvider.bind("
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,69,"const aToken = AToken.bind(aTokenAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,70,"const debtToken = DebtToken.bind(Address.fromBytes(tokenMapping.debtToken));"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,71,"const morpho = MorphoAaveV3.bind(MORPHO_AAVE_V3_ADDRESS);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,118,"const morpho = MorphoAaveV3.bind(MORPHO_AAVE_V3_ADDRESS);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,119,"const addressesProvider = LendingPoolAddressesProvider.bind("
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,123,"const oracle = PriceOracle.bind(addressesProvider.getPriceOracle());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,134,"const fallbackOracle = PriceOracle.bind(tryFallback.value);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,21,"const morpho = MorphoAaveV3.bind(event.address);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,23,"const underlying = ERC20.bind(event.params.underlying);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,26,"const aToken = AToken.bind(marketInfo.aToken);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,29,"const lendingPool = LendingPool.bind(morpho.pool());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,30,"const addressProvider = LendingPoolAddressesProvider.bind("
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,34,"const oracle = PriceOracle.bind(addressProvider.getPriceOracle());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,37,"const dataProvider = ProtocolDataProvider.bind("
morpho,subgraphs/morpho/src/mapping/morpho-compound/cToken.ts,27,"const cTokenInstance = CToken.bind(event.address);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/fetchers.ts,21,"const morphoContract = MorphoCompound.bind(protocolAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/fetchers.ts,45,"const cToken = CToken.bind(marketAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/fetchers.ts,46,"const morpho = MorphoCompound.bind(MORPHO_COMPOUND_ADDRESS);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/handleMarketCreated.ts,28,"const morpho = MorphoCompound.bind(event.address);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/handleMarketCreated.ts,29,"const cToken = CToken.bind(event.params._poolToken);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/handleMarketCreated.ts,30,"const comptroller = Comptroller.bind(morpho.comptroller());"
morpho,subgraphs/morpho/src/mapping/morpho-compound/handleMarketCreated.ts,31,"const priceOracle = CompoundOracle.bind(comptroller.oracle());"
morpho,subgraphs/morpho/src/mapping/morpho-compound/morphoCompound.ts,341,"const cTokenContract = CToken.bind(Address.fromBytes(market.id));"
morpho,subgraphs/morpho/src/mapping/morpho-compound/morphoCompound.ts,356,"const comptrollerContract = Comptroller.bind(COMPTROLLER_ADDRESS);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/morphoCompound.ts,382,"const oracleContract = CompoundOracle.bind("
morpho,subgraphs/morpho/src/mapping/morpho-compound/oracle.ts,63,"const oracle = CompoundOracle.bind(event.address);"
morpho,subgraphs/morpho/src/utils/initializers.ts,17,"const erc20 = ERC20.bind(Address.fromBytes(tokenAddress));"
morpho-blue,subgraphs/morpho-blue/src/fetchUsdTokenPrice.ts,142,"const chainlinkPriceFeed = ChainlinkPriceFeed.bind(feedAddress);"
morpho-blue,subgraphs/morpho-blue/src/fetchUsdTokenPrice.ts,183,"const wstEthContract = WstEth.bind(Address.fromString(wstEth));"
morpho-blue,subgraphs/morpho-blue/src/fetchUsdTokenPrice.ts,192,"const rEthContract = REth.bind(Address.fromString(rEth));"
morpho-blue,subgraphs/morpho-blue/src/fetchUsdTokenPrice.ts,215,"const sDaiContract = ERC4626.bind(Address.fromString(sdai));"
morpho-blue,subgraphs/morpho-blue/src/fetchUsdTokenPrice.ts,224,"const erc4626 = ERC4626.bind(Address.fromString(wusdm));"
morpho-blue,subgraphs/morpho-blue/src/sdk/manager.ts,889,"const irm = IRM.bind(irmAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,96,"const contract = ERC20.bind(tokenAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,97,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,119,"const contract = ERC20.bind(tokenAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,120,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,142,"const contract = ERC20.bind(tokenAddress);"
mountain-protocol,subgraphs/mountain-protocol/src/mappings/handlers.ts,48,"const erc20 = _ERC20.bind(address);"
mountain-protocol,subgraphs/mountain-protocol/src/mappings/handlers.ts,70,"const contract = USDM.bind(event.address);"
multichain,subgraphs/multichain/src/common/getters.ts,154,"const anyTokenContract = anyToken.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,15,"const contract = ERC20.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,16,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,38,"const contract = ERC20.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,39,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,61,"const contract = ERC20.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,74,"const contract = ERC20.bind(tokenAddress);"
multichain,subgraphs/multichain/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
multichain,subgraphs/multichain/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
multichain,subgraphs/multichain/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
multichain,subgraphs/multichain/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
multichain,subgraphs/multichain/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
multichain,subgraphs/multichain/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
multichain,subgraphs/multichain/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
multichain,subgraphs/multichain/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
multichain,subgraphs/multichain/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
multichain,subgraphs/multichain/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
multichain,subgraphs/multichain/src/prices/routers/CurveRouter.ts,127,"const curveRegistryContract = CurveRegistryContract.bind("
multichain,subgraphs/multichain/src/prices/routers/CurveRouter.ts,174,"const curveRegistryContract = CurveRegistryContract.bind("
multichain,subgraphs/multichain/src/prices/routers/CurveRouter.ts,252,"const poolContract = CurvePoolContract.bind(poolAddress);"
multichain,subgraphs/multichain/src/prices/routers/CurveRouter.ts,273,"const poolContract = CurvePoolContract.bind(poolAddress);"
multichain,subgraphs/multichain/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
multichain,subgraphs/multichain/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
multichain,subgraphs/multichain/src/prices/routers/UniswapForksRouter.ts,93,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
multichain,subgraphs/multichain/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
multichain,subgraphs/multichain/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/entities/token.ts,85,"const tokenContract = ERC20.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/entities/token.ts,95,"const tokenContract = ERC20.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/entities/token.ts,105,"const tokenContract = ERC20.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/mappings/gainsHandlers.ts,99,"const referralsContract = Referrals.bind("
mux-protocol,subgraphs/mux-protocol/src/mappings/gainsHandlers.ts,178,"const pairInfoContract = PairInfo.bind("
mux-protocol,subgraphs/mux-protocol/src/mappings/gmxHandlers.ts,179,"const vaultContract = Vault.bind(event.address);"
mux-protocol,subgraphs/mux-protocol/src/mappings/muxHandlers.ts,327,"const poolContract = LiquidityPool.bind(event.address);"
mux-protocol,subgraphs/mux-protocol/src/mappings/muxHandlers.ts,488,"const feeDistributorContract = FeeDistributor.bind(event.address);"
mux-protocol,subgraphs/mux-protocol/src/mappings/muxHandlers.ts,526,"const feeDistributorContract = FeeDistributor.bind(event.address);"
mux-protocol,subgraphs/mux-protocol/src/mappings/muxHandlers.ts,572,"const muxDistributorContract = MuxDistributor.bind(event.address);"
mux-protocol,subgraphs/mux-protocol/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
mux-protocol,subgraphs/mux-protocol/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
mux-protocol,subgraphs/mux-protocol/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
mux-protocol,subgraphs/mux-protocol/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
mux-protocol,subgraphs/mux-protocol/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
mux-protocol,subgraphs/mux-protocol/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
mux-protocol,subgraphs/mux-protocol/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
mux-protocol,subgraphs/mux-protocol/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
mux-protocol,subgraphs/mux-protocol/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/CurveRouter.ts,127,"const curveRegistryContract = CurveRegistryContract.bind("
mux-protocol,subgraphs/mux-protocol/src/prices/routers/CurveRouter.ts,174,"const curveRegistryContract = CurveRegistryContract.bind("
mux-protocol,subgraphs/mux-protocol/src/prices/routers/CurveRouter.ts,252,"const poolContract = CurvePoolContract.bind(poolAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/CurveRouter.ts,273,"const poolContract = CurvePoolContract.bind(poolAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/UniswapForksRouter.ts,93,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/mappings/handlers.ts,80,"const erc20 = _ERC20.bind(address);"
nexus-mutual,subgraphs/nexus-mutual/src/mappings/handlers.ts,101,"const contract = NXMaster.bind(event.address);"
nexus-mutual,subgraphs/nexus-mutual/src/mappings/handlers.ts,129,"const poolContract = Pool.bind(Address.fromString(poolDeployment.addr));"
nexus-mutual,subgraphs/nexus-mutual/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,72,"const erc20 = _ERC20.bind(address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,122,"const poolContract = LiquidStaking.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,148,"const nodeOperatorRegistryContract = NodeOperatorRegistry.bind("
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,157,"const largeStakingContract = LargeStaking.bind(largeStakingContractAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,175,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,193,"const poolContract = LiquidStaking.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,219,"const nodeOperatorRegistryContract = NodeOperatorRegistry.bind("
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,228,"const largeStakingContract = LargeStaking.bind(largeStakingContractAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,246,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,264,"const withdrawalContract = WithdrawalRequest.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,266,"const poolContract = LiquidStaking.bind(poolContractAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,292,"const nodeOperatorRegistryContract = NodeOperatorRegistry.bind("
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,301,"const largeStakingContract = LargeStaking.bind(largeStakingContractAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,319,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,354,"const withdrawalContract = WithdrawalRequest.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,356,"const poolContract = LiquidStaking.bind(poolContractAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,382,"const nodeOperatorRegistryContract = NodeOperatorRegistry.bind("
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,391,"const largeStakingContract = LargeStaking.bind(largeStakingContractAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,409,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,423,"const poolContract = NethPool.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,438,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,456,"const poolContract = NethPool.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,471,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,506,"const poolContract = NethPool.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,518,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,532,"const poolContract = NethPool.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,550,"const rnethContract = RNETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,568,"const poolContract = NethPool.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,586,"const rnethContract = RNETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,621,"const poolContract = NethPool.bind(event.address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,639,"const rnethContract = RNETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
node-dao,subgraphs/node-dao/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
node-dao,subgraphs/node-dao/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
node-dao,subgraphs/node-dao/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
node-dao,subgraphs/node-dao/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
node-dao,subgraphs/node-dao/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
node-dao,subgraphs/node-dao/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
node-dao,subgraphs/node-dao/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
notional-finance,subgraphs/notional-finance/src/getters/token.ts,67,"const tokenContract = ERC20.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/getters/token.ts,77,"const tokenContract = ERC20.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/getters/token.ts,87,"const tokenContract = ERC20.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/mappings/notional.ts,57,"const notional = Notional.bind(Address.fromString(PROTOCOL_ID));"
notional-finance,subgraphs/notional-finance/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
notional-finance,subgraphs/notional-finance/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
notional-finance,subgraphs/notional-finance/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
notional-finance,subgraphs/notional-finance/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
notional-finance,subgraphs/notional-finance/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
notional-finance,subgraphs/notional-finance/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
notional-finance,subgraphs/notional-finance/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
notional-finance,subgraphs/notional-finance/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
notional-finance,subgraphs/notional-finance/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
notional-finance,subgraphs/notional-finance/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/CurveRouter.ts,127,"const curveRegistryContract = CurveRegistryContract.bind("
notional-finance,subgraphs/notional-finance/src/prices/routers/CurveRouter.ts,174,"const curveRegistryContract = CurveRegistryContract.bind("
notional-finance,subgraphs/notional-finance/src/prices/routers/CurveRouter.ts,252,"const poolContract = CurvePoolContract.bind(poolAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/CurveRouter.ts,273,"const poolContract = CurvePoolContract.bind(poolAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/UniswapForksRouter.ts,93,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
notional-finance,subgraphs/notional-finance/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/setters/financialMetrics.ts,181,"const notional = Notional.bind(Address.fromString(PROTOCOL_ID));"
notional-finance,subgraphs/notional-finance/src/setters/financialMetrics.ts,186,"const erc20 = ERC20.bind(Address.fromString(assetToken.id));"
notional-finance,subgraphs/notional-finance/src/setters/transactions.ts,484,"const notional = Notional.bind(Address.fromString(PROTOCOL_ID));"
opensea,subgraphs/opensea/src/helpers.ts,71,"const contract = NftMetadata.bind(Address.fromString(collectionID));"
opensea,subgraphs/opensea/src/helpers.ts,167,"const erc165 = ERC165.bind(Address.fromString(collectionID));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/angle-governance/src/governor.ts,156,"const contract = Governor.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/angle-governance/src/governor.ts,182,"const contract = Governor.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/code4rena-governance/src/arena-governor.ts,158,"const contract = ArenaGovernor.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/code4rena-governance/src/arena-governor.ts,181,"const contract = ArenaGovernor.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/ens-governance/src/ens-governor.ts,133,"const contract = ENSGovernor.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/ens-governance/src/ens-governor.ts,157,"const contract = ENSGovernor.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/euler-governance/src/governance.ts,178,"const contract = Governance.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/euler-governance/src/governance.ts,202,"const contract = Governance.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/fei-governance/src/fei-dao.ts,156,"const contract = FeiDAO.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/fei-governance/src/fei-dao.ts,179,"const contract = FeiDAO.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/hop-governance/src/hop-governor.ts,126,"const contract = HOPGovernor.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/hop-governance/src/hop-governor.ts,149,"const contract = HOPGovernor.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/optimism-governance/src/governor.ts,164,"const contract = OptimismGovernorV2.bind("
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/optimism-governance/src/governor.ts,190,"const contract = OptimismGovernorV2.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/ousd-governance/src/Governance.ts,171,"const contract = Governance.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/ousd-governance/src/Governance.ts,194,"const contract = Governance.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/rarible-governance/src/RariGovernor.ts,144,"const contract = RariGovernor.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/rarible-governance/src/RariGovernor.ts,167,"const contract = RariGovernor.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/silo-governance/src/silo-governor.ts,159,"const contract = SiloGovernor.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/silo-governance/src/silo-governor.ts,183,"const contract = SiloGovernor.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/threshold-governance/src/tokenholder-governor.ts,155,"const contract = TokenholderGovernor.bind("
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/threshold-governance/src/tokenholder-governor.ts,180,"const contract = TokenholderGovernor.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/truefi-governance/src/dao-governor.ts,171,"const contract = DaoGovernor.bind(Address.fromString(contractAddress));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/truefi-governance/src/dao-governor.ts,195,"const contract = DaoGovernor.bind(contractAddress);"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/unlock-governance/src/unlock-protocol-governor.ts,149,"const contract = UnlockProtocolGovernor.bind("
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/unlock-governance/src/unlock-protocol-governor.ts,178,"const contract = UnlockProtocolGovernor.bind(contractAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,88,"const contract = ERC20.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,89,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,111,"const contract = ERC20.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,112,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,134,"const contract = ERC20.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,12,"const contract = ERC20.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,13,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,35,"const contract = ERC20.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,36,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,58,"const contract = ERC20.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/entities/option.ts,47,"const controller = Controller.bind(NetworkConfigs.getControllerAddress());"
opyn-gamma,subgraphs/opyn-gamma/src/price.ts,21,"const oracle = Oracle.bind("
opyn-gamma,subgraphs/opyn-gamma/src/price.ts,83,"const oracle = Oracle.bind("
opyn-gamma,subgraphs/opyn-gamma/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/CurveRouter.ts,30,"const curveRegistryContract = CurveRegistryContract.bind("
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/CurveRouter.ts,59,"const poolContract = CurvePoolContract.bind(poolAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/CurveRouter.ts,126,"const curveRegistryContract = CurveRegistryContract.bind("
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/CurveRouter.ts,173,"const curveRegistryContract = CurveRegistryContract.bind("
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/CurveRouter.ts,251,"const poolContract = CurvePoolContract.bind(poolAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/CurveRouter.ts,272,"const poolContract = CurvePoolContract.bind(poolAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/CurveRouter.ts,300,"const poolContract = CurvePoolContract.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/UniswapForksRouter.ts,92,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/UniswapForksRouter.ts,119,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/UniswapForksRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/mappings/handlers.ts,94,"const erc20 = _ERC20.bind(address);"
ora-protocol,subgraphs/ora-protocol/src/mappings/handlers.ts,120,"const poolContract = OraStakePool.bind(event.params.pool);"
ora-protocol,subgraphs/ora-protocol/src/mappings/handlers.ts,176,"const poolContract = OraStakePool.bind(event.params.pool);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,74,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,88,"const wbEthContract = WBETH.bind(pricedToken);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,106,"const sFraxContract = SFRAX.bind(pricedToken);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,137,"const pendlePTContract = PendlePT.bind(pricedToken);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,140,"const pendleSYContract = PendleSY.bind(SYCall.value);"
ora-protocol,subgraphs/ora-protocol/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
ora-protocol,subgraphs/ora-protocol/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
ora-protocol,subgraphs/ora-protocol/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
ora-protocol,subgraphs/ora-protocol/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
ora-protocol,subgraphs/ora-protocol/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
ora-protocol,subgraphs/ora-protocol/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
ora-protocol,subgraphs/ora-protocol/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
ora-protocol,subgraphs/ora-protocol/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,37,"let contract = ERC20.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,38,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,63,"let contract = ERC20.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
orbit,subgraphs/orbit/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
orbit,subgraphs/orbit/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
orbit,subgraphs/orbit/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
orbit,subgraphs/orbit/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
orbit,subgraphs/orbit/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
orbit,subgraphs/orbit/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
orbit,subgraphs/orbit/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
origin-ether,subgraphs/origin-ether/src/mappings/handlers.ts,48,"const erc20 = _ERC20.bind(address);"
origin-ether,subgraphs/origin-ether/src/mappings/handlers.ts,103,"const vaultContract = Vault.bind(event.address);"
origin-ether,subgraphs/origin-ether/src/mappings/handlers.ts,140,"const vaultContract = Vault.bind(event.address);"
origin-ether,subgraphs/origin-ether/src/mappings/handlers.ts,190,"const vaultContract = Vault.bind(event.address);"
origin-ether,subgraphs/origin-ether/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
origin-ether,subgraphs/origin-ether/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
origin-ether,subgraphs/origin-ether/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
origin-ether,subgraphs/origin-ether/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
origin-ether,subgraphs/origin-ether/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
origin-ether,subgraphs/origin-ether/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
origin-ether,subgraphs/origin-ether/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
origin-ether,subgraphs/origin-ether/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
paxos-gold,subgraphs/paxos-gold/src/mappings/handlers.ts,33,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
paxos-gold,subgraphs/paxos-gold/src/mappings/handlers.ts,64,"const erc20 = _ERC20.bind(address);"
paxos-gold,subgraphs/paxos-gold/src/mappings/handlers.ts,85,"const pAXGContract = PAXG.bind(event.address);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,40,"let contract = ERC20.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,41,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,69,"let contract = ERC20.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/mappings/masterPlatypus.ts,22,"const MasterPlatypusContract = MasterPlatypusOld.bind(MasterPlatypusOld_ADDRESS);"
platypus-finance,subgraphs/platypus-finance/src/mappings/masterPlatypus.ts,117,"const MasterPlatypusContract = MasterPlatypusFactory.bind(MasterPlatypusFactory_ADDRESS);"
platypus-finance,subgraphs/platypus-finance/src/mappings/masterPlatypus.ts,211,"const MasterPlatypusContract = MasterPlatypus.bind(event.address);"
platypus-finance,subgraphs/platypus-finance/src/mappings/masterPlatypus.ts,350,"const rewarderContract = SimpleRewarder.bind(rewarder);"
platypus-finance,subgraphs/platypus-finance/src/mappings/pool.ts,110,"const PoolContract = Pool.bind(poolAddress);"
platypus-finance,subgraphs/platypus-finance/src/prices/common/utils.ts,10,"const token = _ERC20.bind(tokenAddr);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/SushiSwapRouter.ts,90,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/SushiSwapRouter.ts,94,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/SushiSwapRouter.ts,117,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/SushiSwapRouter.ts,136,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/TraderJoeRouter.ts,61,"const TraderJoeRouterV1 = TraderJoeRouterContract.bind(routerAddressV1);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/TraderJoeRouter.ts,65,"const TraderJoeRouterV2 = TraderJoeRouterContract.bind(routerAddressV2);"
portal,subgraphs/portal/src/mappings/handlers.ts,67,"const erc20 = _ERC20.bind(address);"
portal,subgraphs/portal/src/mappings/handlers.ts,114,"const bridgeContract = Bridge.bind(NetworkConfigs.getBridgeAddress());"
portal,subgraphs/portal/src/mappings/handlers.ts,185,"const coreContract = Core.bind(dataSource.address());"
portal,subgraphs/portal/src/mappings/handlers.ts,197,"const coreContract = Core.bind(NetworkConfigs.getFactoryAddress());"
portal,subgraphs/portal/src/mappings/handlers.ts,212,"const bridgeContract = Bridge.bind(dataSource.address());"
portal,subgraphs/portal/src/mappings/handlers.ts,275,"const coreContract = Core.bind(NetworkConfigs.getFactoryAddress());"
portal,subgraphs/portal/src/mappings/handlers.ts,290,"const bridgeContract = Bridge.bind(dataSource.address());"
portal,subgraphs/portal/src/mappings/handlers.ts,354,"const coreContract = Core.bind(NetworkConfigs.getFactoryAddress());"
portal,subgraphs/portal/src/mappings/handlers.ts,369,"const bridgeContract = Bridge.bind(dataSource.address());"
portal,subgraphs/portal/src/mappings/handlers.ts,432,"const coreContract = Core.bind(NetworkConfigs.getFactoryAddress());"
portal,subgraphs/portal/src/mappings/handlers.ts,447,"const bridgeContract = Bridge.bind(dataSource.address());"
portal,subgraphs/portal/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
portal,subgraphs/portal/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
portal,subgraphs/portal/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
portal,subgraphs/portal/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
portal,subgraphs/portal/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
portal,subgraphs/portal/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
portal,subgraphs/portal/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
portal,subgraphs/portal/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
portal,subgraphs/portal/src/prices/routers/CurveRouter.ts,21,"const curveRegistryContract = CurveRegistryContract.bind("
portal,subgraphs/portal/src/prices/routers/CurveRouter.ts,47,"const poolContract = CurvePoolContract.bind(poolAddress);"
portal,subgraphs/portal/src/prices/routers/CurveRouter.ts,102,"const curveRegistryContract = CurveRegistryContract.bind("
portal,subgraphs/portal/src/prices/routers/CurveRouter.ts,143,"const curveRegistryContract = CurveRegistryContract.bind("
portal,subgraphs/portal/src/prices/routers/CurveRouter.ts,208,"const poolContract = CurvePoolContract.bind(poolAddress);"
portal,subgraphs/portal/src/prices/routers/CurveRouter.ts,229,"const poolContract = CurvePoolContract.bind(poolAddress);"
portal,subgraphs/portal/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
portal,subgraphs/portal/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
portal,subgraphs/portal/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
portal,subgraphs/portal/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
portal,subgraphs/portal/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
powh3d,subgraphs/powh3d/src/mappings/handlers.ts,36,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
powh3d,subgraphs/powh3d/src/mappings/handlers.ts,69,"const erc20 = _ERC20.bind(address);"
powh3d,subgraphs/powh3d/src/mappings/handlers.ts,91,"const contract = Hourglass.bind(event.address);"
powh3d,subgraphs/powh3d/src/mappings/handlers.ts,113,"const contract = Hourglass.bind(event.address);"
powh3d,subgraphs/powh3d/src/mappings/handlers.ts,135,"const contract = Hourglass.bind(event.address);"
powh3d,subgraphs/powh3d/src/mappings/handlers.ts,157,"const contract = Hourglass.bind(event.address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/common/initializers.ts,71,"const contract = LRTDepositPool.bind("
prime-staked-eth,subgraphs/prime-staked-eth/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
puffer-finance,subgraphs/puffer-finance/src/common/initializers.ts,72,"const poolContract = PufferVault.bind(Address.fromBytes(pool.getBytesID()));"
puffer-finance,subgraphs/puffer-finance/src/common/initializers.ts,83,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
puffer-finance,subgraphs/puffer-finance/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
puffer-finance,subgraphs/puffer-finance/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
puffer-finance,subgraphs/puffer-finance/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
puffer-finance,subgraphs/puffer-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
puffer-finance,subgraphs/puffer-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
puffer-finance,subgraphs/puffer-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
puffer-finance,subgraphs/puffer-finance/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
puffer-finance,subgraphs/puffer-finance/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
puffer-finance,subgraphs/puffer-finance/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
qidao,subgraphs/qidao/src/entities/market.ts,49,"const contract = erc20QiStablecoin.bind(event.address);"
qidao,subgraphs/qidao/src/entities/market.ts,90,"const contract = QiStablecoin.bind(event.address);"
qidao,subgraphs/qidao/src/entities/market.ts,388,"contract = erc20QiStablecoin.bind(Address.fromString(market.id));"
qidao,subgraphs/qidao/src/entities/price.ts,50,"const contract = erc20QiStablecoin.bind(marketAddress);"
qidao,subgraphs/qidao/src/entities/price.ts,81,"const decimalsFunctions = QiStablecoinDecimals.bind(contract._address);"
qidao,subgraphs/qidao/src/entities/protocol.ts,256,"const maiContract = ERC20.bind(Address.fromString(maiToken.id));"
qidao,subgraphs/qidao/src/entities/token.ts,14,"const contract = ERC20.bind(tokenAddress);"
qidao,subgraphs/qidao/src/entities/token.ts,40,"const contractNameBytes = ERC20NameBytes.bind(contract._address);"
qidao,subgraphs/qidao/src/entities/token.ts,52,"const contractSymbolBytes = ERC20SymbolBytes.bind(contract._address);"
qidao,subgraphs/qidao/src/entities/token.ts,90,"const contract = ERC20.bind(tokenAddress);"
qidao,subgraphs/qidao/src/mappings/QiStablecoin.ts,67,"const contract = QiStablecoin.bind(event.address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,8,"let contract = ERC20.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,14,"let bytesContract = ERC20NameBytes.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,25,"let contract = ERC20.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,31,"let bytesContract = ERC20SymbolBytes.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,44,"let contract = ERC20.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,207,"let contract = RariYieldFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,225,"let contract = RariStableFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,230,"let contract = RariStableFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,235,"let contract = RariEtherFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,272,"let contract = RariYieldFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,277,"let contract = RariStableFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,282,"let contract = RariStableFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,287,"let contract = RariEtherFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,399,"let contract = RariYieldFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,404,"let contract = RariStableFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,409,"let contract = RariStableFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,414,"let contract = RariEtherFundManager.bind("
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,465,"let outputTokenContract = ERC20.bind(Address.fromString(vault.outputToken!));"
rari-vaults,subgraphs/rari-vaults/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
rari-vaults,subgraphs/rari-vaults/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
rari-vaults,subgraphs/rari-vaults/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
rari-vaults,subgraphs/rari-vaults/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
rari-vaults,subgraphs/rari-vaults/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
rari-vaults,subgraphs/rari-vaults/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
rari-vaults,subgraphs/rari-vaults/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
rari-vaults,subgraphs/rari-vaults/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
rari-vaults,subgraphs/rari-vaults/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/UniswapRouter.ts,98,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/UniswapRouter.ts,101,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/common/initializers.ts,33,"const contract = RestakeManager.bind(depositAddress);"
renzo,subgraphs/renzo/src/common/initializers.ts,66,"const poolContract = RestakeManager.bind("
renzo,subgraphs/renzo/src/common/initializers.ts,77,"const contract = ERC20.bind(Address.fromString(constants.EZETH_ADDRESS));"
renzo,subgraphs/renzo/src/common/initializers.ts,88,"const contract = DepositQueue.bind(depositQueue);"
renzo,subgraphs/renzo/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
renzo,subgraphs/renzo/src/mappings/ezEthMappings.ts,32,"const xezEthContract = ERC20.bind(xezEthAddress);"
renzo,subgraphs/renzo/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
renzo,subgraphs/renzo/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
renzo,subgraphs/renzo/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
renzo,subgraphs/renzo/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
renzo,subgraphs/renzo/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
renzo,subgraphs/renzo/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
renzo,subgraphs/renzo/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
renzo,subgraphs/renzo/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/common/initializers.ts,43,"const contract = ERC20Contract.bind(address);"
ribbon-finance,subgraphs/ribbon-finance/src/common/initializers.ts,242,"const vaultContract = VaultContract.bind(vaultAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/common/initializers.ts,383,"const gaugeContract = GaugeContract.bind(gaugeAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/common/utils.ts,30,"const vaultContract = VaultContract.bind(vaultAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/common/utils.ts,67,"const vaultContract = VaultContract.bind(vaultAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/common/utils.ts,99,"const vaultContract = VaultContract.bind(vaultAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/common/utils.ts,145,"const vaultContract = VaultContract.bind(vaultAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/modules/Metrics.ts,160,"const vaultContract = VaultContract.bind(vaultAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/modules/Rewards.ts,22,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/modules/Rewards.ts,54,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/modules/Rewards.ts,108,"const gaugeContract = LiquidityGaugeContract.bind(gaugeAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/modules/Rewards.ts,109,"const gaugeControllerContract = GaugeControllerContract.bind("
ribbon-finance,subgraphs/ribbon-finance/src/modules/Transaction.ts,124,"const vaultContract = VaultContract.bind(vaultAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/modules/Transaction.ts,200,"const vaultContract = VaultContract.bind(vaultAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
ribbon-finance,subgraphs/ribbon-finance/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/CurveRouter.ts,21,"const curveRegistryContract = CurveRegistryContract.bind("
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/CurveRouter.ts,47,"const poolContract = CurvePoolContract.bind(poolAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/CurveRouter.ts,102,"const curveRegistryContract = CurveRegistryContract.bind("
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/CurveRouter.ts,143,"const curveRegistryContract = CurveRegistryContract.bind("
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/CurveRouter.ts,208,"const poolContract = CurvePoolContract.bind(poolAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/CurveRouter.ts,229,"const poolContract = CurvePoolContract.bind(poolAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/UniswapForksRouter.ts,86,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/common/initializers.ts,35,"const vaultContract = FewWrappedToken.bind("
ring-few,subgraphs/ring-few/src/common/initializers.ts,60,"const tokenContract = ERC20.bind(inputTokenAddress);"
ring-few,subgraphs/ring-few/src/common/initializers.ts,71,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
ring-few,subgraphs/ring-few/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
ring-few,subgraphs/ring-few/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
ring-few,subgraphs/ring-few/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
ring-few,subgraphs/ring-few/src/prices/common/utils.ts,50,"const tokenContract = _ERC20.bind(tokenAddr);"
ring-few,subgraphs/ring-few/src/prices/common/utils.ts,57,"const tokenContract = _ERC20.bind(tokenAddr);"
ring-few,subgraphs/ring-few/src/prices/common/utils.ts,68,"const tokenContract = _ERC20.bind(tokenAddr);"
ring-few,subgraphs/ring-few/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
ring-few,subgraphs/ring-few/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
ring-few,subgraphs/ring-few/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
rocket-pool,subgraphs/rocket-pool/src/entities/token.ts,55,"const tokenContract = _ERC20.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/entities/token.ts,65,"const tokenContract = _ERC20.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/entities/token.ts,75,"const tokenContract = _ERC20.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketMinipoolManager.ts,194,"const networkFeesContract = rocketNetworkFees.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketMinipoolManager.ts,213,"const rocketNodeStakingContract = rocketNodeStaking.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkBalancesMapping.ts,68,"const rETHContract = rocketTokenRETH.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkBalancesMapping.ts,77,"const rocketDepositPoolContract = rocketDepositPool.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkBalancesMapping.ts,192,"const rocketVaultContract = rocketVault.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkBalancesMapping.ts,216,"const rocketNodeStakingContract = rocketNodeStaking.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkPricesMapping.ts,56,"const networkFeesContract = rocketNetworkFees.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkPricesMapping.ts,158,"const rocketNodeStakingContract = rocketNodeStaking.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkPricesMapping.ts,311,"rocketDAOProtocolSettingsMinipool.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkPricesMapping.ts,328,"rocketDAOProtocolSettingsNode.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNodeManager.ts,131,"const rocketNodeManagerContract = rocketNodeManager.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNodeStakingMapping.ts,98,"const rocketNetworkPricesContract = rocketNetworkPrices.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNodeStakingMapping.ts,141,"const rocketNodeStakingContract = rocketNodeStaking.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketRewardsPoolMapping.ts,54,"const rocketRewardPoolContract = rocketRewardsPool.bind(event.address);"
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketRewardsPoolMapping.ts,156,"const networkPricesContract = rocketNetworkPrices.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketRewardsPoolMapping.ts,366,"const rocketRewardsContract = rocketRewardsPool.bind(rewardsPoolAddress);"
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketTokenRETHMapping.ts,91,"const rETHContract = rocketTokenRETH.bind(event.address);"
rocket-pool,subgraphs/rocket-pool/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
rocket-pool,subgraphs/rocket-pool/src/prices/index.ts,31,"const rethPriceContract = rocketTokenRETH.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/index.ts,66,"const rplPriceContract = rocketNetworkPrices.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/routers/SushiSwapRouter.ts,21,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/SushiSwapRouter.ts,102,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/SushiSwapRouter.ts,105,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/SushiSwapRouter.ts,134,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/SushiSwapRouter.ts,168,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/UniswapRouter.ts,20,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/UniswapRouter.ts,99,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/UniswapRouter.ts,102,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/UniswapRouter.ts,131,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/UniswapRouter.ts,168,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/entities/pool.ts,129,"const contract = Swap.bind(address);"
saddle-finance,subgraphs/saddle-finance/src/entities/pool.ts,133,"const v1contract = SwapV1.bind(address);"
saddle-finance,subgraphs/saddle-finance/src/entities/pool.ts,387,"const rewarder = SimpleRewarder.bind(rewarderAddress);"
saddle-finance,subgraphs/saddle-finance/src/entities/pool.ts,603,"contract = Swap.bind(Address.fromString(pool.id));"
saddle-finance,subgraphs/saddle-finance/src/entities/token.ts,16,"const contract = ERC20.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/entities/token.ts,43,"const contractNameBytes = ERC20NameBytes.bind(contract._address);"
saddle-finance,subgraphs/saddle-finance/src/entities/token.ts,55,"const contractSymbolBytes = ERC20SymbolBytes.bind(contract._address);"
saddle-finance,subgraphs/saddle-finance/src/entities/token.ts,77,"const contract = ERC20.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/mappings/miniChef.ts,15,"const contract = MiniChefV2.bind(event.address);"
saddle-finance,subgraphs/saddle-finance/src/mappings/miniChef.ts,25,"const contract = MiniChefV2.bind(event.address);"
saddle-finance,subgraphs/saddle-finance/src/mappings/miniChef.ts,35,"const contract = MiniChefV2.bind(event.address);"
saddle-finance,subgraphs/saddle-finance/src/mappings/miniChef.ts,40,"const contract = MiniChefV2.bind(event.address);"
saddle-finance,subgraphs/saddle-finance/src/mappings/miniChef.ts,48,"const contract = MiniChefV2.bind(event.address);"
saddle-finance,subgraphs/saddle-finance/src/mappings/miniChef.ts,53,"const contract = MiniChefV2.bind(event.address);"
saddle-finance,subgraphs/saddle-finance/src/mappings/swap.ts,30,"const contract = Swap.bind(event.address);"
saddle-finance,subgraphs/saddle-finance/src/mappings/swap.ts,39,"const contract = Swap.bind(event.address);"
saddle-finance,subgraphs/saddle-finance/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
saddle-finance,subgraphs/saddle-finance/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
saddle-finance,subgraphs/saddle-finance/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
saddle-finance,subgraphs/saddle-finance/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
saddle-finance,subgraphs/saddle-finance/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
saddle-finance,subgraphs/saddle-finance/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
saddle-finance,subgraphs/saddle-finance/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
saddle-finance,subgraphs/saddle-finance/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
saddle-finance,subgraphs/saddle-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/UniswapRouter.ts,98,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/UniswapRouter.ts,101,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/utils/price.ts,231,"const contract = SwapContract.bind(Address.fromString(pool.id));"
seaport,subgraphs/seaport/src/mapping.ts,342,"const contract = NftMetadata.bind(Address.fromString(collectionID));"
seaport,subgraphs/seaport/src/mapping.ts,450,"const erc165 = ERC165.bind(Address.fromString(collectionID));"
slisbnb,subgraphs/slisbnb/src/mappings/handlers.ts,56,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
slisbnb,subgraphs/slisbnb/src/mappings/handlers.ts,99,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
slisbnb,subgraphs/slisbnb/src/mappings/handlers.ts,137,"const erc20 = _ERC20.bind(address);"
slisbnb,subgraphs/slisbnb/src/mappings/handlers.ts,198,"const slisBNBContract = slisBNB.bind(NetworkConfigs.getLSTAddress());"
slisbnb,subgraphs/slisbnb/src/mappings/handlers.ts,246,"const slisBNBContract = slisBNB.bind(NetworkConfigs.getLSTAddress());"
slisbnb,subgraphs/slisbnb/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
slisbnb,subgraphs/slisbnb/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
slisbnb,subgraphs/slisbnb/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
slisbnb,subgraphs/slisbnb/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
slisbnb,subgraphs/slisbnb/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
slisbnb,subgraphs/slisbnb/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
slisbnb,subgraphs/slisbnb/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
slisbnb,subgraphs/slisbnb/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
spiko,subgraphs/spiko/src/mappings/handlers.ts,54,"const erc20 = _ERC20.bind(address);"
spiko,subgraphs/spiko/src/mappings/handlers.ts,76,"const contract = USTBL.bind(event.address);"
spiko,subgraphs/spiko/src/mappings/handlers.ts,100,"const contract = EUTBL.bind(event.address);"
stader,subgraphs/stader/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
stader,subgraphs/stader/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
stader,subgraphs/stader/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
stader,subgraphs/stader/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
stader,subgraphs/stader/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
stader,subgraphs/stader/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
stader,subgraphs/stader/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
stader,subgraphs/stader/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
stader,subgraphs/stader/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/mappings/handlers.ts,57,"const erc20 = _ERC20.bind(address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/mappings/handlers.ts,84,"const stLINK = STLINK.bind(event.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/mappings/handlers.ts,130,"const ppContract = PriorityPool.bind(event.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/mappings/handlers.ts,153,"const ppContract = PriorityPool.bind(event.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/mappings/handlers.ts,172,"const ppContract = PriorityPool.bind(event.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/mappings/handlers.ts,191,"const ppContract = PriorityPool.bind(event.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
stakedao,subgraphs/stakedao/src/Prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
stakedao,subgraphs/stakedao/src/Prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
stakedao,subgraphs/stakedao/src/Prices/common/utils.ts,13,"const token = PriceOracleERC20.bind(tokenAddr);"
stakedao,subgraphs/stakedao/src/Prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
stakedao,subgraphs/stakedao/src/Prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
stakedao,subgraphs/stakedao/src/Prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
stakedao,subgraphs/stakedao/src/Prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
stakedao,subgraphs/stakedao/src/Prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
stakedao,subgraphs/stakedao/src/Prices/routers/SushiSwapRouter.ts,18,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/SushiSwapRouter.ts,99,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
stakedao,subgraphs/stakedao/src/Prices/routers/SushiSwapRouter.ts,102,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
stakedao,subgraphs/stakedao/src/Prices/routers/SushiSwapRouter.ts,128,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/SushiSwapRouter.ts,159,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/UniswapRouter.ts,18,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/UniswapRouter.ts,99,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
stakedao,subgraphs/stakedao/src/Prices/routers/UniswapRouter.ts,102,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
stakedao,subgraphs/stakedao/src/Prices/routers/UniswapRouter.ts,128,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/UniswapRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/common/initializers.ts,75,"const contract = ERC20Contract.bind(address);"
stakedao,subgraphs/stakedao/src/common/initializers.ts,280,"const controller = ControllerContract.bind(controllerAddress);"
stakedao,subgraphs/stakedao/src/common/initializers.ts,298,"const strategyContract = StrategyContract.bind("
stakedao,subgraphs/stakedao/src/common/utils.ts,28,"const token = ERC20Contract.bind(tokenAddr);"
stakedao,subgraphs/stakedao/src/mappings/controllerMappings.ts,25,"const vaultContract = VaultContract.bind(vaultAddress);"
stakedao,subgraphs/stakedao/src/mappings/controllerMappings.ts,85,"const controller = ControllerContract.bind(controllerAddress);"
stakedao,subgraphs/stakedao/src/mappings/gaugeMappings.ts,20,"const gaugeContract = GaugeContract.bind(gaugeAddress);"
stakedao,subgraphs/stakedao/src/mappings/gaugeMappings.ts,59,"const gaugeContract = GaugeContract.bind(gaugeAddress);"
stakedao,subgraphs/stakedao/src/mappings/gaugeMappings.ts,67,"const strategyContract = StrategyContract.bind(strategyAddress);"
stakedao,subgraphs/stakedao/src/modules/Deposit.ts,70,"const vaultContract = VaultContract.bind(vaultAddress);"
stakedao,subgraphs/stakedao/src/modules/Price.ts,18,"const vaultContract = Vault.bind(vaultAddress);"
stakedao,subgraphs/stakedao/src/modules/Reward.ts,19,"const gaugeContract = GaugeContract.bind(gaugeAddress);"
stakedao,subgraphs/stakedao/src/modules/Strategy.ts,27,"const strategyContract = StrategyContract.bind(strategyAddress);"
stakedao,subgraphs/stakedao/src/modules/Withdraw.ts,74,"const vaultContract = VaultContract.bind(vaultAddress);"
stakedao,subgraphs/stakedao/src/modules/Withdraw.ts,77,"const strategyContract = StrategyContract.bind(strategyAddress);"
stakedao,subgraphs/stakedao/src/modules/Withdraw.ts,81,"const stableMasterContract = StableMasterContract.bind("
stakestone,subgraphs/stakestone/src/mappings/handlers.ts,49,"const erc20 = _ERC20.bind(address);"
stakestone,subgraphs/stakestone/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
stakestone,subgraphs/stakestone/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
stakestone,subgraphs/stakestone/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
stakestone,subgraphs/stakestone/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
stakestone,subgraphs/stakestone/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
stakestone,subgraphs/stakestone/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
stakestone,subgraphs/stakestone/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
stakestone,subgraphs/stakestone/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers-gnosis.ts,32,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers-gnosis.ts,61,"const erc20 = _ERC20.bind(address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers-gnosis.ts,85,"const contract = StakedGnoToken.bind(event.address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,47,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,76,"const erc20 = _ERC20.bind(address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,100,"const contract = RewardEthToken.bind(event.address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,131,"const contract = StakedEthToken.bind(event.address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,192,"const contract = Vault.bind(event.address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,219,"const contract = Vault.bind(event.address);"
stargate,subgraphs/stargate/src/common/tokens.ts,17,"let contract = ERC20.bind(tokenAddress);"
stargate,subgraphs/stargate/src/common/tokens.ts,18,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
stargate,subgraphs/stargate/src/common/tokens.ts,47,"let contract = ERC20.bind(tokenAddress);"
stargate,subgraphs/stargate/src/common/tokens.ts,48,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
stargate,subgraphs/stargate/src/common/tokens.ts,77,"let contract = ERC20.bind(tokenAddress);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,88,"const wrappedERC20 = Pool.bind(address);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,91,"const erc20 = _ERC20.bind(address);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,126,"const lpStakingContract = LPStaking.bind(lpStakingContractAddr);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,149,"const poolContract = Pool.bind(poolAddr);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,174,"const lpStakingContract = LPStakingTime.bind(lpStakingContractAddr);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,197,"const poolContract = Pool.bind(poolAddr);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,224,"const lpStakingContract = LPStaking.bind(lpStakingContractAddr);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,247,"const poolContract = Pool.bind(poolAddr);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,274,"const lpStakingContract = LPStakingTime.bind(lpStakingContractAddr);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,297,"const poolContract = Pool.bind(poolAddr);"
stargate,subgraphs/stargate/src/mappings/helpers.ts,15,"const factoryContract = Factory.bind("
stargate,subgraphs/stargate/src/mappings/helpers.ts,26,"const poolContract = Pool.bind(poolAddr);"
stargate,subgraphs/stargate/src/prices/calculations/CalculationsCurve.ts,12,"return CalculationsCurveContract.bind(contractAddress);"
stargate,subgraphs/stargate/src/prices/calculations/CalculationsSushiswap.ts,12,"return CalculationsSushiContract.bind(contractAddress);"
stargate,subgraphs/stargate/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
stargate,subgraphs/stargate/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
stargate,subgraphs/stargate/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
stargate,subgraphs/stargate/src/prices/oracles/AaveOracle.ts,12,"return AaveOracleContract.bind(contractAddress);"
stargate,subgraphs/stargate/src/prices/oracles/ChainLinkFeed.ts,11,"return ChainLinkContract.bind(config.chainLink());"
stargate,subgraphs/stargate/src/prices/oracles/YearnLensOracle.ts,12,"return YearnLensContract.bind(contractAddress);"
stargate,subgraphs/stargate/src/prices/routers/CurveRouter.ts,22,"const curveRegistryContract = CurveRegistryContract.bind("
stargate,subgraphs/stargate/src/prices/routers/CurveRouter.ts,48,"const poolContract = CurvePoolContract.bind(poolAddress);"
stargate,subgraphs/stargate/src/prices/routers/CurveRouter.ts,103,"const curveRegistryContract = CurveRegistryContract.bind("
stargate,subgraphs/stargate/src/prices/routers/CurveRouter.ts,144,"const curveRegistryContract = CurveRegistryContract.bind("
stargate,subgraphs/stargate/src/prices/routers/CurveRouter.ts,209,"const poolContract = CurvePoolContract.bind(poolAddress);"
stargate,subgraphs/stargate/src/prices/routers/CurveRouter.ts,230,"const poolContract = CurvePoolContract.bind(poolAddress);"
stargate,subgraphs/stargate/src/prices/routers/CurveRouter.ts,256,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stargate,subgraphs/stargate/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stargate,subgraphs/stargate/src/prices/routers/UniswapForksRouter.ts,87,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress);"
stargate,subgraphs/stargate/src/prices/routers/UniswapForksRouter.ts,110,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stargate,subgraphs/stargate/src/prices/routers/UniswapForksRouter.ts,149,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stcelo,subgraphs/stcelo/src/mappings/handlers.ts,35,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
stcelo,subgraphs/stcelo/src/mappings/handlers.ts,64,"const erc20 = _ERC20.bind(address);"
stcelo,subgraphs/stcelo/src/mappings/handlers.ts,86,"const contract = STCELO.bind("
stcelo,subgraphs/stcelo/src/mappings/handlers.ts,112,"const contract = STCELO.bind("
stcelo,subgraphs/stcelo/src/mappings/handlers.ts,138,"const contract = STCELO.bind("
stream-finance,subgraphs/stream-finance/src/common/initializers.ts,34,"const vaultContract = StreamVault.bind(poolAddress);"
stream-finance,subgraphs/stream-finance/src/common/utils.ts,36,"const contract = ERC20.bind(address);"
stream-finance,subgraphs/stream-finance/src/common/utils.ts,56,"const vaultContract = StreamVault.bind(Address.fromBytes(pool.getBytesID()));"
stream-finance,subgraphs/stream-finance/src/common/utils.ts,67,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
stream-finance,subgraphs/stream-finance/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
stream-finance,subgraphs/stream-finance/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
stream-finance,subgraphs/stream-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
stream-finance,subgraphs/stream-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
stream-finance,subgraphs/stream-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
stream-finance,subgraphs/stream-finance/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
stream-finance,subgraphs/stream-finance/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
stream-finance,subgraphs/stream-finance/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
superseed,subgraphs/superseed/src/mappings/handlers.ts,46,"const erc20 = _ERC20.bind(address);"
suzaku,subgraphs/suzaku/src/mappings/handlers.ts,77,"const erc20 = _ERC20.bind(address);"
suzaku,subgraphs/suzaku/src/mappings/handlers.ts,98,"const contract = Collateral.bind(event.address);"
suzaku,subgraphs/suzaku/src/mappings/handlers.ts,121,"const contract = Collateral.bind(event.address);"
suzaku,subgraphs/suzaku/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
suzaku,subgraphs/suzaku/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
suzaku,subgraphs/suzaku/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
suzaku,subgraphs/suzaku/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
suzaku,subgraphs/suzaku/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
suzaku,subgraphs/suzaku/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
suzaku,subgraphs/suzaku/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
suzaku,subgraphs/suzaku/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/mappings/handlers.ts,65,"const erc20 = _ERC20.bind(address);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/mappings/handlers.ts,125,"const swETH = SWETH.bind(Address.fromBytes(lst.id));"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/mappings/handlers.ts,189,"const swETH = SWETH.bind(Address.fromBytes(lst.id));"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
symbiotic,subgraphs/symbiotic/src/mappings/handlers.ts,92,"const erc20 = _ERC20.bind(address);"
symbiotic,subgraphs/symbiotic/src/mappings/handlers.ts,150,"const collateralContract = Collateral.bind(event.address);"
symbiotic,subgraphs/symbiotic/src/mappings/handlers.ts,192,"const collateralContract = Collateral.bind(event.address);"
symbiotic,subgraphs/symbiotic/src/mappings/helpers.ts,40,"const wbEthContract = WBETH.bind(pricedToken);"
symbiotic,subgraphs/symbiotic/src/mappings/helpers.ts,55,"const sFraxContract = SFRAX.bind(pricedToken);"
symbiotic,subgraphs/symbiotic/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
symbiotic,subgraphs/symbiotic/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
symbiotic,subgraphs/symbiotic/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
symbiotic,subgraphs/symbiotic/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
symbiotic,subgraphs/symbiotic/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
symbiotic,subgraphs/symbiotic/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
symbiotic,subgraphs/symbiotic/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
symbiotic,subgraphs/symbiotic/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,84,"const erc20 = _ERC20.bind(address);"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,105,"const contract = Tenderizer.bind(event.address);"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,107,"const tokenContract = _ERC20.bind(Address.fromBytes(token.id));"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,135,"const contract = Tenderizer.bind(event.address);"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,137,"const tokenContract = _ERC20.bind(Address.fromBytes(token.id));"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,165,"const contract = Tenderizer.bind(event.address);"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,167,"const tokenContract = _ERC20.bind(Address.fromBytes(token.id));"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/helpers.ts,48,"const uniswapPool = UniswapV3Pool.bind(address);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
tensorplex,subgraphs/tensorplex/src/mappings/handlers.ts,40,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
tensorplex,subgraphs/tensorplex/src/mappings/handlers.ts,77,"const erc20 = _ERC20.bind(address);"
tensorplex,subgraphs/tensorplex/src/mappings/handlers.ts,100,"const plxTAOContract = PLXTAO.bind(event.address);"
tensorplex,subgraphs/tensorplex/src/mappings/handlers.ts,161,"const plxTAOContract = PLXTAO.bind(event.address);"
tensorplex,subgraphs/tensorplex/src/mappings/helpers.ts,49,"//   const uniswapPool = UniswapV3Pool.bind(address);"
tensorplex,subgraphs/tensorplex/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
tensorplex,subgraphs/tensorplex/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
tensorplex,subgraphs/tensorplex/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
tensorplex,subgraphs/tensorplex/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
tensorplex,subgraphs/tensorplex/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
tensorplex,subgraphs/tensorplex/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
tensorplex,subgraphs/tensorplex/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
tensorplex,subgraphs/tensorplex/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
tether-gold,subgraphs/tether-gold/src/mappings/handlers.ts,33,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
tether-gold,subgraphs/tether-gold/src/mappings/handlers.ts,65,"const erc20 = _ERC20.bind(address);"
tether-gold,subgraphs/tether-gold/src/mappings/handlers.ts,86,"const XAUTContract = XAUT.bind(event.address);"
the-graph,subgraphs/the-graph/src/common/getters.ts,157,"const erc20Contract = _ERC20.bind(Address.fromString(address));"
the-graph,subgraphs/the-graph/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
the-graph,subgraphs/the-graph/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
the-graph,subgraphs/the-graph/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
the-graph,subgraphs/the-graph/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
the-graph,subgraphs/the-graph/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
the-graph,subgraphs/the-graph/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
the-graph,subgraphs/the-graph/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
the-graph,subgraphs/the-graph/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
the-graph,subgraphs/the-graph/src/prices/routers/CurveRouter.ts,30,"const curveRegistryContract = CurveRegistryContract.bind("
the-graph,subgraphs/the-graph/src/prices/routers/CurveRouter.ts,59,"const poolContract = CurvePoolContract.bind(poolAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/CurveRouter.ts,126,"const curveRegistryContract = CurveRegistryContract.bind("
the-graph,subgraphs/the-graph/src/prices/routers/CurveRouter.ts,173,"const curveRegistryContract = CurveRegistryContract.bind("
the-graph,subgraphs/the-graph/src/prices/routers/CurveRouter.ts,251,"const poolContract = CurvePoolContract.bind(poolAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/CurveRouter.ts,272,"const poolContract = CurvePoolContract.bind(poolAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/CurveRouter.ts,300,"const poolContract = CurvePoolContract.bind(tokenAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/UniswapForksRouter.ts,92,"const uniswapForkRouter = UniswapRouterContract.bind(routerAddress.address);"
the-graph,subgraphs/the-graph/src/prices/routers/UniswapForksRouter.ts,119,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/UniswapForksRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/common/tokens.ts,12,"let erc20Contract = ERC20Contract.bind(address);"
tokemak,subgraphs/tokemak/src/common/vaults.ts,11,"const vaultContract = VaultContract.bind(Address.fromString(vault.id));"
tokemak,subgraphs/tokemak/src/prices/calculations/CalculationsCurve.ts,8,"return CalculationsCurveContract.bind(constants.CURVE_CALCULATIONS_ADDRESS_MAP.get(network)!);"
tokemak,subgraphs/tokemak/src/prices/calculations/CalculationsSushiswap.ts,8,"return CalculationsSushiContract.bind(constants.SUSHISWAP_CALCULATIONS_ADDRESS_MAP.get(network)!);"
tokemak,subgraphs/tokemak/src/prices/common/utils.ts,10,"const token = _ERC20.bind(tokenAddr);"
tokemak,subgraphs/tokemak/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind(constants.CHAIN_LINK_CONTRACT_ADDRESS.get(network));"
tokemak,subgraphs/tokemak/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind(Address.fromString(constants.YEARN_LENS_CONTRACT_ADDRESS.get(network)));"
tokemak,subgraphs/tokemak/src/prices/routers/CurveRouter.ts,12,"const curveRegistry = CurveRegistryContract.bind(constants.CURVE_REGISTRY_ADDRESS_MAP.get(network)!);"
tokemak,subgraphs/tokemak/src/prices/routers/CurveRouter.ts,35,"const curvePoolRegistry = CurvePoolRegistryContract.bind(constants.CURVE_POOL_REGISTRY_ADDRESS_MAP.get(network)!);"
tokemak,subgraphs/tokemak/src/prices/routers/CurveRouter.ts,105,"const curveRegistry = CurveRegistryContract.bind(constants.CURVE_REGISTRY_ADDRESS_MAP.get(network)!);"
tokemak,subgraphs/tokemak/src/prices/routers/SushiSwapRouter.ts,16,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/SushiSwapRouter.ts,79,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
tokemak,subgraphs/tokemak/src/prices/routers/SushiSwapRouter.ts,82,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
tokemak,subgraphs/tokemak/src/prices/routers/SushiSwapRouter.ts,105,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/SushiSwapRouter.ts,124,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/UniswapRouter.ts,17,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/UniswapRouter.ts,76,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
tokemak,subgraphs/tokemak/src/prices/routers/UniswapRouter.ts,79,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
tokemak,subgraphs/tokemak/src/prices/routers/UniswapRouter.ts,102,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/UniswapRouter.ts,127,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/protocols/tornado-cash/config/deployments/tornado-cash-classic-bsc/configurations.ts,50,"let contract = TornadoCashBNB.bind(Address.fromString(poolAddress));"
tornado-cash,subgraphs/tornado-cash/protocols/tornado-cash/config/deployments/tornado-cash-classic-bsc/configurations.ts,57,"let contract = TornadoCashERC20.bind(Address.fromString(poolAddress));"
tornado-cash,subgraphs/tornado-cash/protocols/tornado-cash/config/deployments/tornado-cash-classic-ethereum/configurations.ts,50,"let contract = TornadoCashETH.bind(Address.fromString(poolAddress));"
tornado-cash,subgraphs/tornado-cash/protocols/tornado-cash/config/deployments/tornado-cash-classic-ethereum/configurations.ts,57,"let contract = TornadoCashERC20.bind(Address.fromString(poolAddress));"
tornado-cash,subgraphs/tornado-cash/src/common/getters.ts,143,"const contractTCERC20 = TornadoCashERC20.bind("
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,14,"let contract = ERC20.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,15,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,44,"let contract = ERC20.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,45,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,74,"let contract = ERC20.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
tornado-cash,subgraphs/tornado-cash/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/oracles/UniswapV1.ts,10,"return UniswapV1DAI.bind(constants.UNISWAP_DAI_CONTRACT_ADDRESS.get(network));"
tornado-cash,subgraphs/tornado-cash/src/prices/oracles/UniswapV1.ts,14,"return UniswapV1USDC.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/oracles/UniswapV1.ts,20,"return UniswapV1cDAI.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
tornado-cash,subgraphs/tornado-cash/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/UniswapRouter.ts,109,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/UniswapRouter.ts,112,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/UniswapRouter.ts,141,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/UniswapRouter.ts,178,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/entities/market.ts,333,"const poolContract = TruefiPool2.bind(Address.fromString(market.id));"
truefi,subgraphs/truefi/src/entities/market.ts,343,"const portfoliContract = ManagedPortfolio.bind("
truefi,subgraphs/truefi/src/entities/market.ts,482,"const poolContract = TruefiPool2.bind(Address.fromString(market.id));"
truefi,subgraphs/truefi/src/entities/market.ts,496,"const portfolioContract = ManagedPortfolio.bind("
truefi,subgraphs/truefi/src/entities/price.ts,66,"const priceOracle = ChainlinkTruUsdcOracle.bind(priceOracleAddress);"
truefi,subgraphs/truefi/src/entities/price.ts,81,"const priceOracle = ChainlinkTruUsdcOracle.bind(priceOracleAddress);"
truefi,subgraphs/truefi/src/entities/price.ts,95,"const priceOracle = ChainlinkTruUsdtOracle.bind(priceOracleAddress);"
truefi,subgraphs/truefi/src/entities/price.ts,108,"const priceOracle = ChainlinkTruBusdOracle.bind(priceOracleAddress);"
truefi,subgraphs/truefi/src/entities/price.ts,122,"const priceOracle = ChainlinkTruTusdOracle.bind(priceOracleAddress);"
truefi,subgraphs/truefi/src/entities/token.ts,15,"const contract = IERC20Detailed.bind(tokenAddress);"
truefi,subgraphs/truefi/src/entities/token.ts,46,"const contractNameBytes = IERC20DetailedBytes.bind(contract._address);"
truefi,subgraphs/truefi/src/entities/token.ts,58,"let contractSymbolBytes = IERC20DetailedBytes.bind(contract._address);"
truefi,subgraphs/truefi/src/mappings/BulletLoans.ts,29,"const contract = BulletLoans.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/BulletLoans.ts,70,"const contract = BulletLoans.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/Liquidator.ts,8,"const contract = LoanToken.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/LoanToken.ts,28,"const contract = LoanToken.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/LoanToken.ts,79,"const contract = LoanToken.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/ManagedPortfolio.ts,56,"const contract = ManagedPortfolio.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/ManagedPortfolio.ts,80,"const contract = ManagedPortfolio.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/TruefiPool.ts,71,"const contract = TruefiPool2.bind(event.address);"
truefi,subgraphs/truefi/src/prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
truefi,subgraphs/truefi/src/prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
truefi,subgraphs/truefi/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
truefi,subgraphs/truefi/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
truefi,subgraphs/truefi/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
truefi,subgraphs/truefi/src/prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
truefi,subgraphs/truefi/src/prices/routers/CurveRouter.ts,55,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
truefi,subgraphs/truefi/src/prices/routers/CurveRouter.ts,135,"const curveRegistry = CurveRegistryContract.bind("
truefi,subgraphs/truefi/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/SushiSwapRouter.ts,101,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
truefi,subgraphs/truefi/src/prices/routers/SushiSwapRouter.ts,104,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
truefi,subgraphs/truefi/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/UniswapRouter.ts,98,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
truefi,subgraphs/truefi/src/prices/routers/UniswapRouter.ts,101,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
truefi,subgraphs/truefi/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/common/initializers.ts,55,"const vaultContract = AssetVault.bind(poolAddress);"
umami-finance,subgraphs/umami-finance/src/common/initializers.ts,77,"const poolContract = AssetVault.bind(Address.fromBytes(pool.getBytesID()));"
umami-finance,subgraphs/umami-finance/src/common/initializers.ts,88,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
umami-finance,subgraphs/umami-finance/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
umami-finance,subgraphs/umami-finance/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
umami-finance,subgraphs/umami-finance/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
umami-finance,subgraphs/umami-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
umami-finance,subgraphs/umami-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
umami-finance,subgraphs/umami-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
umami-finance,subgraphs/umami-finance/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
umami-finance,subgraphs/umami-finance/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
umami-finance,subgraphs/umami-finance/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
uniswap-forks,subgraphs/uniswap-forks/protocols/apeswap/config/deployments/apeswap-bsc/configurations.ts,43,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/apeswap/config/deployments/apeswap-polygon/configurations.ts,43,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/apeswap/src/common/handlers/handleReward.ts,33,"const poolContract = MasterChefApeswap.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/apeswap/src/common/handlers/handleRewardMini.ts,29,"const masterchefV2Contract = MiniChefV2Apeswap.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/baseswap/config/deployments/baseswap-base/configurations.ts,43,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/biswap/config/deployments/biswap-bsc/configurations.ts,43,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/camelot-v2/config/deployments/camelot-v2-arbitrum/configurations.ts,44,"return Factory.bind(Address.fromString(FACTORY_ADDRESS));"
uniswap-forks,subgraphs/uniswap-forks/protocols/camelot-v2/src/common/handlers.ts,32,"const nftPool = NFTPool.bind(address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/camelot-v2/src/common/handlers.ts,75,"const rewardTokenContract = GrailTokenV2.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/camelot-v2/src/price.ts,24,"Pair.bind(Address.fromString(pool.id)),"
uniswap-forks,subgraphs/uniswap-forks/protocols/honeyswap/config/deployments/honeyswap-gnosis/configurations.ts,42,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/honeyswap/config/deployments/honeyswap-polygon/configurations.ts,42,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/honeyswap/src/common/handlers.ts,21,"const poolContract = HoneyFarm.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/mm-finance/config/deployments/mm-finance-cronos/configurations.ts,42,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/mm-finance/config/deployments/mm-finance-polygon/configurations.ts,42,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/mm-finance/src/common/handlers/handleReward.ts,33,"const poolContract = MasterMeerkat.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/pangolin/config/deployments/pangolin-avalanche/configurations.ts,43,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/pangolin/src/mappings/masterchef/rewardMini.ts,58,"const miniChefV2Contract = MiniChefV2.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/quickswap/config/deployments/quickswap-polygon/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/solarbeam/config/deployments/solarbeam-moonriver/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/solarbeam/src/common/handlers/handleReward.ts,30,"const poolContract = SolarDistributorV2.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/spiritswap/config/deployments/spiritswap-fantom/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/spiritswap/src/common/handlers/handleReward.ts,33,"const poolContract = MasterChefSpiritSwap.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/spookyswap/config/deployments/spookyswap-fantom/configurations.ts,43,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/spookyswap/src/common/handlers/handleReward.ts,33,"const poolContract = MasterChefSpookyswap.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/spookyswap/src/common/handlers/handleRewardV2.ts,32,"const masterchefV2Contract = MasterChefV2Spookyswap.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/spookyswap/src/common/handlers/handleRewardV2.ts,113,"const poolContract = MasterChefV2Spookyswap.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-arbitrum/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-avalanche/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-bsc/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-celo/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-ethereum/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-fantom/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-fuse/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-gnosis/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-harmony/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-moonbeam/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-moonriver/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/config/deployments/sushiswap-polygon/configurations.ts,46,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/src/common/handlers/handleReward.ts,34,"const poolContract = MasterChefSushiswap.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/sushiswap/src/mappings/masterchef/rewardMini.ts,58,"const miniChefV2Contract = MiniChefSushiswap.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/trader-joe/config/deployments/trader-joe-avalanche/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/trader-joe/src/common/handlers/handleRewardV3.ts,36,"const masterchefV3Contract = MasterChefV3TraderJoe.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/trader-joe/src/common/handlers/handleRewarder.ts,247,"const c = Rewarder.bind(addr);"
uniswap-forks,subgraphs/uniswap-forks/protocols/trader-joe/src/common/handlers/handleRewarder.ts,278,"const c = Rewarder.bind(rewarderAddr);"
uniswap-forks,subgraphs/uniswap-forks/protocols/trader-joe/src/common/handlers/handleRewarder.ts,284,"const token = ERC20.bind(tokenCall.value);"
uniswap-forks,subgraphs/uniswap-forks/protocols/trader-joe/src/common/handlers/rewarderRate/rewardRateCalculator.ts,37,"this.contract = Rewarder.bind(Address.fromString(rewarder.id));"
uniswap-forks,subgraphs/uniswap-forks/protocols/trader-joe/src/common/handlers/rewarderRate/rewardRateCalculator.ts,285,"const c = MasterChefV2TraderJoe.bind(Address.fromString(this.mc.address!)); // v2 and v3 have the same definition for this method."
uniswap-forks,subgraphs/uniswap-forks/protocols/trisolaris/config/deployments/trisolaris-aurora/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/trisolaris/src/common/handlers/handleReward.ts,34,"const poolContract = MasterChefTrisolaris.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/ubeswap/config/deployments/ubeswap-celo/configurations.ts,47,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/ubeswap/src/common/helpers.ts,40,"const poolManager = PoolManager.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/protocols/ubeswap/src/common/helpers.ts,130,"const poolManager = PoolManager.bind(Address.fromString(POOL_MANAGER));"
uniswap-forks,subgraphs/uniswap-forks/protocols/uniswap-v2/config/deployments/uniswap-v2-ethereum/configurations.ts,43,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/vvs-finance/config/deployments/vvs-finance-cronos/configurations.ts,43,"return Factory.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/vvs-finance/src/common/handlers/handleReward.ts,33,"const poolContract = Craftsman.bind(event.address);"
uniswap-forks,subgraphs/uniswap-forks/src/common/getters.ts,284,"const erc20Contract = ERC20.bind(Address.fromString(address));"
uniswap-forks-swap,subgraphs/uniswap-forks-swap/src/common/getters.ts,59,"const erc20Contract = ERC20.bind(Address.fromString(address));"
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/iguanadex-v3/config/deployments/iguanadex-v3-etherlink-mainnet/configurations.ts,31,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/pancakeswap-v3/config/deployments/pancakeswap-v3-bsc/configurations.ts,29,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/pancakeswap-v3/config/deployments/pancakeswap-v3-ethereum/configurations.ts,29,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-arbitrum/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-avalanche/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-bsc/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-ethereum/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-fantom/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-fuse/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-gnosis/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-moonriver/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-optimism/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/sushiswap-v3/config/deployments/sushiswap-v3-polygon/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/uniswap-v3/config/deployments/uniswap-v3-arbitrum/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/uniswap-v3/config/deployments/uniswap-v3-base/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/uniswap-v3/config/deployments/uniswap-v3-bsc/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/uniswap-v3/config/deployments/uniswap-v3-celo/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/uniswap-v3/config/deployments/uniswap-v3-ethereum/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/uniswap-v3/config/deployments/uniswap-v3-optimism/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/protocols/uniswap-v3/config/deployments/uniswap-v3-polygon/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/entities/position.ts,20,"const contract = NonFungiblePositionManager.bind(event.address);"
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/entities/token.ts,37,"const erc20Contract = ERC20.bind(Address.fromBytes(address));"
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/utils/backfill.ts,23,"const tickLensContract = TickLens.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/utils/backfill.ts,32,"const poolContract = Pool.bind(poolAddress);"
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/utils/backfill.ts,49,"const token0Contract = ERC20.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/utils/backfill.ts,58,"const token1Contract = ERC20.bind("
uniswap-v3-forks-swap,subgraphs/uniswap-v3-forks-swap/protocols/uniswap-v3-swap/config/deployments/uniswap-v3-swap-optimism/configurations.ts,34,"return Factory.bind("
uniswap-v3-forks-swap,subgraphs/uniswap-v3-forks-swap/src/common/entities/token.ts,24,"const erc20Contract = ERC20.bind(Address.fromBytes(address));"
usual,subgraphs/usual/src/mappings/handlers.ts,57,"const erc20 = _ERC20.bind(address);"
usual,subgraphs/usual/src/mappings/handlers.ts,79,"const contract = USYC.bind(event.address);"
vaultka,subgraphs/vaultka/src/common/initializers.ts,34,"const vaultContract = Vault.bind(poolAddress);"
vaultka,subgraphs/vaultka/src/common/utils.ts,36,"const contract = ERC20.bind(address);"
vaultka,subgraphs/vaultka/src/common/utils.ts,56,"const vaultContract = Vault.bind(Address.fromBytes(pool.getBytesID()));"
vaultka,subgraphs/vaultka/src/common/utils.ts,67,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
vaultka,subgraphs/vaultka/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
vaultka,subgraphs/vaultka/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
vaultka,subgraphs/vaultka/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
vaultka,subgraphs/vaultka/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
vaultka,subgraphs/vaultka/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
vaultka,subgraphs/vaultka/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
vaultka,subgraphs/vaultka/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
vaultka,subgraphs/vaultka/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
velodrome-finance,subgraphs/velodrome-finance/protocols/velodrome-finance-v1/src/mappings/pair.ts,142,"const factoryContract = PairFactory.bind(Address.fromString(FACTORY_ADDRESS));"
velodrome-finance,subgraphs/velodrome-finance/protocols/velodrome-finance-v1/src/mappings/pairFactory.ts,38,"const factoryContract = PairFactory.bind(Address.fromString(FACTORY_ADDRESS));"
velodrome-finance,subgraphs/velodrome-finance/protocols/velodrome-finance-v2/src/mappings/pool.ts,143,"const factoryContract = PoolFactory.bind(Address.fromString(FACTORY_ADDRESS));"
velodrome-finance,subgraphs/velodrome-finance/protocols/velodrome-finance-v2/src/mappings/poolFactory.ts,45,"const factoryContract = PoolFactory.bind(Address.fromString(FACTORY_ADDRESS));"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,13,"let contract = ERC20.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,14,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,43,"let contract = ERC20.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,44,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,73,"let contract = ERC20.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/common/initializers.ts,108,"const contract = ERC20Contract.bind(address);"
vesper-finance,subgraphs/vesper-finance/src/common/initializers.ts,309,"const vaultContract = VaultContract.bind(vaultAddress);"
vesper-finance,subgraphs/vesper-finance/src/common/utils.ts,23,"const token = ERC20Contract.bind(tokenAddr);"
vesper-finance,subgraphs/vesper-finance/src/mappings/poolAccountantMappings.ts,15,"const accountantContract = PoolAccountantContract.bind(poolAccountantAddress);"
vesper-finance,subgraphs/vesper-finance/src/mappings/poolAccountantMappings.ts,43,"const accountantContract = PoolAccountantContract.bind(poolAccountantAddress);"
vesper-finance,subgraphs/vesper-finance/src/mappings/poolMappings.ts,141,"const poolRewardsContract = PoolRewardsContract.bind(newPoolRewards);"
vesper-finance,subgraphs/vesper-finance/src/mappings/poolRewardsMappings.ts,24,"const poolRewardsContract = PoolRewardsContract.bind(poolRewardsAddress);"
vesper-finance,subgraphs/vesper-finance/src/mappings/poolRewardsMappings.ts,51,"const poolRewardsContract = PoolRewardsContract.bind(poolRewardsAddress);"
vesper-finance,subgraphs/vesper-finance/src/mappings/poolRewardsMappings.ts,67,"const poolRewardsContract = PoolRewardsContract.bind(poolRewardsAddress);"
vesper-finance,subgraphs/vesper-finance/src/modules/Deposit.ts,85,"let vaultContract = VaultContract.bind(vaultAddress);"
vesper-finance,subgraphs/vesper-finance/src/modules/Prices.ts,13,"const vaultContract = VaultContract.bind(vaultAddress);"
vesper-finance,subgraphs/vesper-finance/src/modules/Prices.ts,32,"const vaultContract = VaultContract.bind(vaultAddress);"
vesper-finance,subgraphs/vesper-finance/src/modules/Rewards.ts,17,"const poolRewardsContract = PoolRewardsContract.bind(poolRewardsAddress);"
vesper-finance,subgraphs/vesper-finance/src/modules/Withdraw.ts,101,"let vaultContract = VaultContract.bind(vaultAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/calculations/CalculationsCurve.ts,8,"return CalculationsCurveContract.bind(constants.CURVE_CALCULATIONS_ADDRESS_MAP.get(network)!);"
vesper-finance,subgraphs/vesper-finance/src/prices/calculations/CalculationsSushiswap.ts,8,"return CalculationsSushiContract.bind(constants.SUSHISWAP_CALCULATIONS_ADDRESS_MAP.get(network)!);"
vesper-finance,subgraphs/vesper-finance/src/prices/common/utils.ts,10,"const token = _ERC20.bind(tokenAddr);"
vesper-finance,subgraphs/vesper-finance/src/prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind(constants.CHAIN_LINK_CONTRACT_ADDRESS.get(network));"
vesper-finance,subgraphs/vesper-finance/src/prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind(Address.fromString(constants.YEARN_LENS_CONTRACT_ADDRESS.get(network)));"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/CurveRouter.ts,12,"const curveRegistry = CurveRegistryContract.bind(constants.CURVE_REGISTRY_ADDRESS_MAP.get(network)!);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/CurveRouter.ts,35,"const curvePoolRegistry = CurvePoolRegistryContract.bind(constants.CURVE_POOL_REGISTRY_ADDRESS_MAP.get(network)!);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/CurveRouter.ts,105,"const curveRegistry = CurveRegistryContract.bind(constants.CURVE_REGISTRY_ADDRESS_MAP.get(network)!);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/SushiSwapRouter.ts,16,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/SushiSwapRouter.ts,79,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/SushiSwapRouter.ts,82,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/SushiSwapRouter.ts,105,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/SushiSwapRouter.ts,124,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/UniswapRouter.ts,16,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/UniswapRouter.ts,75,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/UniswapRouter.ts,78,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/UniswapRouter.ts,101,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/UniswapRouter.ts,126,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
vesta-finance,subgraphs/vesta-finance/src/entities/market.ts,428,"const contract = VestaParameters.bind("
vesta-finance,subgraphs/vesta-finance/src/entities/market.ts,443,"const contract = VestaParameters.bind("
vesta-finance,subgraphs/vesta-finance/src/entities/protocol.ts,263,"const vstTokenContract = VSTTokenContract.bind("
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,68,"const contract = IERC20Detailed.bind(tokenAddress);"
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,125,"const contractNameBytes = IERC20DetailedBytes.bind(contract._address);"
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,137,"const contractSymbolBytes = IERC20DetailedBytes.bind(contract._address);"
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,190,"const priceFeedContract = PriceFeedV1.bind("
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,256,"const poolContract = WeightedPoolContract.bind("
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,267,"const vaultContract = VaultContract.bind(vaultAddressResult.value);"
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,348,"const pairContract = UniswapV2Pair.bind(Address.fromString(pairAddress));"
vesta-finance,subgraphs/vesta-finance/src/mapping/CollSurplusPool.ts,27,"const contract = CollSurplusPool.bind(event.address);"
vesta-finance,subgraphs/vesta-finance/src/mapping/CommunityIssuance.ts,35,"const contract = CommunityIssuance.bind(event.address);"
vesta-finance,subgraphs/vesta-finance/src/mapping/PriceFeed.ts,65,"const stabilityPoolMgrContract = StabilityPoolManagerContract.bind("
vesta-finance,subgraphs/vesta-finance/src/mapping/StabilityPool.ts,26,"const stabilityPoolContract = StabilityPool.bind(event.address);"
vesta-finance,subgraphs/vesta-finance/src/mapping/StabilityPool.ts,43,"const stabilityPoolContract = StabilityPool.bind(event.address);"
vesta-finance,subgraphs/vesta-finance/src/mapping/StabilityPool.ts,60,"const stabilityPoolContract = StabilityPool.bind(event.address);"
vesta-finance,subgraphs/vesta-finance/src/mapping/StabilityPool.ts,90,"const stabilityPoolContract = StabilityPool.bind(event.address);"
vesta-finance,subgraphs/vesta-finance/src/mapping/VestaParameters.ts,24,"const contract = VestaParameters.bind(event.address);"
vesta-finance,subgraphs/vesta-finance/src/mapping/VestaParameters.ts,52,"const contract = VestaParameters.bind(event.address);"
x2y2,subgraphs/x2y2/src/mapping.ts,283,"const contract = NftMetadata.bind(Address.fromString(collectionID));"
yearn-v2,subgraphs/yearn-v2/src/Prices/calculations/CalculationsCurve.ts,10,"return CalculationsCurveContract.bind("
yearn-v2,subgraphs/yearn-v2/src/Prices/calculations/CalculationsSushiswap.ts,10,"return CalculationsSushiContract.bind("
yearn-v2,subgraphs/yearn-v2/src/Prices/common/utils.ts,13,"const token = PriceOracleERC20.bind(tokenAddr);"
yearn-v2,subgraphs/yearn-v2/src/Prices/oracles/ChainLinkFeed.ts,7,"return ChainLinkContract.bind("
yearn-v2,subgraphs/yearn-v2/src/Prices/oracles/YearnLensOracle.ts,8,"return YearnLensContract.bind("
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/CurveRouter.ts,20,"const curveRegistry = CurveRegistryContract.bind("
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/CurveRouter.ts,56,"const curvePoolRegistry = CurvePoolRegistryContract.bind("
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/CurveRouter.ts,136,"const curveRegistry = CurveRegistryContract.bind("
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/SushiSwapRouter.ts,21,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/SushiSwapRouter.ts,102,"const sushiSwapRouterV1 = SushiSwapRouterContract.bind(routerAddressV1);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/SushiSwapRouter.ts,105,"const sushiSwapRouterV2 = SushiSwapRouterContract.bind(routerAddressV2);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/SushiSwapRouter.ts,131,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/SushiSwapRouter.ts,162,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/UniswapRouter.ts,20,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/UniswapRouter.ts,99,"const uniswapRouterV1 = UniswapRouterContract.bind(routerAddressV1);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/UniswapRouter.ts,102,"const uniswapRouterV2 = UniswapRouterContract.bind(routerAddressV2);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/UniswapRouter.ts,128,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/UniswapRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/common/initializers.ts,71,"const contract = ERC20Contract.bind(address);"
yearn-v2,subgraphs/yearn-v2/src/common/initializers.ts,272,"const vaultContract = VaultContract.bind(vaultAddress);"
yearn-v2,subgraphs/yearn-v2/src/common/utils.ts,24,"const token = ERC20Contract.bind(tokenAddr);"
yearn-v2,subgraphs/yearn-v2/src/modules/Deposit.ts,67,"const vaultContract = VaultContract.bind(vaultAddress);"
yearn-v2,subgraphs/yearn-v2/src/modules/Deposit.ts,93,"const vaultContract = VaultContract.bind(vaultAddress);"
yearn-v2,subgraphs/yearn-v2/src/modules/Price.ts,18,"const vaultContract = Vault.bind(vaultAddress);"
yearn-v2,subgraphs/yearn-v2/src/modules/Strategy.ts,68,"const vaultContract = VaultContract.bind(vaultAddress);"
yearn-v2,subgraphs/yearn-v2/src/modules/Strategy.ts,70,"const strategyContract = StrategyContract.bind(strategyAddress);"
yearn-v2,subgraphs/yearn-v2/src/modules/Withdraw.ts,67,"const vaultContract = VaultContract.bind(vaultAddress);"
yearn-v2,subgraphs/yearn-v2/src/modules/Withdraw.ts,87,"const vaultContract = VaultContract.bind(vaultAddress);"
yearn-v2,subgraphs/yearn-v2/src/modules/Withdraw.ts,113,"const vaultContract = VaultContract.bind(vaultAddress);"
yeti-finance,subgraphs/yeti-finance/src/entities/token.ts,13,"const contract = ERC20Contract.bind(address);"
yeti-finance,subgraphs/yeti-finance/src/mapping/CollSurplusPool.ts,23,"const collSurplusPool = CollSurplusPool.bind(event.address);"
yeti-finance,subgraphs/yeti-finance/src/utils/price.ts,13,"const yetiControllerContract = YetiController.bind(Address.fromString(YETI_CONTROLLER));"
yieldnest,subgraphs/yieldnest/src/mappings/handlers.ts,103,"const erc20 = _ERC20.bind(address);"
yieldnest,subgraphs/yieldnest/src/mappings/handlers.ts,136,"const ynETHContract = YNETH.bind(event.address);"
yieldnest,subgraphs/yieldnest/src/mappings/handlers.ts,144,"const registryContract = AssetRegistry.bind("
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,49,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,63,"const wbEthContract = WBETH.bind(pricedToken);"
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,81,"const sFraxContract = SFRAX.bind(pricedToken);"
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,112,"const pendlePTContract = PendlePT.bind(pricedToken);"
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,115,"const pendleSYContract = PendleSY.bind(SYCall.value);"
yieldnest,subgraphs/yieldnest/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
yieldnest,subgraphs/yieldnest/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
yieldnest,subgraphs/yieldnest/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldnest,subgraphs/yieldnest/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldnest,subgraphs/yieldnest/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldnest,subgraphs/yieldnest/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
yieldnest,subgraphs/yieldnest/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
yieldnest,subgraphs/yieldnest/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/mappings/handlers.ts,48,"const gAVAX = GAVAX.bind(NetworkConfigs.getLSTAddress());"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/mappings/handlers.ts,55,"const chainlinkDataFeedContract = ChainlinkDataFeed.bind("
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/mappings/handlers.ts,95,"const erc20 = _ERC20.bind(address);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/mappings/handlers.ts,117,"const gAVAX = GAVAX.bind(NetworkConfigs.getLSTAddress());"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/mappings/handlers.ts,141,"const gAVAX = GAVAX.bind(NetworkConfigs.getLSTAddress());"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,94,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,117,"const routerContract = UniswapRouterContract.bind(routerAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,125,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,255,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/handlers.ts,80,"const erc20 = _ERC20.bind(address);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/helpers.ts,42,"const egEthContract = EGETH.bind(pricedToken);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/helpers.ts,58,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/helpers.ts,72,"const wbEthContract = WBETH.bind(pricedToken);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/helpers.ts,97,"const sFraxContract = SFRAX.bind(pricedToken);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/calculations/CalculationsCurve.ts,17,"return CalculationsCurveContract.bind(contract.address);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/calculations/CalculationsSushiswap.ts,17,"return CalculationsSushiContract.bind(contract.address);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/oracles/AaveOracle.ts,17,"return AaveOracleContract.bind(contract.address);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/oracles/ChainLinkFeed.ts,17,"return ChainLinkContract.bind(contract.address);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/oracles/YearnLensOracle.ts,17,"return YearnLensContract.bind(contract.address);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,31,"const curveRegistryContract = CurveRegistryContract.bind("
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,60,"const poolContract = CurvePoolContract.bind(poolAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,130,"const curveRegistryContract = CurveRegistryContract.bind("
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,177,"const curveRegistryContract = CurveRegistryContract.bind("
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(poolAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,276,"const poolContract = CurvePoolContract.bind(poolAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,337,"const poolContract = CurvePoolContract.bind(poolAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,95,"const uniswapForkRouter = UniswapRouterContract.bind(router.address);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,118,"const routerContract = UniswapRouterContract.bind(routerAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,126,"const factoryContract = UniswapFactoryContract.bind(factoryAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,256,"const uniSwapPair = UniswapPairContract.bind(lpAddress);"

Total contract calls found: 3851
Projects with contract calls: 155 / 171
