
> analyze-token-calls
> ts-node scripts/analyze-token-calls.ts

project,file,lineNumber,line
aave-forks,subgraphs/aave-forks/protocols/aave-amm/src/mapping.ts,463,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/aave-amm/src/mapping.ts,512,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-arc/src/mapping.ts,463,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/aave-arc/src/mapping.ts,512,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-rwa/src/mapping.ts,461,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/aave-rwa/src/mapping.ts,510,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/aave-v2/src/mapping.ts,496,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/aave-v2/src/mapping.ts,547,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,203,"const gTokenContract = GToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,437,"const gTokenContract = GToken.bind(Address.fromString(GFTM_ADDRESS));"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,469,"const gTokenContract = GToken.bind(Address.fromString(GFTM_ADDRESS));"
aave-forks,subgraphs/aave-forks/protocols/geist-finance/src/mapping.ts,496,"const gTokenContract = GToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital/src/mapping.ts,178,"const rTokenContract = RToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital/src/rewards.ts,147,"const rToken = RToken.bind(Address.fromString(RWETH_ADDRESS));"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/mapping.ts,181,"const rTokenContract = RToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/rewards.ts,128,"const rdntAddress = ERC20.bind("
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/rewards.ts,131,"const wethAddress = ERC20.bind("
aave-forks,subgraphs/aave-forks/protocols/radiant-capital-v2/src/rewards.ts,160,"const rToken = RToken.bind(Address.fromString(rewardConfig.rTokenMarket));"
aave-forks,subgraphs/aave-forks/protocols/seismic/src/mapping.ts,499,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/protocols/seismic/src/mapping.ts,550,"const stakedTokenContract = StakedAave.bind(tryRewardAsset.value);"
aave-forks,subgraphs/aave-forks/protocols/uwu-lend/src/mapping.ts,410,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,104,"const vTokenContract = AToken.bind(Address.fromBytes(market._vToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,113,"const sTokenContract = AToken.bind(Address.fromBytes(market._sToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,125,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,145,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/helpers.ts,157,"const stableDebtTokenContract = StableDebtToken.bind("
aave-forks,subgraphs/aave-forks/src/helpers.ts,171,"const variableDebtTokenContract = VariableDebtToken.bind("
aave-forks,subgraphs/aave-forks/src/helpers.ts,191,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/mapping.ts,491,"const stableDebtContract = StableDebtToken.bind("
aave-forks,subgraphs/aave-forks/src/mapping.ts,497,"const variableDebtContract = VariableDebtToken.bind("
aave-forks,subgraphs/aave-forks/src/mapping.ts,522,"const aTokenContract = AToken.bind(Address.fromBytes(market.outputToken!));"
aave-forks,subgraphs/aave-forks/src/mapping.ts,1222,"const tokenContract = ERC20.bind(asset);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,114,"const contract = ERC20.bind(tokenAddress);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,115,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,144,"const contract = ERC20.bind(tokenAddress);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,145,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
aave-forks,subgraphs/aave-forks/src/sdk/token.ts,174,"const contract = ERC20.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,40,"let contract = ERC20.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,41,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
abracadabra,subgraphs/abracadabra/src/common/tokens.ts,69,"let contract = ERC20.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/handlers/liquidity.ts,61,"const erc20 = _ERC20.bind(outputTokenAddress);"
across-v2,subgraphs/across-v2/src/handlers/liquidity.ts,144,"const erc20 = _ERC20.bind(outputTokenAddress);"
across-v2,subgraphs/across-v2/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
across-v2,subgraphs/across-v2/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
across-v2,subgraphs/across-v2/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
across-v2,subgraphs/across-v2/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/util.ts,63,"const tokenContract = _ERC20.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/util.ts,73,"const tokenContract = _ERC20.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/util.ts,83,"const tokenContract = _ERC20.bind(tokenAddress);"
across-v2,subgraphs/across-v2/src/util.ts,99,"const erc20 = _ERC20.bind(tokenAddress);"
affine-restaking,subgraphs/affine-restaking/src/mappings/handlers.ts,79,"const erc20 = _ERC20.bind(address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/entities/token.ts,15,"const contract = IERC20Detailed.bind(tokenAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/entities/token.ts,46,"const contractNameBytes = IERC20DetailedBytes.bind(contract._address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/entities/token.ts,58,"const contractSymbolBytes = IERC20DetailedBytes.bind(contract._address);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
alpaca-finance-lending,subgraphs/alpaca-finance-lending/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/common/utils.ts,37,"const contract = ERC20.bind(address);"
amphor,subgraphs/amphor/src/common/utils.ts,81,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
amphor,subgraphs/amphor/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
amphor,subgraphs/amphor/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
amphor,subgraphs/amphor/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
amphor,subgraphs/amphor/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
amphor,subgraphs/amphor/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
anzen-v2,subgraphs/anzen-v2/src/mappings/handlers.ts,113,"const erc20 = _ERC20.bind(address);"
anzen-v2,subgraphs/anzen-v2/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
anzen-v2,subgraphs/anzen-v2/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
anzen-v2,subgraphs/anzen-v2/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
anzen-v2,subgraphs/anzen-v2/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
aqua-patina,subgraphs/aqua-patina/src/mappings/handlers.ts,64,"const erc20 = _ERC20.bind(address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/common/utils.ts,79,"const tokenContract = _ERC20.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/common/utils.ts,89,"const tokenContract = _ERC20.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/common/utils.ts,99,"const tokenContract = _ERC20.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/arbitrum/transfers.ts,56,"const gatewayContract = TokenGateway.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/arbitrum/transfers.ts,107,"const erc20 = _ERC20.bind(inputTokenAddress!);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/arbitrum/transfers.ts,169,"const gatewayContract = TokenGateway.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/arbitrum/transfers.ts,220,"const erc20 = _ERC20.bind(inputTokenAddress!);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/ethereum/transfers.ts,74,"const gatewayContract = TokenGateway.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/ethereum/transfers.ts,121,"const erc20 = _ERC20.bind(inputTokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/ethereum/transfers.ts,186,"const gatewayContract = TokenGateway.bind(event.address);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/handlers/ethereum/transfers.ts,233,"const erc20 = _ERC20.bind(inputTokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
arbitrum-one-bridge,subgraphs/arbitrum-one-bridge/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,40,"let contract = ERC20.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,41,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/common/tokens.ts,69,"let contract = ERC20.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/UniswapRouter.ts,138,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
arrakis-finance,subgraphs/arrakis-finance/src/prices/routers/UniswapRouter.ts,175,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
aspida,subgraphs/aspida/src/mappings/handlers.ts,61,"const erc20 = _ERC20.bind(address);"
aura-finance,subgraphs/aura-finance/src/common/pools.ts,66,"const poolContract = WeightedPool.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/rewards.ts,290,"const rewardTokenContract = AuraToken.bind(rewardTokenAddr);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,12,"let contract = ERC20.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,13,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,43,"let contract = ERC20.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,44,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/common/tokens.ts,74,"let contract = ERC20.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/mappings/helpers.ts,110,"const outputTokenContract = ERC20.bind("
aura-finance,subgraphs/aura-finance/src/mappings/helpers.ts,173,"const outputTokenContract = ERC20.bind("
aura-finance,subgraphs/aura-finance/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
aura-finance,subgraphs/aura-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/UniswapRouter.ts,141,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
aura-finance,subgraphs/aura-finance/src/prices/routers/UniswapRouter.ts,178,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
aurus,subgraphs/aurus/src/mappings/handlers.ts,87,"const erc20 = _ERC20.bind(address);"
axelar,subgraphs/axelar/src/mappings.ts,85,"const erc20 = _ERC20.bind(address);"
axelar,subgraphs/axelar/src/mappings.ts,93,"const erc20name = ERC20NameBytes.bind(address);"
axelar,subgraphs/axelar/src/mappings.ts,109,"const erc20symbol = ERC20SymbolBytes.bind(address);"
axelar,subgraphs/axelar/src/mappings.ts,769,"const internalERC20Contract = BurnableMintableCappedERC20.bind(tokenAddress);"
axelar,subgraphs/axelar/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
axelar,subgraphs/axelar/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
axelar,subgraphs/axelar/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
axelar,subgraphs/axelar/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
axelar,subgraphs/axelar/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
axelar,subgraphs/axelar/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
axelar,subgraphs/axelar/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
badgerdao,subgraphs/badgerdao/src/common/initializers.ts,84,"const contract = ERC20Contract.bind(address);"
badgerdao,subgraphs/badgerdao/src/common/utils.ts,42,"const token = ERC20.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/mappings/rewardsLoggerMappings.ts,39,"const diggContract = DiggTokenContract.bind(constants.DIGG_TOKEN_ADDRESS);"
badgerdao,subgraphs/badgerdao/src/prices/common/utils.ts,47,"const tokenContract = _ERC20.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/prices/common/utils.ts,54,"const tokenContract = _ERC20.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/prices/common/utils.ts,65,"const tokenContract = _ERC20.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/prices/oracles/AaveOracle.ts,9,"const aaveContract = AaveOracleContract.bind(tokenAddr);"
badgerdao,subgraphs/badgerdao/src/prices/routers/CurveRouter.ts,302,"const poolContract = CurvePoolContract.bind(tokenAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/UniswapForksRouter.ts,122,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
badgerdao,subgraphs/badgerdao/src/prices/routers/UniswapForksRouter.ts,165,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
balancer-forks,subgraphs/balancer-forks/src/common/initializers.ts,135,"const contract = ERC20Contract.bind(address);"
balancer-forks,subgraphs/balancer-forks/src/common/utils.ts,45,"const token = ERC20Contract.bind(tokenAddr);"
balancer-forks,subgraphs/balancer-forks/src/prices/common/utils.ts,29,"const token = _ERC20.bind(tokenAddr);"
balancer-forks,subgraphs/balancer-forks/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/routers/UniswapForksRouter.ts,112,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
balancer-forks,subgraphs/balancer-forks/src/prices/routers/UniswapForksRouter.ts,146,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bancor-v3,subgraphs/bancor-v3/src/mapping.ts,112,"const poolTokenContract = PoolToken.bind(poolTokenAddress);"
bancor-v3,subgraphs/bancor-v3/src/mapping.ts,156,"const tokenContract = ERC20.bind(Address.fromString(reserveTokenID));"
bedrock-unieth,subgraphs/bedrock-unieth/src/common/initializers.ts,69,"const tokenContract = ERC20.bind("
bedrock-unieth,subgraphs/bedrock-unieth/src/common/initializers.ts,94,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
bedrock-unieth,subgraphs/bedrock-unieth/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bedrock-unieth,subgraphs/bedrock-unieth/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/token.ts,5,"const tokenContract = ERC20.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/token.ts,15,"const tokenContract = ERC20.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/mappings/token.ts,25,"const tokenContract = ERC20.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/common/utils.ts,13,"const token = ERC20.bind(tokenAddr);"
beefy-finance,subgraphs/beefy-finance/src/prices/oracles/ChainLinkFeed.ts,20,"const tokenContract = ERC20.bind(tokenAddr);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/SushiSwapRouter.ts,143,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/SushiSwapRouter.ts,177,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,156,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
beefy-finance,subgraphs/beefy-finance/src/prices/routers/UniswapRouter.ts,193,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
beethovenx-sftmx,subgraphs/beethovenx-sftmx/src/mappings/handlers.ts,74,"const erc20 = _ERC20.bind(address);"
belt-finance,subgraphs/belt-finance/src/common/initializers.ts,126,"const contract = ERC20Contract.bind(address);"
belt-finance,subgraphs/belt-finance/src/common/utils.ts,33,"const token = ERC20Contract.bind(tokenAddr);"
belt-finance,subgraphs/belt-finance/src/prices/common/utils.ts,30,"const token = _ERC20.bind(tokenAddr);"
belt-finance,subgraphs/belt-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
belt-finance,subgraphs/belt-finance/src/prices/routers/UniswapForksRouter.ts,112,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
belt-finance,subgraphs/belt-finance/src/prices/routers/UniswapForksRouter.ts,146,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/handlers.ts,141,"const erc20 = _ERC20.bind(address);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/mappings/helpers.ts,36,"const sAVAXContract = SAVAX.bind(pricedToken);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
benqi-staked-avax,subgraphs/benqi-staked-avax/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/handlers.ts,145,"const erc20 = _ERC20.bind(address);"
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/helpers.ts,36,"const wbEthContract = WBETH.bind(pricedToken);"
binance-staked-eth,subgraphs/binance-staked-eth/src/mappings/helpers.ts,59,"const wbEthContract = WBETH.bind(pricedToken);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
binance-staked-eth,subgraphs/binance-staked-eth/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
blackwing,subgraphs/blackwing/src/mappings/handlers.ts,74,"const erc20 = _ERC20.bind(address);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,50,"const pendlePTContract = PendlePT.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,116,"const egEthContract = EGETH.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,132,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,146,"const wbEthContract = WBETH.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,171,"const sFraxContract = SFRAX.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/mappings/helpers.ts,188,"const sUSDEContract = SUSDE.bind(pricedToken);"
blackwing,subgraphs/blackwing/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
blackwing,subgraphs/blackwing/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
blackwing,subgraphs/blackwing/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
blackwing,subgraphs/blackwing/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
blackwing,subgraphs/blackwing/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bob-fusion,subgraphs/bob-fusion/src/mappings/handlers.ts,98,"const erc20 = _ERC20.bind(address);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,74,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,88,"const wbEthContract = WBETH.bind(pricedToken);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,106,"const sFraxContract = SFRAX.bind(pricedToken);"
bob-fusion,subgraphs/bob-fusion/src/mappings/helpers.ts,137,"const pendlePTContract = PendlePT.bind(pricedToken);"
bob-fusion,subgraphs/bob-fusion/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
bob-fusion,subgraphs/bob-fusion/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
bob-fusion,subgraphs/bob-fusion/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bob-fusion,subgraphs/bob-fusion/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/handlers.ts,107,"const erc20 = _ERC20.bind(address);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,51,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,65,"const wbEthContract = WBETH.bind(pricedToken);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,83,"const sFraxContract = SFRAX.bind(pricedToken);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/mappings/helpers.ts,115,"const pendlePTContract = PendlePT.bind(pricedToken);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
bracket-escrow-staking,subgraphs/bracket-escrow-staking/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
cbridge,subgraphs/cbridge/src/mappings.ts,92,"const erc20 = _ERC20.bind(address);"
cbridge,subgraphs/cbridge/src/mappings.ts,109,"const erc20name = ERC20NameBytes.bind(address);"
cbridge,subgraphs/cbridge/src/mappings.ts,126,"const erc20symbol = ERC20SymbolBytes.bind(address);"
cbridge,subgraphs/cbridge/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
cbridge,subgraphs/cbridge/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
cbridge,subgraphs/cbridge/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
cbridge,subgraphs/cbridge/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
cbridge,subgraphs/cbridge/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/mappings/handlers.ts,63,"const erc20 = _ERC20.bind(address);"
chainlink-staking,subgraphs/chainlink-staking/src/mappings/handlers.ts,316,"const linkTokenContract = LinkToken.bind("
chainlink-staking,subgraphs/chainlink-staking/src/mappings/handlers.ts,346,"const linkTokenContract = LinkToken.bind("
chainlink-staking,subgraphs/chainlink-staking/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
chainlink-staking,subgraphs/chainlink-staking/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/mappings/handlers.ts,83,"const erc20 = _ERC20.bind(address);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/mappings/helpers.ts,32,"const cbEthContract = CBETH.bind(pricedToken);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
coinbase-wrapped-staked-eth,subgraphs/coinbase-wrapped-staked-eth/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,113,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,138,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,209,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,227,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,246,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,265,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,299,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/aurigami/src/mapping.ts,474,"const erc20Contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,100,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,115,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,168,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,186,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,205,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,224,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/banker-joe/src/mapping.ts,258,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,159,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,209,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,280,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,298,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,317,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,336,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,410,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/bastion-protocol/src/mapping.ts,636,"const erc20Contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,131,"const cTokenContract = CToken.bind(event.params.qiToken);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,157,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,210,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,228,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,247,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,266,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/benqi/src/mapping.ts,302,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,100,"const contract = CTokenContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,118,"const contract = CTokenContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,137,"const contract = CTokenContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,156,"const contract = CTokenContract.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,239,"const cTokenContract = CTokenContract.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,364,"const cTokenContract = CTokenContract.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/mapping.ts,728,"const tokenContract = ERC20.bind(Address.fromString(COMP_ADDRESS));"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,11,"let contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,41,"let contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,42,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/compound-v2/src/token.ts,71,"let contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,166,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,192,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,280,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,305,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,331,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,357,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/mapping.ts,420,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/UniswapRouter.ts,138,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/cream-finance/src/prices/routers/UniswapRouter.ts,175,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,136,"const cTokenContract = CToken.bind(event.params.iToken);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,170,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,324,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,342,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,361,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,380,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,414,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/dforce/src/mapping.ts,460,"const contract = stablecoin.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,148,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,163,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,216,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,234,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,253,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,272,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,306,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/iron-bank/src/mapping.ts,418,"const erc20Contract = ERC20.bind(event.params.rewardsToken);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,125,"const cTokenContract = CToken.bind(event.params.mToken);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,152,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,215,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,234,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,254,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,274,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,312,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,562,"const lpTokenContract = SolarBeamLPToken.bind(lpAddress);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,575,"const lpTokenContract = SolarBeamLPToken.bind(lpAddress);"
compound-forks,subgraphs/compound-forks/protocols/moonwell/src/mapping.ts,588,"const lpTokenContract = AerodromeLPToken.bind(lpAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,234,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,258,"const underlyingContract = ERC20.bind(underlyingAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,383,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,402,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,422,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,442,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,487,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,547,"const tokenContract = ERC20.bind(Address.fromString(GOHM_ADDRESS));"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,646,"const cTokenContract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/mappings.ts,1029,"const tokenContract = ERC20.bind(tryRewardToken.value);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/rari-fuse/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,94,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,109,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,162,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,180,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,199,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,218,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/scream/src/mapping.ts,252,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,101,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,126,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,197,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,215,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,234,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,253,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,287,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/sonne-finance/src/mapping.ts,434,"const erc20Contract = ERC20.bind(tokenAddress);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,120,"const cTokenContract = CToken.bind(event.params.cToken);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,146,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,192,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,210,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,229,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,248,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,282,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/protocols/tectonic/src/mapping.ts,356,"const tokenContract = ERC20.bind(Address.fromString(TONICAddress));"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,118,"const cTokenContract = CToken.bind(event.params.vToken);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,143,"const underlyingTokenContract = ERC20.bind(underlyingTokenAddr);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,221,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,239,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,258,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,277,"const contract = CToken.bind(event.address);"
compound-forks,subgraphs/compound-forks/protocols/venus/src/mapping.ts,314,"const cTokenContract = CToken.bind(marketAddress);"
compound-forks,subgraphs/compound-forks/src/mapping.ts,1221,"const cTokenContract = CToken.bind(Address.fromString(marketID));"
compound-v3,subgraphs/compound-v3/protocols/compound-v3/src/mapping.ts,1238,"const collateralERC20 = ERC20.bind(Address.fromBytes(market.inputToken));"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,96,"const contract = ERC20.bind(tokenAddress);"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,97,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,126,"const contract = ERC20.bind(tokenAddress);"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,127,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
compound-v3,subgraphs/compound-v3/src/sdk/token.ts,156,"const contract = ERC20.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
concentrator,subgraphs/concentrator/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
concentrator,subgraphs/concentrator/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
concentrator,subgraphs/concentrator/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
concentrator,subgraphs/concentrator/src/prices/routers/CurveRouter.ts,307,"const poolContract = CurvePoolContract.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
concentrator,subgraphs/concentrator/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
convex-finance,subgraphs/convex-finance/src/common/initializers.ts,67,"const contract = ERC20Contract.bind(address);"
convex-finance,subgraphs/convex-finance/src/common/initializers.ts,334,"const lpTokenContract = ERC20Contract.bind(poolInfo.lpToken);"
convex-finance,subgraphs/convex-finance/src/common/utils.ts,23,"const token = ERC20Contract.bind(tokenAddr);"
convex-finance,subgraphs/convex-finance/src/common/utils.ts,126,"const convexTokenContract = ERC20Contract.bind("
convex-finance,subgraphs/convex-finance/src/modules/Deposit.ts,86,"const outputTokenContract = ERC20.bind("
convex-finance,subgraphs/convex-finance/src/modules/Rewards.ts,13,"const rewardsContract = RewardPoolContract.bind(rewardTokenPool);"
convex-finance,subgraphs/convex-finance/src/modules/Withdraw.ts,86,"const outputTokenContract = ERC20.bind("
convex-finance,subgraphs/convex-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
convex-finance,subgraphs/convex-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
convex-finance,subgraphs/convex-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
convex-finance,subgraphs/convex-finance/src/prices/custom/ForexTokens.ts,23,"const lpTokenContract = CurvePool.bind(lpToken);"
convex-finance,subgraphs/convex-finance/src/prices/custom/ForexTokens.ts,40,"const priceOracle = ChainLinkAggregator.bind(ForexToken);"
convex-finance,subgraphs/convex-finance/src/prices/routers/CurveRouter.ts,312,"const poolContract = CurvePoolContract.bind(tokenAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
convex-finance,subgraphs/convex-finance/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
creth2,subgraphs/creth2/src/mappings/handlers.ts,66,"const erc20 = _ERC20.bind(address);"
curve-finance,subgraphs/curve-finance/src/common/initializers.ts,139,"const contract = ERC20Contract.bind(address);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,41,"const token = ERC20Contract.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/common/utils.ts,572,"const lpTokenContract = ERC20Contract.bind(lpTokenAddress);"
curve-finance,subgraphs/curve-finance/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/prices/common/utils.ts,70,"const tokenContract = _ERC20.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/prices/common/utils.ts,81,"const tokenContract = _ERC20.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/prices/oracles/AaveOracle.ts,9,"const aaveContract = AaveOracleContract.bind(tokenAddr);"
curve-finance,subgraphs/curve-finance/src/prices/routers/CurveRouter.ts,297,"const poolContract = CurvePoolContract.bind(tokenAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/UniswapForksRouter.ts,122,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
curve-finance,subgraphs/curve-finance/src/prices/routers/UniswapForksRouter.ts,165,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/common/initializers.ts,68,"const contract = ERC20.bind(Address.fromString(constants.CGUSD_ADDRESS));"
cygnus-finance,subgraphs/cygnus-finance/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
cygnus-finance,subgraphs/cygnus-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
deq,subgraphs/deq/src/mappings/handlers.ts,64,"const erc20 = _ERC20.bind(address);"
deq,subgraphs/deq/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
deq,subgraphs/deq/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
deq,subgraphs/deq/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
deq,subgraphs/deq/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
deq,subgraphs/deq/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/mappings/handlers.ts,95,"const erc20 = _ERC20.bind(address);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
dinero-pxeth,subgraphs/dinero-pxeth/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
dopex,subgraphs/dopex/src/entities/option.ts,38,"const strikeTokenContract = SsovV3OptionsToken.bind(strikeTokenAddress);"
dopex,subgraphs/dopex/src/entities/token.ts,83,"const tokenContract = ERC20.bind(tokenAddress);"
dopex,subgraphs/dopex/src/entities/token.ts,93,"const tokenContract = ERC20.bind(tokenAddress);"
dopex,subgraphs/dopex/src/entities/token.ts,103,"const tokenContract = ERC20.bind(tokenAddress);"
dopex,subgraphs/dopex/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
dopex,subgraphs/dopex/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
dopex,subgraphs/dopex/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
dopex,subgraphs/dopex/src/prices/routers/CurveRouter.ts,300,"const poolContract = CurvePoolContract.bind(tokenAddress);"
dopex,subgraphs/dopex/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
dopex,subgraphs/dopex/src/prices/routers/UniswapForksRouter.ts,119,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
dopex,subgraphs/dopex/src/prices/routers/UniswapForksRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/common/tokens.ts,21,"let contract = ERC20.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/common/tokens.ts,31,"let contract = ERC20.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenlayer,subgraphs/eigenlayer/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenlayer,subgraphs/eigenlayer/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenlayer,subgraphs/eigenlayer/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenpie,subgraphs/eigenpie/src/common/initializers.ts,86,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
eigenpie,subgraphs/eigenpie/src/common/utils.ts,35,"const contract = ERC20.bind(address);"
eigenpie,subgraphs/eigenpie/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenpie,subgraphs/eigenpie/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenpie,subgraphs/eigenpie/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
eigenpie,subgraphs/eigenpie/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
eigenpie,subgraphs/eigenpie/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/initializers.ts,44,"const lpTokenContract = LPTokenContract.bind("
ellipsis-finance,subgraphs/ellipsis-finance/src/common/initializers.ts,333,"const contract = ERC20Contract.bind(address);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,292,"const token = ERC20Contract.bind(tokenAddr);"
ellipsis-finance,subgraphs/ellipsis-finance/src/common/utils.ts,498,"const lpTokenContract = LPTokenContract.bind(lpTokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ellipsis-finance,subgraphs/ellipsis-finance/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
erc20,subgraphs/erc20/src/mappings/token.ts,37,"let erc20 = ERC20.bind(event.address);"
erc20,subgraphs/erc20/src/mappings/token.ts,200,"let totalSupply = ERC20.bind(event.address).try_totalSupply();"
erc20,subgraphs/erc20/src/mappings/token.ts,245,"let totalSupply = ERC20.bind(event.address).try_totalSupply();"
etherfi,subgraphs/etherfi/src/common/initializers.ts,127,"const contract = ERC20.bind(Address.fromString(constants.EETH_ADDRESS));"
etherfi,subgraphs/etherfi/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
etherfi,subgraphs/etherfi/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
etherfi,subgraphs/etherfi/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
etherfi,subgraphs/etherfi/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
etherfi,subgraphs/etherfi/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
etherfi,subgraphs/etherfi/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,9,"const contract = ERC20.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,15,"const bytesContract = ERC20NameBytes.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,26,"const contract = ERC20.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,32,"const bytesContract = ERC20SymbolBytes.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,43,"const contract = ERC20.bind(address);"
euler-finance,subgraphs/euler-finance/src/common/tokens.ts,54,"const contract = ERC20.bind(address);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,121,"const erc20Contract = ERC20.bind(event.params.underlying);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,125,"const eToken = ERC20.bind(eTokenAddress);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,128,"const dToken = ERC20.bind(dTokenAddress);"
euler-finance,subgraphs/euler-finance/src/mappings/handlers.ts,252,"const dToken = ERC20.bind(dTokenAddress);"
flat-money,subgraphs/flat-money/src/mappings/handlers.ts,79,"const erc20 = _ERC20.bind(address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/mappings/handlers.ts,53,"const erc20 = _ERC20.bind(address);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
frax-ether-staking,subgraphs/frax-ether-staking/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
fx-protocol,subgraphs/fx-protocol/src/common/initializers.ts,96,"const contract = ERC20.bind(Address.fromBytes(pool.pool.outputToken!));"
fx-protocol,subgraphs/fx-protocol/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
fx-protocol,subgraphs/fx-protocol/src/prices/common/utils.ts,49,"const tokenContract = ERC20.bind(tokenAddr);"
fx-protocol,subgraphs/fx-protocol/src/prices/common/utils.ts,56,"const tokenContract = ERC20.bind(tokenAddr);"
fx-protocol,subgraphs/fx-protocol/src/prices/common/utils.ts,67,"const tokenContract = ERC20.bind(tokenAddr);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
fx-protocol,subgraphs/fx-protocol/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gains-trade,subgraphs/gains-trade/src/mappings/handlers.ts,72,"const erc20 = _ERC20.bind(address);"
gains-trade,subgraphs/gains-trade/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
gains-trade,subgraphs/gains-trade/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
gains-trade,subgraphs/gains-trade/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
gains-trade,subgraphs/gains-trade/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gains-trade,subgraphs/gains-trade/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,40,"let contract = ERC20.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,41,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/common/tokens.ts,69,"let contract = ERC20.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/common/utils.ts,10,"const token = _ERC20.bind(tokenAddr);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/SushiSwapRouter.ts,16,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/SushiSwapRouter.ts,105,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/SushiSwapRouter.ts,124,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/UniswapRouter.ts,17,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/UniswapRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gamma-strategies,subgraphs/gamma-strategies/src/prices/routers/UniswapRouter.ts,134,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/mappings/handlers.ts,90,"const erc20 = _ERC20.bind(address);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gaurda-staking,subgraphs/gaurda-staking/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
geode,subgraphs/geode/src/mappings/handlers.ts,100,"const erc20 = _ERC20.bind(address);"
geode,subgraphs/geode/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
geode,subgraphs/geode/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
geode,subgraphs/geode/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
geode,subgraphs/geode/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
geode,subgraphs/geode/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gmx-forks,subgraphs/gmx-forks/src/modules/token.ts,15,"const tokenContract = _ERC20.bind(address);"
gmx-forks,subgraphs/gmx-forks/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
gmx-forks,subgraphs/gmx-forks/src/prices/common/utils.ts,70,"const tokenContract = _ERC20.bind(tokenAddr);"
gmx-forks,subgraphs/gmx-forks/src/prices/common/utils.ts,81,"const tokenContract = _ERC20.bind(tokenAddr);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/CurveRouter.ts,303,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/UniswapForksRouter.ts,128,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gmx-forks,subgraphs/gmx-forks/src/prices/routers/UniswapForksRouter.ts,171,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/mappings/handlers.ts,117,"const erc20 = _ERC20.bind(address);"
gogopool,subgraphs/gogopool/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
gogopool,subgraphs/gogopool/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
gogopool,subgraphs/gogopool/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
gogopool,subgraphs/gogopool/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gogopool,subgraphs/gogopool/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
goldfinch,subgraphs/goldfinch/src/common/getters.ts,85,"const contract = ERC20.bind(tokenAddr);"
goldfinch,subgraphs/goldfinch/src/entities/zapper.ts,83,"const tranchedPoolContract = PoolTokensContract.bind(event.address);"
goldfinch,subgraphs/goldfinch/src/mappings/helpers.ts,113,"const poolTokensContract = PoolTokensContract.bind("
gudchain,subgraphs/gudchain/src/mappings/handlers.ts,94,"const erc20 = _ERC20.bind(address);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,74,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,88,"const wbEthContract = WBETH.bind(pricedToken);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,106,"const sFraxContract = SFRAX.bind(pricedToken);"
gudchain,subgraphs/gudchain/src/mappings/helpers.ts,137,"const pendlePTContract = PendlePT.bind(pricedToken);"
gudchain,subgraphs/gudchain/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
gudchain,subgraphs/gudchain/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
gudchain,subgraphs/gudchain/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
gudchain,subgraphs/gudchain/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
gudchain,subgraphs/gudchain/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
hop-protocol,subgraphs/hop-protocol/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
hop-protocol,subgraphs/hop-protocol/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/CurveRouter.ts,257,"const poolContract = CurvePoolContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapForksRouter.ts,111,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapForksRouter.ts,150,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapV2.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapV2.ts,114,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hop-protocol,subgraphs/hop-protocol/src/prices/routers/UniswapV2.ts,153,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hord-fi,subgraphs/hord-fi/src/mappings/handlers.ts,62,"const erc20 = _ERC20.bind(address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/common/utils.ts,24,"const pairContract = ThrusterV2.bind(Address.fromBytes(token.id));"
hyperlock-finance,subgraphs/hyperlock-finance/src/common/utils.ts,39,"const pairContract = ThrusterV2.bind(Address.fromBytes(token.id));"
hyperlock-finance,subgraphs/hyperlock-finance/src/common/utils.ts,53,"const contract = ERC20.bind(address);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
hyperlock-finance,subgraphs/hyperlock-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
inception,subgraphs/inception/src/mappings/handlers.ts,97,"const erc20 = _ERC20.bind(address);"
inception,subgraphs/inception/src/mappings/helpers.ts,50,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
inception,subgraphs/inception/src/mappings/helpers.ts,64,"const wbEthContract = WBETH.bind(pricedToken);"
inception,subgraphs/inception/src/mappings/helpers.ts,82,"const sFraxContract = SFRAX.bind(pricedToken);"
inception,subgraphs/inception/src/mappings/helpers.ts,113,"const pendlePTContract = PendlePT.bind(pricedToken);"
inception,subgraphs/inception/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
inception,subgraphs/inception/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
inception,subgraphs/inception/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
inception,subgraphs/inception/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
inception,subgraphs/inception/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,44,"let contract = CErc20.bind(cToken);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,70,"let cTokenContract = CErc20.bind(cToken);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,74,"let underlyingTokenContract = CErc20.bind(tryUnderlyingTokenAddr.value);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,103,"let contract = CErc20.bind(cToken);"
inverse-finance,subgraphs/inverse-finance/src/common/getters.ts,181,"let contract = CErc20.bind(Address.fromString(marketId));"
inverse-finance,subgraphs/inverse-finance/src/common/helpers.ts,644,"let tokenContract = CErc20.bind(event.address);"
inverse-finance,subgraphs/inverse-finance/src/common/helpers.ts,822,"let tokenContract = CErc20.bind(event.address);"
inverse-finance,subgraphs/inverse-finance/src/core.ts,82,"let tokenContract = CErc20.bind(event.address);"
karak,subgraphs/karak/src/mappings/handlers.ts,84,"const erc20 = _ERC20.bind(address);"
karak,subgraphs/karak/src/mappings/helpers.ts,50,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
karak,subgraphs/karak/src/mappings/helpers.ts,64,"const wbEthContract = WBETH.bind(pricedToken);"
karak,subgraphs/karak/src/mappings/helpers.ts,81,"const sFraxContract = SFRAX.bind(pricedToken);"
karak,subgraphs/karak/src/mappings/helpers.ts,112,"const pendlePTContract = PendlePT.bind(pricedToken);"
karak,subgraphs/karak/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
karak,subgraphs/karak/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
karak,subgraphs/karak/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
karak,subgraphs/karak/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
karak,subgraphs/karak/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kelp-dao,subgraphs/kelp-dao/src/mappings/handlers.ts,88,"const erc20 = _ERC20.bind(address);"
kelp-dao,subgraphs/kelp-dao/src/mappings/helpers.ts,65,"const sFraxContract = SFRAX.bind(pricedToken);"
kelp-dao,subgraphs/kelp-dao/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
kelp-dao,subgraphs/kelp-dao/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
kelp-dao,subgraphs/kelp-dao/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kelp-dao,subgraphs/kelp-dao/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/mappings/handlers.ts,98,"const erc20 = _ERC20.bind(address);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kernel-protocol,subgraphs/kernel-protocol/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
klimadao,subgraphs/klimadao/src/mappings/handlers.ts,78,"const erc20 = _ERC20.bind(address);"
kwenta,subgraphs/kwenta/src/mappings/handlers.ts,78,"const erc20 = _ERC20.bind(address);"
kwenta,subgraphs/kwenta/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
kwenta,subgraphs/kwenta/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
kwenta,subgraphs/kwenta/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
kwenta,subgraphs/kwenta/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
kwenta,subgraphs/kwenta/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
level-finance,subgraphs/level-finance/src/common/utils.ts,146,"const lpTokenContract = LpTokenContract.bind(trancheAddress);"
level-finance,subgraphs/level-finance/src/modules/token.ts,21,"const tokenContract = ERC20.bind(address);"
level-finance,subgraphs/level-finance/src/prices/common/utils.ts,64,"const tokenContract = _ERC20.bind(tokenAddr);"
level-finance,subgraphs/level-finance/src/prices/common/utils.ts,71,"const tokenContract = _ERC20.bind(tokenAddr);"
level-finance,subgraphs/level-finance/src/prices/common/utils.ts,82,"const tokenContract = _ERC20.bind(tokenAddr);"
level-finance,subgraphs/level-finance/src/prices/routers/CurveRouter.ts,303,"const poolContract = CurvePoolContract.bind(tokenAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/UniswapForksRouter.ts,128,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
level-finance,subgraphs/level-finance/src/prices/routers/UniswapForksRouter.ts,171,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lido,subgraphs/lido/src/entities/token.ts,54,"const tokenContract = ERC20.bind(tokenAddress);"
lido,subgraphs/lido/src/entities/token.ts,64,"const tokenContract = ERC20.bind(tokenAddress);"
lido,subgraphs/lido/src/entities/token.ts,74,"const tokenContract = ERC20.bind(tokenAddress);"
lido,subgraphs/lido/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
lido,subgraphs/lido/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
lido,subgraphs/lido/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
lido,subgraphs/lido/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lido,subgraphs/lido/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
liquid-collective,subgraphs/liquid-collective/src/mappings/handlers.ts,42,"const erc20 = _ERC20.bind(address);"
liquid-collective,subgraphs/liquid-collective/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
liquid-collective,subgraphs/liquid-collective/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
liquid-collective,subgraphs/liquid-collective/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
liquid-collective,subgraphs/liquid-collective/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
liquity,subgraphs/liquity/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
liquity,subgraphs/liquity/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
liquity,subgraphs/liquity/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
liquity,subgraphs/liquity/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
liquity,subgraphs/liquity/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
liquity,subgraphs/liquity/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
liquity,subgraphs/liquity/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
livepeer,subgraphs/livepeer/src/modules/tokens.ts,13,"const tokenContract = ERC20.bind(address);"
llama-airforce,subgraphs/llama-airforce/src/common/utils.ts,37,"const contract = ERC20.bind(address);"
llama-airforce,subgraphs/llama-airforce/src/common/utils.ts,78,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
llama-airforce,subgraphs/llama-airforce/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
llama-airforce,subgraphs/llama-airforce/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
llama-airforce,subgraphs/llama-airforce/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
llama-airforce,subgraphs/llama-airforce/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lybra-finance,subgraphs/lybra-finance/src/common/utils.ts,37,"const contract = ERC20.bind(address);"
lybra-finance,subgraphs/lybra-finance/src/common/utils.ts,79,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
lybra-finance,subgraphs/lybra-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
lybra-finance,subgraphs/lybra-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
lybra-finance,subgraphs/lybra-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
lybra-finance,subgraphs/lybra-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
m0-power,subgraphs/m0-power/src/common/initializers.ts,59,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
m0-power,subgraphs/m0-power/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
m0-power,subgraphs/m0-power/src/prices/common/utils.ts,49,"const tokenContract = ERC20.bind(tokenAddr);"
m0-power,subgraphs/m0-power/src/prices/common/utils.ts,56,"const tokenContract = ERC20.bind(tokenAddr);"
m0-power,subgraphs/m0-power/src/prices/common/utils.ts,67,"const tokenContract = ERC20.bind(tokenAddr);"
m0-power,subgraphs/m0-power/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
m0-power,subgraphs/m0-power/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
makerdao,subgraphs/makerdao/src/mapping.ts,145,"const erc20Contract = ERC20.bind(gemCall.value);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/mappings/handlers.ts,61,"const erc20 = _ERC20.bind(address);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mantle-staked-eth,subgraphs/mantle-staked-eth/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/common/utils.ts,10,"const token = ERC20.bind(tokenAddr);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/prices.ts,113,"const balancerContract = BalancerPool.bind(Address.fromString(bptToken.id));"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/SushiSwapRouter.ts,16,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/SushiSwapRouter.ts,105,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/SushiSwapRouter.ts,124,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/UniswapRouter.ts,17,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/UniswapRouter.ts,102,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/prices/routers/UniswapRouter.ts,127,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,9,"const contract = ERC20.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,15,"const bytesContract = ERC20NameBytes.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,26,"const contract = ERC20.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,32,"const bytesContract = ERC20SymbolBytes.bind(address);"
maple-finance-v1,subgraphs/maple-finance-v1/src/common/utils.ts,43,"const contract = ERC20.bind(address);"
maple-finance-v2,subgraphs/maple-finance-v2/protocols/maple-finance-v2/src/mapping.ts,839,"const contract = ERC20.bind(erc20Contract);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,89,"const contract = ERC20.bind(tokenAddress);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,90,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,119,"const contract = ERC20.bind(tokenAddress);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,120,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
maple-finance-v2,subgraphs/maple-finance-v2/src/sdk/token.ts,149,"const contract = ERC20.bind(tokenAddress);"
matrixdock,subgraphs/matrixdock/src/mappings/handlers.ts,54,"const erc20 = _ERC20.bind(address);"
mellow-lrt,subgraphs/mellow-lrt/src/common/initializers.ts,77,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
mellow-lrt,subgraphs/mellow-lrt/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mellow-lrt,subgraphs/mellow-lrt/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mev-protocol,subgraphs/mev-protocol/src/mappings/handlers.ts,61,"const erc20 = _ERC20.bind(address);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,80,"const aToken = AToken.bind(aTokenAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/fetchers.ts,82,"const debtToken = DebtToken.bind(Address.fromBytes(tokenMapping.debtToken));"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,22,"const aToken = AToken.bind(event.params._poolToken);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v2/handleMarketCreated.ts,23,"const underlying = ERC20.bind(aToken.UNDERLYING_ASSET_ADDRESS());"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,69,"const aToken = AToken.bind(aTokenAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/fetchers.ts,70,"const debtToken = DebtToken.bind(Address.fromBytes(tokenMapping.debtToken));"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,23,"const underlying = ERC20.bind(event.params.underlying);"
morpho,subgraphs/morpho/src/mapping/morpho-aave-v3/handleMarketCreated.ts,26,"const aToken = AToken.bind(marketInfo.aToken);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/cToken.ts,27,"const cTokenInstance = CToken.bind(event.address);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/fetchers.ts,45,"const cToken = CToken.bind(marketAddress);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/handleMarketCreated.ts,29,"const cToken = CToken.bind(event.params._poolToken);"
morpho,subgraphs/morpho/src/mapping/morpho-compound/morphoCompound.ts,341,"const cTokenContract = CToken.bind(Address.fromBytes(market.id));"
morpho,subgraphs/morpho/src/utils/initializers.ts,17,"const erc20 = ERC20.bind(Address.fromBytes(tokenAddress));"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,96,"const contract = ERC20.bind(tokenAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,97,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,119,"const contract = ERC20.bind(tokenAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,120,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
morpho-blue,subgraphs/morpho-blue/src/sdk/token.ts,142,"const contract = ERC20.bind(tokenAddress);"
mountain-protocol,subgraphs/mountain-protocol/src/mappings/handlers.ts,48,"const erc20 = _ERC20.bind(address);"
multichain,subgraphs/multichain/src/common/getters.ts,154,"const anyTokenContract = anyToken.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,15,"const contract = ERC20.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,16,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,38,"const contract = ERC20.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,39,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,61,"const contract = ERC20.bind(tokenAddress);"
multichain,subgraphs/multichain/src/common/tokens.ts,74,"const contract = ERC20.bind(tokenAddress);"
multichain,subgraphs/multichain/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
multichain,subgraphs/multichain/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
multichain,subgraphs/multichain/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
multichain,subgraphs/multichain/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
multichain,subgraphs/multichain/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
multichain,subgraphs/multichain/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
multichain,subgraphs/multichain/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/entities/token.ts,85,"const tokenContract = ERC20.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/entities/token.ts,95,"const tokenContract = ERC20.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/entities/token.ts,105,"const tokenContract = ERC20.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
mux-protocol,subgraphs/mux-protocol/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
mux-protocol,subgraphs/mux-protocol/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
mux-protocol,subgraphs/mux-protocol/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/mappings/handlers.ts,80,"const erc20 = _ERC20.bind(address);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
nexus-mutual,subgraphs/nexus-mutual/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,72,"const erc20 = _ERC20.bind(address);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,175,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,246,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,319,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,409,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,438,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,471,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,518,"const nethContract = NETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,550,"const rnethContract = RNETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,586,"const rnethContract = RNETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/mappings/handlers.ts,639,"const rnethContract = RNETH.bind(outputTokenAddr);"
node-dao,subgraphs/node-dao/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
node-dao,subgraphs/node-dao/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
node-dao,subgraphs/node-dao/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
node-dao,subgraphs/node-dao/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
node-dao,subgraphs/node-dao/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/getters/token.ts,67,"const tokenContract = ERC20.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/getters/token.ts,77,"const tokenContract = ERC20.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/getters/token.ts,87,"const tokenContract = ERC20.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
notional-finance,subgraphs/notional-finance/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
notional-finance,subgraphs/notional-finance/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
notional-finance,subgraphs/notional-finance/src/prices/routers/CurveRouter.ts,301,"const poolContract = CurvePoolContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/UniswapForksRouter.ts,120,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/prices/routers/UniswapForksRouter.ts,163,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
notional-finance,subgraphs/notional-finance/src/setters/financialMetrics.ts,186,"const erc20 = ERC20.bind(Address.fromString(assetToken.id));"
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/threshold-governance/src/tokenholder-governor.ts,155,"const contract = TokenholderGovernor.bind("
openzeppelin-governor,subgraphs/openzeppelin-governor/protocols/threshold-governance/src/tokenholder-governor.ts,180,"const contract = TokenholderGovernor.bind(contractAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,88,"const contract = ERC20.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,89,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,111,"const contract = ERC20.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,112,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
optimism-bridge-v2,subgraphs/optimism-bridge-v2/src/sdk.ts,134,"const contract = ERC20.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,12,"const contract = ERC20.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,13,"const contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,35,"const contract = ERC20.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,36,"const contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/common/tokens.ts,58,"const contract = ERC20.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/CurveRouter.ts,300,"const poolContract = CurvePoolContract.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/UniswapForksRouter.ts,119,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
opyn-gamma,subgraphs/opyn-gamma/src/prices/routers/UniswapForksRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/mappings/handlers.ts,94,"const erc20 = _ERC20.bind(address);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,74,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,88,"const wbEthContract = WBETH.bind(pricedToken);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,106,"const sFraxContract = SFRAX.bind(pricedToken);"
ora-protocol,subgraphs/ora-protocol/src/mappings/helpers.ts,137,"const pendlePTContract = PendlePT.bind(pricedToken);"
ora-protocol,subgraphs/ora-protocol/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
ora-protocol,subgraphs/ora-protocol/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
ora-protocol,subgraphs/ora-protocol/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ora-protocol,subgraphs/ora-protocol/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,37,"let contract = ERC20.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,38,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
orbit,subgraphs/orbit/src/common/tokens.ts,63,"let contract = ERC20.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
orbit,subgraphs/orbit/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
orbit,subgraphs/orbit/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
orbit,subgraphs/orbit/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
orbit,subgraphs/orbit/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
origin-ether,subgraphs/origin-ether/src/mappings/handlers.ts,48,"const erc20 = _ERC20.bind(address);"
origin-ether,subgraphs/origin-ether/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
origin-ether,subgraphs/origin-ether/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
origin-ether,subgraphs/origin-ether/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
origin-ether,subgraphs/origin-ether/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
origin-ether,subgraphs/origin-ether/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
paxos-gold,subgraphs/paxos-gold/src/mappings/handlers.ts,64,"const erc20 = _ERC20.bind(address);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,11,"let contract = ERC20.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,12,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,40,"let contract = ERC20.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,41,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/common/tokens.ts,69,"let contract = ERC20.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/prices/common/utils.ts,10,"const token = _ERC20.bind(tokenAddr);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/SushiSwapRouter.ts,117,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
platypus-finance,subgraphs/platypus-finance/src/prices/routers/SushiSwapRouter.ts,136,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
portal,subgraphs/portal/src/mappings/handlers.ts,67,"const erc20 = _ERC20.bind(address);"
portal,subgraphs/portal/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
portal,subgraphs/portal/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
portal,subgraphs/portal/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
portal,subgraphs/portal/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
portal,subgraphs/portal/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
portal,subgraphs/portal/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
portal,subgraphs/portal/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
powh3d,subgraphs/powh3d/src/mappings/handlers.ts,69,"const erc20 = _ERC20.bind(address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
prime-staked-eth,subgraphs/prime-staked-eth/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
puffer-finance,subgraphs/puffer-finance/src/common/initializers.ts,83,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
puffer-finance,subgraphs/puffer-finance/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
puffer-finance,subgraphs/puffer-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
puffer-finance,subgraphs/puffer-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
puffer-finance,subgraphs/puffer-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
puffer-finance,subgraphs/puffer-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
qidao,subgraphs/qidao/src/entities/market.ts,49,"const contract = erc20QiStablecoin.bind(event.address);"
qidao,subgraphs/qidao/src/entities/market.ts,90,"const contract = QiStablecoin.bind(event.address);"
qidao,subgraphs/qidao/src/entities/market.ts,388,"contract = erc20QiStablecoin.bind(Address.fromString(market.id));"
qidao,subgraphs/qidao/src/entities/price.ts,50,"const contract = erc20QiStablecoin.bind(marketAddress);"
qidao,subgraphs/qidao/src/entities/price.ts,81,"const decimalsFunctions = QiStablecoinDecimals.bind(contract._address);"
qidao,subgraphs/qidao/src/entities/protocol.ts,256,"const maiContract = ERC20.bind(Address.fromString(maiToken.id));"
qidao,subgraphs/qidao/src/entities/token.ts,14,"const contract = ERC20.bind(tokenAddress);"
qidao,subgraphs/qidao/src/entities/token.ts,40,"const contractNameBytes = ERC20NameBytes.bind(contract._address);"
qidao,subgraphs/qidao/src/entities/token.ts,52,"const contractSymbolBytes = ERC20SymbolBytes.bind(contract._address);"
qidao,subgraphs/qidao/src/entities/token.ts,90,"const contract = ERC20.bind(tokenAddress);"
qidao,subgraphs/qidao/src/mappings/QiStablecoin.ts,67,"const contract = QiStablecoin.bind(event.address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,8,"let contract = ERC20.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,14,"let bytesContract = ERC20NameBytes.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,25,"let contract = ERC20.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,31,"let bytesContract = ERC20SymbolBytes.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/common/utils/tokens.ts,44,"let contract = ERC20.bind(address);"
rari-vaults,subgraphs/rari-vaults/src/mappings/helpers.ts,465,"let outputTokenContract = ERC20.bind(Address.fromString(vault.outputToken!));"
rari-vaults,subgraphs/rari-vaults/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
rari-vaults,subgraphs/rari-vaults/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/common/initializers.ts,77,"const contract = ERC20.bind(Address.fromString(constants.EZETH_ADDRESS));"
renzo,subgraphs/renzo/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
renzo,subgraphs/renzo/src/mappings/ezEthMappings.ts,32,"const xezEthContract = ERC20.bind(xezEthAddress);"
renzo,subgraphs/renzo/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
renzo,subgraphs/renzo/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
renzo,subgraphs/renzo/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
renzo,subgraphs/renzo/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
renzo,subgraphs/renzo/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/common/initializers.ts,43,"const contract = ERC20Contract.bind(address);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/CurveRouter.ts,255,"const poolContract = CurvePoolContract.bind(tokenAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/UniswapForksRouter.ts,109,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ribbon-finance,subgraphs/ribbon-finance/src/prices/routers/UniswapForksRouter.ts,148,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/common/initializers.ts,35,"const vaultContract = FewWrappedToken.bind("
ring-few,subgraphs/ring-few/src/common/initializers.ts,60,"const tokenContract = ERC20.bind(inputTokenAddress);"
ring-few,subgraphs/ring-few/src/common/initializers.ts,71,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
ring-few,subgraphs/ring-few/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
ring-few,subgraphs/ring-few/src/prices/common/utils.ts,50,"const tokenContract = _ERC20.bind(tokenAddr);"
ring-few,subgraphs/ring-few/src/prices/common/utils.ts,57,"const tokenContract = _ERC20.bind(tokenAddr);"
ring-few,subgraphs/ring-few/src/prices/common/utils.ts,68,"const tokenContract = _ERC20.bind(tokenAddr);"
ring-few,subgraphs/ring-few/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
ring-few,subgraphs/ring-few/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/entities/token.ts,55,"const tokenContract = _ERC20.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/entities/token.ts,65,"const tokenContract = _ERC20.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/entities/token.ts,75,"const tokenContract = _ERC20.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketNetworkBalancesMapping.ts,68,"const rETHContract = rocketTokenRETH.bind("
rocket-pool,subgraphs/rocket-pool/src/mappings/rocketTokenRETHMapping.ts,91,"const rETHContract = rocketTokenRETH.bind(event.address);"
rocket-pool,subgraphs/rocket-pool/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
rocket-pool,subgraphs/rocket-pool/src/prices/index.ts,31,"const rethPriceContract = rocketTokenRETH.bind("
rocket-pool,subgraphs/rocket-pool/src/prices/routers/SushiSwapRouter.ts,21,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/SushiSwapRouter.ts,134,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/SushiSwapRouter.ts,168,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/UniswapRouter.ts,20,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/UniswapRouter.ts,131,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
rocket-pool,subgraphs/rocket-pool/src/prices/routers/UniswapRouter.ts,168,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/entities/token.ts,16,"const contract = ERC20.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/entities/token.ts,43,"const contractNameBytes = ERC20NameBytes.bind(contract._address);"
saddle-finance,subgraphs/saddle-finance/src/entities/token.ts,55,"const contractSymbolBytes = ERC20SymbolBytes.bind(contract._address);"
saddle-finance,subgraphs/saddle-finance/src/entities/token.ts,77,"const contract = ERC20.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
saddle-finance,subgraphs/saddle-finance/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
slisbnb,subgraphs/slisbnb/src/mappings/handlers.ts,137,"const erc20 = _ERC20.bind(address);"
slisbnb,subgraphs/slisbnb/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
slisbnb,subgraphs/slisbnb/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
slisbnb,subgraphs/slisbnb/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
slisbnb,subgraphs/slisbnb/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
slisbnb,subgraphs/slisbnb/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
spiko,subgraphs/spiko/src/mappings/handlers.ts,54,"const erc20 = _ERC20.bind(address);"
stader,subgraphs/stader/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
stader,subgraphs/stader/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
stader,subgraphs/stader/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
stader,subgraphs/stader/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
stader,subgraphs/stader/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stader,subgraphs/stader/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/mappings/handlers.ts,57,"const erc20 = _ERC20.bind(address);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stake-link-liquid,subgraphs/stake-link-liquid/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/common/utils.ts,13,"const token = PriceOracleERC20.bind(tokenAddr);"
stakedao,subgraphs/stakedao/src/Prices/routers/SushiSwapRouter.ts,18,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/SushiSwapRouter.ts,128,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/SushiSwapRouter.ts,159,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/UniswapRouter.ts,18,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/UniswapRouter.ts,128,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/Prices/routers/UniswapRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakedao,subgraphs/stakedao/src/common/initializers.ts,75,"const contract = ERC20Contract.bind(address);"
stakedao,subgraphs/stakedao/src/common/utils.ts,28,"const token = ERC20Contract.bind(tokenAddr);"
stakestone,subgraphs/stakestone/src/mappings/handlers.ts,49,"const erc20 = _ERC20.bind(address);"
stakestone,subgraphs/stakestone/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
stakestone,subgraphs/stakestone/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
stakestone,subgraphs/stakestone/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
stakestone,subgraphs/stakestone/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakestone,subgraphs/stakestone/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers-gnosis.ts,61,"const erc20 = _ERC20.bind(address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers-gnosis.ts,85,"const contract = StakedGnoToken.bind(event.address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,76,"const erc20 = _ERC20.bind(address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,100,"const contract = RewardEthToken.bind(event.address);"
stakewise-v2,subgraphs/stakewise-v2/src/mappings/handlers.ts,131,"const contract = StakedEthToken.bind(event.address);"
stargate,subgraphs/stargate/src/common/tokens.ts,17,"let contract = ERC20.bind(tokenAddress);"
stargate,subgraphs/stargate/src/common/tokens.ts,18,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
stargate,subgraphs/stargate/src/common/tokens.ts,47,"let contract = ERC20.bind(tokenAddress);"
stargate,subgraphs/stargate/src/common/tokens.ts,48,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
stargate,subgraphs/stargate/src/common/tokens.ts,77,"let contract = ERC20.bind(tokenAddress);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,88,"const wrappedERC20 = Pool.bind(address);"
stargate,subgraphs/stargate/src/mappings/handlers.ts,91,"const erc20 = _ERC20.bind(address);"
stargate,subgraphs/stargate/src/prices/common/utils.ts,31,"const tokenContract = _ERC20.bind(tokenAddr);"
stargate,subgraphs/stargate/src/prices/common/utils.ts,38,"const tokenContract = _ERC20.bind(tokenAddr);"
stargate,subgraphs/stargate/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
stargate,subgraphs/stargate/src/prices/routers/CurveRouter.ts,256,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stargate,subgraphs/stargate/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stargate,subgraphs/stargate/src/prices/routers/UniswapForksRouter.ts,110,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stargate,subgraphs/stargate/src/prices/routers/UniswapForksRouter.ts,149,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stcelo,subgraphs/stcelo/src/mappings/handlers.ts,64,"const erc20 = _ERC20.bind(address);"
stream-finance,subgraphs/stream-finance/src/common/utils.ts,36,"const contract = ERC20.bind(address);"
stream-finance,subgraphs/stream-finance/src/common/utils.ts,67,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
stream-finance,subgraphs/stream-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
stream-finance,subgraphs/stream-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
stream-finance,subgraphs/stream-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
stream-finance,subgraphs/stream-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
stream-finance,subgraphs/stream-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
superseed,subgraphs/superseed/src/mappings/handlers.ts,46,"const erc20 = _ERC20.bind(address);"
suzaku,subgraphs/suzaku/src/mappings/handlers.ts,77,"const erc20 = _ERC20.bind(address);"
suzaku,subgraphs/suzaku/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
suzaku,subgraphs/suzaku/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
suzaku,subgraphs/suzaku/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
suzaku,subgraphs/suzaku/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
suzaku,subgraphs/suzaku/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/mappings/handlers.ts,65,"const erc20 = _ERC20.bind(address);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
swell-liquid-staking,subgraphs/swell-liquid-staking/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
symbiotic,subgraphs/symbiotic/src/mappings/handlers.ts,92,"const erc20 = _ERC20.bind(address);"
symbiotic,subgraphs/symbiotic/src/mappings/helpers.ts,40,"const wbEthContract = WBETH.bind(pricedToken);"
symbiotic,subgraphs/symbiotic/src/mappings/helpers.ts,55,"const sFraxContract = SFRAX.bind(pricedToken);"
symbiotic,subgraphs/symbiotic/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
symbiotic,subgraphs/symbiotic/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
symbiotic,subgraphs/symbiotic/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
symbiotic,subgraphs/symbiotic/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
symbiotic,subgraphs/symbiotic/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,84,"const erc20 = _ERC20.bind(address);"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,107,"const tokenContract = _ERC20.bind(Address.fromBytes(token.id));"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,137,"const tokenContract = _ERC20.bind(Address.fromBytes(token.id));"
tenderize-v2,subgraphs/tenderize-v2/src/mappings/handlers.ts,167,"const tokenContract = _ERC20.bind(Address.fromBytes(token.id));"
tenderize-v2,subgraphs/tenderize-v2/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tenderize-v2,subgraphs/tenderize-v2/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tensorplex,subgraphs/tensorplex/src/mappings/handlers.ts,77,"const erc20 = _ERC20.bind(address);"
tensorplex,subgraphs/tensorplex/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
tensorplex,subgraphs/tensorplex/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
tensorplex,subgraphs/tensorplex/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
tensorplex,subgraphs/tensorplex/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tensorplex,subgraphs/tensorplex/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tether-gold,subgraphs/tether-gold/src/mappings/handlers.ts,65,"const erc20 = _ERC20.bind(address);"
the-graph,subgraphs/the-graph/src/common/getters.ts,157,"const erc20Contract = _ERC20.bind(Address.fromString(address));"
the-graph,subgraphs/the-graph/src/prices/common/utils.ts,34,"const tokenContract = _ERC20.bind(tokenAddr);"
the-graph,subgraphs/the-graph/src/prices/common/utils.ts,41,"const tokenContract = _ERC20.bind(tokenAddr);"
the-graph,subgraphs/the-graph/src/prices/common/utils.ts,52,"const tokenContract = _ERC20.bind(tokenAddr);"
the-graph,subgraphs/the-graph/src/prices/routers/CurveRouter.ts,300,"const poolContract = CurvePoolContract.bind(tokenAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/UniswapForksRouter.ts,11,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/UniswapForksRouter.ts,119,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
the-graph,subgraphs/the-graph/src/prices/routers/UniswapForksRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/common/tokens.ts,12,"let erc20Contract = ERC20Contract.bind(address);"
tokemak,subgraphs/tokemak/src/prices/common/utils.ts,10,"const token = _ERC20.bind(tokenAddr);"
tokemak,subgraphs/tokemak/src/prices/routers/SushiSwapRouter.ts,16,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/SushiSwapRouter.ts,105,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/SushiSwapRouter.ts,124,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/UniswapRouter.ts,17,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/UniswapRouter.ts,102,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tokemak,subgraphs/tokemak/src/prices/routers/UniswapRouter.ts,127,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/protocols/tornado-cash/config/deployments/tornado-cash-classic-bsc/configurations.ts,57,"let contract = TornadoCashERC20.bind(Address.fromString(poolAddress));"
tornado-cash,subgraphs/tornado-cash/protocols/tornado-cash/config/deployments/tornado-cash-classic-ethereum/configurations.ts,57,"let contract = TornadoCashERC20.bind(Address.fromString(poolAddress));"
tornado-cash,subgraphs/tornado-cash/src/common/getters.ts,143,"const contractTCERC20 = TornadoCashERC20.bind("
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,14,"let contract = ERC20.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,15,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,44,"let contract = ERC20.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,45,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/common/tokens.ts,74,"let contract = ERC20.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/UniswapRouter.ts,141,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
tornado-cash,subgraphs/tornado-cash/src/prices/routers/UniswapRouter.ts,178,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/entities/token.ts,15,"const contract = IERC20Detailed.bind(tokenAddress);"
truefi,subgraphs/truefi/src/entities/token.ts,46,"const contractNameBytes = IERC20DetailedBytes.bind(contract._address);"
truefi,subgraphs/truefi/src/entities/token.ts,58,"let contractSymbolBytes = IERC20DetailedBytes.bind(contract._address);"
truefi,subgraphs/truefi/src/mappings/Liquidator.ts,8,"const contract = LoanToken.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/LoanToken.ts,28,"const contract = LoanToken.bind(event.address);"
truefi,subgraphs/truefi/src/mappings/LoanToken.ts,79,"const contract = LoanToken.bind(event.address);"
truefi,subgraphs/truefi/src/prices/common/utils.ts,13,"const token = _ERC20.bind(tokenAddr);"
truefi,subgraphs/truefi/src/prices/routers/SushiSwapRouter.ts,20,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/SushiSwapRouter.ts,133,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/SushiSwapRouter.ts,167,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/UniswapRouter.ts,19,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/UniswapRouter.ts,130,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
truefi,subgraphs/truefi/src/prices/routers/UniswapRouter.ts,167,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/common/initializers.ts,88,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
umami-finance,subgraphs/umami-finance/src/common/utils.ts,34,"const contract = ERC20.bind(address);"
umami-finance,subgraphs/umami-finance/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
umami-finance,subgraphs/umami-finance/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
umami-finance,subgraphs/umami-finance/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
umami-finance,subgraphs/umami-finance/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
umami-finance,subgraphs/umami-finance/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
uniswap-forks,subgraphs/uniswap-forks/protocols/camelot-v2/src/common/handlers.ts,75,"const rewardTokenContract = GrailTokenV2.bind("
uniswap-forks,subgraphs/uniswap-forks/protocols/trader-joe/src/common/handlers/handleRewarder.ts,284,"const token = ERC20.bind(tokenCall.value);"
uniswap-forks,subgraphs/uniswap-forks/src/common/getters.ts,284,"const erc20Contract = ERC20.bind(Address.fromString(address));"
uniswap-forks-swap,subgraphs/uniswap-forks-swap/src/common/getters.ts,59,"const erc20Contract = ERC20.bind(Address.fromString(address));"
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/entities/token.ts,37,"const erc20Contract = ERC20.bind(Address.fromBytes(address));"
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/utils/backfill.ts,49,"const token0Contract = ERC20.bind("
uniswap-v3-forks,subgraphs/uniswap-v3-forks/src/common/utils/backfill.ts,58,"const token1Contract = ERC20.bind("
uniswap-v3-forks-swap,subgraphs/uniswap-v3-forks-swap/src/common/entities/token.ts,24,"const erc20Contract = ERC20.bind(Address.fromBytes(address));"
usual,subgraphs/usual/src/mappings/handlers.ts,57,"const erc20 = _ERC20.bind(address);"
vaultka,subgraphs/vaultka/src/common/utils.ts,36,"const contract = ERC20.bind(address);"
vaultka,subgraphs/vaultka/src/common/utils.ts,67,"const contract = ERC20.bind(Address.fromBytes(pool.getBytesID()));"
vaultka,subgraphs/vaultka/src/prices/common/utils.ts,49,"const tokenContract = _ERC20.bind(tokenAddr);"
vaultka,subgraphs/vaultka/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
vaultka,subgraphs/vaultka/src/prices/common/utils.ts,67,"const tokenContract = _ERC20.bind(tokenAddr);"
vaultka,subgraphs/vaultka/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
vaultka,subgraphs/vaultka/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,13,"let contract = ERC20.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,14,"let contractSymbolBytes = ERC20SymbolBytes.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,43,"let contract = ERC20.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,44,"let contractNameBytes = ERC20NameBytes.bind(tokenAddress);"
velodrome-finance,subgraphs/velodrome-finance/src/common/tokens.ts,73,"let contract = ERC20.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/common/initializers.ts,108,"const contract = ERC20Contract.bind(address);"
vesper-finance,subgraphs/vesper-finance/src/common/utils.ts,23,"const token = ERC20Contract.bind(tokenAddr);"
vesper-finance,subgraphs/vesper-finance/src/prices/common/utils.ts,10,"const token = _ERC20.bind(tokenAddr);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/SushiSwapRouter.ts,16,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/SushiSwapRouter.ts,105,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/SushiSwapRouter.ts,124,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/UniswapRouter.ts,16,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/UniswapRouter.ts,101,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
vesper-finance,subgraphs/vesper-finance/src/prices/routers/UniswapRouter.ts,126,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
vesta-finance,subgraphs/vesta-finance/src/entities/protocol.ts,263,"const vstTokenContract = VSTTokenContract.bind("
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,68,"const contract = IERC20Detailed.bind(tokenAddress);"
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,125,"const contractNameBytes = IERC20DetailedBytes.bind(contract._address);"
vesta-finance,subgraphs/vesta-finance/src/entities/token.ts,137,"const contractSymbolBytes = IERC20DetailedBytes.bind(contract._address);"
yearn-v2,subgraphs/yearn-v2/src/Prices/common/utils.ts,13,"const token = PriceOracleERC20.bind(tokenAddr);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/SushiSwapRouter.ts,21,"const lpToken = SushiSwapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/SushiSwapRouter.ts,131,"const sushiswapPair = SushiSwapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/SushiSwapRouter.ts,162,"const sushiSwapPair = SushiSwapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/UniswapRouter.ts,20,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/UniswapRouter.ts,128,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/Prices/routers/UniswapRouter.ts,162,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yearn-v2,subgraphs/yearn-v2/src/common/initializers.ts,71,"const contract = ERC20Contract.bind(address);"
yearn-v2,subgraphs/yearn-v2/src/common/utils.ts,24,"const token = ERC20Contract.bind(tokenAddr);"
yeti-finance,subgraphs/yeti-finance/src/entities/token.ts,13,"const contract = ERC20Contract.bind(address);"
yieldnest,subgraphs/yieldnest/src/mappings/handlers.ts,103,"const erc20 = _ERC20.bind(address);"
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,49,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,63,"const wbEthContract = WBETH.bind(pricedToken);"
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,81,"const sFraxContract = SFRAX.bind(pricedToken);"
yieldnest,subgraphs/yieldnest/src/mappings/helpers.ts,112,"const pendlePTContract = PendlePT.bind(pricedToken);"
yieldnest,subgraphs/yieldnest/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldnest,subgraphs/yieldnest/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldnest,subgraphs/yieldnest/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldnest,subgraphs/yieldnest/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yieldnest,subgraphs/yieldnest/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/mappings/handlers.ts,95,"const erc20 = _ERC20.bind(address);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/common/utils.ts,56,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/common/utils.ts,63,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/common/utils.ts,74,"const tokenContract = _ERC20.bind(tokenAddr);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,12,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,142,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
yieldyak-staked-avax,subgraphs/yieldyak-staked-avax/src/prices/routers/UniswapForksRouter.ts,185,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/handlers.ts,80,"const erc20 = _ERC20.bind(address);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/helpers.ts,42,"const egEthContract = EGETH.bind(pricedToken);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/helpers.ts,58,"const mlrtContract = EigenpieMLRT.bind(pricedToken);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/helpers.ts,72,"const wbEthContract = WBETH.bind(pricedToken);"
zircuit-staking,subgraphs/zircuit-staking/src/mappings/helpers.ts,97,"const sFraxContract = SFRAX.bind(pricedToken);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/common/utils.ts,55,"const tokenContract = _ERC20.bind(tokenAddr);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/common/utils.ts,62,"const tokenContract = _ERC20.bind(tokenAddr);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/common/utils.ts,73,"const tokenContract = _ERC20.bind(tokenAddr);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/CurveRouter.ts,304,"const poolContract = CurvePoolContract.bind(tokenAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,13,"const lpToken = UniswapRouterContract.bind(tokenAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,143,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"
zircuit-staking,subgraphs/zircuit-staking/src/prices/routers/UniswapForksRouter.ts,186,"const uniSwapPair = UniswapPairContract.bind(tokenAddress);"

Summary:
Total token-related contract calls found: 1308
Projects with token-related contract calls: 144 / 160

Projects with token-related contract calls:
- aave-forks
- abracadabra
- across-v2
- affine-restaking
- alpaca-finance-lending
- amphor
- anzen-v2
- aqua-patina
- arbitrum-one-bridge
- arrakis-finance
- aspida
- aura-finance
- aurus
- axelar
- badgerdao
- balancer-forks
- bancor-v3
- bedrock-unieth
- beefy-finance
- beethovenx-sftmx
- belt-finance
- benqi-staked-avax
- binance-staked-eth
- blackwing
- bob-fusion
- bracket-escrow-staking
- cbridge
- chainlink-staking
- coinbase-wrapped-staked-eth
- compound-forks
- compound-v3
- concentrator
- convex-finance
- creth2
- curve-finance
- cygnus-finance
- deq
- dinero-pxeth
- dopex
- eigenlayer
- eigenpie
- ellipsis-finance
- erc20
- etherfi
- euler-finance
- flat-money
- frax-ether-staking
- fx-protocol
- gains-trade
- gamma-strategies
- gaurda-staking
- geode
- gmx-forks
- gogopool
- goldfinch
- gudchain
- hop-protocol
- hord-fi
- hyperlock-finance
- inception
- inverse-finance
- karak
- kelp-dao
- kernel-protocol
- klimadao
- kwenta
- level-finance
- lido
- liquid-collective
- liquity
- livepeer
- llama-airforce
- lybra-finance
- m0-power
- makerdao
- mantle-staked-eth
- maple-finance-v1
- maple-finance-v2
- matrixdock
- mellow-lrt
- mev-protocol
- morpho
- morpho-blue
- mountain-protocol
- multichain
- mux-protocol
- nexus-mutual
- node-dao
- notional-finance
- openzeppelin-governor
- optimism-bridge-v2
- opyn-gamma
- ora-protocol
- orbit
- origin-ether
- paxos-gold
- platypus-finance
- portal
- powh3d
- prime-staked-eth
- puffer-finance
- qidao
- rari-vaults
- renzo
- ribbon-finance
- ring-few
- rocket-pool
- saddle-finance
- slisbnb
- spiko
- stader
- stake-link-liquid
- stakedao
- stakestone
- stakewise-v2
- stargate
- stcelo
- stream-finance
- superseed
- suzaku
- swell-liquid-staking
- symbiotic
- tenderize-v2
- tensorplex
- tether-gold
- the-graph
- tokemak
- tornado-cash
- truefi
- umami-finance
- uniswap-forks
- uniswap-forks-swap
- uniswap-v3-forks
- uniswap-v3-forks-swap
- usual
- vaultka
- velodrome-finance
- vesper-finance
- vesta-finance
- yearn-v2
- yeti-finance
- yieldnest
- yieldyak-staked-avax
- zircuit-staking
